commit ca2a11b79caa28c28a13a105d5e63f7ab1d0ba35
Author: u <u@bufn1.brest.local>
Date:   Wed May 1 16:23:47 2024 +0300

    until

diff --git a/0001-incr-decr-patch.patch b/0001-incr-decr-patch.patch
new file mode 100644
index 0000000000..e34abde4c2
--- /dev/null
+++ b/0001-incr-decr-patch.patch
@@ -0,0 +1,3039 @@
+From ac000c8772101cae3c93be95980397840122805d Mon Sep 17 00:00:00 2001
+From: u <u@bufn1.brest.local>
+Date: Tue, 30 Apr 2024 20:01:56 +0300
+Subject: [PATCH 1/1] incr decr patch
+
+---
+ Grammar/Grammar      |    8 +-
+ Include/Python-ast.h |   27 +-
+ Include/graminit.h   |  132 +--
+ Include/token.h      |    3 +
+ Parser/tokenizer.c   |    6 +-
+ Python/ast.c         |   41 +
+ Python/graminit.c    | 1908 +++++++++++++++++++++---------------------
+ 7 files changed, 1113 insertions(+), 1012 deletions(-)
+
+diff --git a/Grammar/Grammar b/Grammar/Grammar
+index 59c807ef0c..7b3157f5e5 100644
+--- a/Grammar/Grammar
++++ b/Grammar/Grammar
+@@ -39,13 +39,19 @@ simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
+ small_stmt: (expr_stmt | del_stmt | pass_stmt | flow_stmt |
+              import_stmt | global_stmt | nonlocal_stmt | assert_stmt)
+ expr_stmt: testlist_star_expr (annassign | augassign (yield_expr|testlist) |
+-                     ('=' (yield_expr|testlist_star_expr))*)
++                     ('=' (yield_expr|testlist_star_expr))* | incr_stmt | decr_stmt)
+ annassign: ':' test ['=' test]
+ testlist_star_expr: (test|star_expr) (',' (test|star_expr))* [',']
+ augassign: ('+=' | '-=' | '*=' | '@=' | '/=' | '%=' | '&=' | '|=' | '^=' |
+             '<<=' | '>>=' | '**=' | '//=')
+ # For normal and annotated assignments, additional restrictions enforced by the interpreter
+ del_stmt: 'del' exprlist
++
++# New statements
++incr_stmt: '++'
++decr_stmt: '--'
++
++
+ pass_stmt: 'pass'
+ flow_stmt: break_stmt | continue_stmt | return_stmt | raise_stmt | yield_stmt
+ break_stmt: 'break'
+diff --git a/Include/Python-ast.h b/Include/Python-ast.h
+index 70494b70f6..a39cdda5c6 100644
+--- a/Include/Python-ast.h
++++ b/Include/Python-ast.h
+@@ -65,12 +65,12 @@ struct _mod {
+ 
+ enum _stmt_kind {FunctionDef_kind=1, AsyncFunctionDef_kind=2, ClassDef_kind=3,
+                   Return_kind=4, Delete_kind=5, Assign_kind=6,
+-                  AugAssign_kind=7, AnnAssign_kind=8, For_kind=9,
+-                  AsyncFor_kind=10, While_kind=11, If_kind=12, With_kind=13,
+-                  AsyncWith_kind=14, Raise_kind=15, Try_kind=16,
+-                  Assert_kind=17, Import_kind=18, ImportFrom_kind=19,
+-                  Global_kind=20, Nonlocal_kind=21, Expr_kind=22, Pass_kind=23,
+-                  Break_kind=24, Continue_kind=25};
++                  AugAssign_kind=7, Increment_kind=8, Decrement_kind=9, AnnAssign_kind=10, For_kind=11,
++                  AsyncFor_kind=12, While_kind=13, If_kind=14, With_kind=15,
++                  AsyncWith_kind=16, Raise_kind=17, Try_kind=18,
++                  Assert_kind=19, Import_kind=20, ImportFrom_kind=21,
++                  Global_kind=22, Nonlocal_kind=23, Expr_kind=24, Pass_kind=25,
++                  Break_kind=26, Continue_kind=27};
+ struct _stmt {
+     enum _stmt_kind kind;
+     union {
+@@ -116,6 +116,14 @@ struct _stmt {
+             operator_ty op;
+             expr_ty value;
+         } AugAssign;
++
++        struct {
++            expr_ty target;
++        } Increment;
++
++        struct {
++            expr_ty target;
++        } Decrement;
+         
+         struct {
+             expr_ty target;
+@@ -470,6 +478,13 @@ stmt_ty _Py_Assign(asdl_seq * targets, expr_ty value, int lineno, int
+ #define AugAssign(a0, a1, a2, a3, a4, a5) _Py_AugAssign(a0, a1, a2, a3, a4, a5)
+ stmt_ty _Py_AugAssign(expr_ty target, operator_ty op, expr_ty value, int
+                       lineno, int col_offset, PyArena *arena);
++#define Increment(a0, a1, a2, a3) _Py_Increment(a0, a1, a2, a3)
++stmt_ty _Py_Increment(expr_ty target, int lineno, int col_offset, PyArena
++                      *arena);
++#define Decrement(a0, a1, a2, a3) _Py_Decrement(a0, a1, a2, a3)
++stmt_ty _Py_Decrement(expr_ty target, int lineno, int col_offset, PyArena
++                      *arena);
++
+ #define AnnAssign(a0, a1, a2, a3, a4, a5, a6) _Py_AnnAssign(a0, a1, a2, a3, a4, a5, a6)
+ stmt_ty _Py_AnnAssign(expr_ty target, expr_ty annotation, expr_ty value, int
+                       simple, int lineno, int col_offset, PyArena *arena);
+diff --git a/Include/graminit.h b/Include/graminit.h
+index e9b4a93859..7d988f7cf1 100644
+--- a/Include/graminit.h
++++ b/Include/graminit.h
+@@ -21,68 +21,70 @@
+ #define testlist_star_expr 274
+ #define augassign 275
+ #define del_stmt 276
+-#define pass_stmt 277
+-#define flow_stmt 278
+-#define break_stmt 279
+-#define continue_stmt 280
+-#define return_stmt 281
+-#define yield_stmt 282
+-#define raise_stmt 283
+-#define import_stmt 284
+-#define import_name 285
+-#define import_from 286
+-#define import_as_name 287
+-#define dotted_as_name 288
+-#define import_as_names 289
+-#define dotted_as_names 290
+-#define dotted_name 291
+-#define global_stmt 292
+-#define nonlocal_stmt 293
+-#define assert_stmt 294
+-#define compound_stmt 295
+-#define async_stmt 296
+-#define if_stmt 297
+-#define while_stmt 298
+-#define for_stmt 299
+-#define try_stmt 300
+-#define with_stmt 301
+-#define with_item 302
+-#define except_clause 303
+-#define suite 304
+-#define test 305
+-#define test_nocond 306
+-#define lambdef 307
+-#define lambdef_nocond 308
+-#define or_test 309
+-#define and_test 310
+-#define not_test 311
+-#define comparison 312
+-#define comp_op 313
+-#define star_expr 314
+-#define expr 315
+-#define xor_expr 316
+-#define and_expr 317
+-#define shift_expr 318
+-#define arith_expr 319
+-#define term 320
+-#define factor 321
+-#define power 322
+-#define atom_expr 323
+-#define atom 324
+-#define testlist_comp 325
+-#define trailer 326
+-#define subscriptlist 327
+-#define subscript 328
+-#define sliceop 329
+-#define exprlist 330
+-#define testlist 331
+-#define dictorsetmaker 332
+-#define classdef 333
+-#define arglist 334
+-#define argument 335
+-#define comp_iter 336
+-#define comp_for 337
+-#define comp_if 338
+-#define encoding_decl 339
+-#define yield_expr 340
+-#define yield_arg 341
++#define incr_stmt 277
++#define decr_stmt 278
++#define pass_stmt 279
++#define flow_stmt 280
++#define break_stmt 281
++#define continue_stmt 282
++#define return_stmt 283
++#define yield_stmt 284
++#define raise_stmt 285
++#define import_stmt 286
++#define import_name 287
++#define import_from 288
++#define import_as_name 289
++#define dotted_as_name 290
++#define import_as_names 291
++#define dotted_as_names 292
++#define dotted_name 293
++#define global_stmt 294
++#define nonlocal_stmt 295
++#define assert_stmt 296
++#define compound_stmt 297
++#define async_stmt 298
++#define if_stmt 299
++#define while_stmt 300
++#define for_stmt 301
++#define try_stmt 302
++#define with_stmt 303
++#define with_item 304
++#define except_clause 305
++#define suite 306
++#define test 307
++#define test_nocond 308
++#define lambdef 309
++#define lambdef_nocond 310
++#define or_test 311
++#define and_test 312
++#define not_test 313
++#define comparison 314
++#define comp_op 315
++#define star_expr 316
++#define expr 317
++#define xor_expr 318
++#define and_expr 319
++#define shift_expr 320
++#define arith_expr 321
++#define term 322
++#define factor 323
++#define power 324
++#define atom_expr 325
++#define atom 326
++#define testlist_comp 327
++#define trailer 328
++#define subscriptlist 329
++#define subscript 330
++#define sliceop 331
++#define exprlist 332
++#define testlist 333
++#define dictorsetmaker 334
++#define classdef 335
++#define arglist 336
++#define argument 337
++#define comp_iter 338
++#define comp_for 339
++#define comp_if 340
++#define encoding_decl 341
++#define yield_expr 342
++#define yield_arg 343
+diff --git a/Include/token.h b/Include/token.h
+index 595afa0158..e57bbfb0f3 100644
+--- a/Include/token.h
++++ b/Include/token.h
+@@ -68,6 +68,9 @@ extern "C" {
+ #define ASYNC		55
+ #define ERRORTOKEN	56
+ #define N_TOKENS	57
++#define INCREMENT	58
++#define DECREMENT	59
++
+ 
+ /* Special definitions for cooperation with parser */
+ 
+diff --git a/Parser/tokenizer.c b/Parser/tokenizer.c
+index 5cc9533c3c..614479c946 100644
+--- a/Parser/tokenizer.c
++++ b/Parser/tokenizer.c
+@@ -106,7 +106,9 @@ const char *_PyParser_TokenNames[] = {
+     "AWAIT",
+     "ASYNC",
+     "<ERRORTOKEN>",
+-    "<N_TOKENS>"
++    "<N_TOKENS>",
++    "INCREMENT",
++    "DECREMENT"
+ };
+ 
+ 
+@@ -1175,11 +1177,13 @@ PyToken_TwoChars(int c1, int c2)
+         break;
+     case '+':
+         switch (c2) {
++        case '+':               return INCREMENT;
+         case '=':               return PLUSEQUAL;
+         }
+         break;
+     case '-':
+         switch (c2) {
++        case '-':               return DECREMENT;
+         case '=':               return MINEQUAL;
+         case '>':               return RARROW;
+         }
+diff --git a/Python/ast.c b/Python/ast.c
+index 5c5738f6ed..3495e257a6 100644
+--- a/Python/ast.c
++++ b/Python/ast.c
+@@ -3009,6 +3009,47 @@ ast_for_expr_stmt(struct compiling *c, const node *n)
+                              LINENO(n), n->n_col_offset, c->c_arena);
+         }
+     }
++    else if ((TYPE(CHILD(n, 1)) == incr_stmt) || (TYPE(CHILD(n, 1)) == decr_stmt)) {
++        expr_ty expr1, expr2;
++        node *ch = CHILD(n, 0);
++        operator_ty operator;
++
++        switch (TYPE(CHILD(n, 1))){
++            case incr_stmt:
++                operator = Add; 
++                break;
++            case decr_stmt:
++                operator = Sub; 
++                break;
++        }
++
++        expr1 = ast_for_testlist(c, ch);
++        if (!expr1) {
++            return NULL;
++        }
++        switch (expr1->kind) {
++            case Name_kind:
++                if (forbidden_name(c, expr1->v.Name.id, n, 0)) {
++                    return NULL;
++                }
++                expr1->v.Name.ctx = Store;
++                break;
++            default:
++                ast_error(c, ch,
++                          "illegal target for increment/decrement");
++                return NULL;
++        }
++        // Create a PyObject for the number 1
++        PyObject *pynum = parsenumber(c, "1");
++
++        if (PyArena_AddPyObject(c->c_arena, pynum) < 0) {
++            Py_DECREF(pynum);
++            return NULL;
++        }
++        // Create that as an expression on the same line and offset as the ++/--
++        expr2 = Num(pynum, LINENO(n), n->n_col_offset, c->c_arena);
++        return AugAssign(expr1, operator, expr2, LINENO(n), n->n_col_offset, c->c_arena);
++    }
+     else {
+         int i;
+         asdl_seq *targets;
+diff --git a/Python/graminit.c b/Python/graminit.c
+index f2584e0a2a..5f39a2e2cf 100644
+--- a/Python/graminit.c
++++ b/Python/graminit.c
+@@ -459,10 +459,12 @@ static state states_15[2] = {
+ static arc arcs_16_0[1] = {
+     {47, 1},
+ };
+-static arc arcs_16_1[4] = {
++static arc arcs_16_1[6] = {
+     {48, 2},
+     {49, 3},
+     {31, 4},
++    {51, 2},
++    {52, 2},
+     {0, 1},
+ };
+ static arc arcs_16_2[1] = {
+@@ -482,7 +484,7 @@ static arc arcs_16_5[2] = {
+ };
+ static state states_16[6] = {
+     {1, arcs_16_0},
+-    {4, arcs_16_1},
++    {6, arcs_16_1},
+     {1, arcs_16_2},
+     {2, arcs_16_3},
+     {2, arcs_16_4},
+@@ -513,7 +515,7 @@ static state states_17[5] = {
+ };
+ static arc arcs_18_0[2] = {
+     {26, 1},
+-    {51, 1},
++    {53, 1},
+ };
+ static arc arcs_18_1[2] = {
+     {32, 2},
+@@ -521,7 +523,7 @@ static arc arcs_18_1[2] = {
+ };
+ static arc arcs_18_2[3] = {
+     {26, 1},
+-    {51, 1},
++    {53, 1},
+     {0, 2},
+ };
+ static state states_18[3] = {
+@@ -530,8 +532,6 @@ static state states_18[3] = {
+     {3, arcs_18_2},
+ };
+ static arc arcs_19_0[13] = {
+-    {52, 1},
+-    {53, 1},
+     {54, 1},
+     {55, 1},
+     {56, 1},
+@@ -543,6 +543,8 @@ static arc arcs_19_0[13] = {
+     {62, 1},
+     {63, 1},
+     {64, 1},
++    {65, 1},
++    {66, 1},
+ };
+ static arc arcs_19_1[1] = {
+     {0, 1},
+@@ -552,10 +554,10 @@ static state states_19[2] = {
+     {1, arcs_19_1},
+ };
+ static arc arcs_20_0[1] = {
+-    {65, 1},
++    {67, 1},
+ };
+ static arc arcs_20_1[1] = {
+-    {66, 2},
++    {68, 2},
+ };
+ static arc arcs_20_2[1] = {
+     {0, 2},
+@@ -566,7 +568,7 @@ static state states_20[3] = {
+     {1, arcs_20_2},
+ };
+ static arc arcs_21_0[1] = {
+-    {67, 1},
++    {69, 1},
+ };
+ static arc arcs_21_1[1] = {
+     {0, 1},
+@@ -575,22 +577,18 @@ static state states_21[2] = {
+     {1, arcs_21_0},
+     {1, arcs_21_1},
+ };
+-static arc arcs_22_0[5] = {
+-    {68, 1},
+-    {69, 1},
++static arc arcs_22_0[1] = {
+     {70, 1},
+-    {71, 1},
+-    {72, 1},
+ };
+ static arc arcs_22_1[1] = {
+     {0, 1},
+ };
+ static state states_22[2] = {
+-    {5, arcs_22_0},
++    {1, arcs_22_0},
+     {1, arcs_22_1},
+ };
+ static arc arcs_23_0[1] = {
+-    {73, 1},
++    {71, 1},
+ };
+ static arc arcs_23_1[1] = {
+     {0, 1},
+@@ -599,33 +597,32 @@ static state states_23[2] = {
+     {1, arcs_23_0},
+     {1, arcs_23_1},
+ };
+-static arc arcs_24_0[1] = {
++static arc arcs_24_0[5] = {
++    {72, 1},
++    {73, 1},
+     {74, 1},
++    {75, 1},
++    {76, 1},
+ };
+ static arc arcs_24_1[1] = {
+     {0, 1},
+ };
+ static state states_24[2] = {
+-    {1, arcs_24_0},
++    {5, arcs_24_0},
+     {1, arcs_24_1},
+ };
+ static arc arcs_25_0[1] = {
+-    {75, 1},
++    {77, 1},
+ };
+-static arc arcs_25_1[2] = {
+-    {9, 2},
++static arc arcs_25_1[1] = {
+     {0, 1},
+ };
+-static arc arcs_25_2[1] = {
+-    {0, 2},
+-};
+-static state states_25[3] = {
++static state states_25[2] = {
+     {1, arcs_25_0},
+-    {2, arcs_25_1},
+-    {1, arcs_25_2},
++    {1, arcs_25_1},
+ };
+ static arc arcs_26_0[1] = {
+-    {50, 1},
++    {78, 1},
+ };
+ static arc arcs_26_1[1] = {
+     {0, 1},
+@@ -635,717 +632,720 @@ static state states_26[2] = {
+     {1, arcs_26_1},
+ };
+ static arc arcs_27_0[1] = {
+-    {76, 1},
++    {79, 1},
+ };
+ static arc arcs_27_1[2] = {
+-    {26, 2},
++    {9, 2},
+     {0, 1},
+ };
+-static arc arcs_27_2[2] = {
+-    {77, 3},
++static arc arcs_27_2[1] = {
+     {0, 2},
+ };
+-static arc arcs_27_3[1] = {
+-    {26, 4},
+-};
+-static arc arcs_27_4[1] = {
+-    {0, 4},
+-};
+-static state states_27[5] = {
++static state states_27[3] = {
+     {1, arcs_27_0},
+     {2, arcs_27_1},
+-    {2, arcs_27_2},
+-    {1, arcs_27_3},
+-    {1, arcs_27_4},
++    {1, arcs_27_2},
+ };
+-static arc arcs_28_0[2] = {
+-    {78, 1},
+-    {79, 1},
++static arc arcs_28_0[1] = {
++    {50, 1},
+ };
+ static arc arcs_28_1[1] = {
+     {0, 1},
+ };
+ static state states_28[2] = {
+-    {2, arcs_28_0},
++    {1, arcs_28_0},
+     {1, arcs_28_1},
+ };
+ static arc arcs_29_0[1] = {
+     {80, 1},
+ };
+-static arc arcs_29_1[1] = {
+-    {81, 2},
++static arc arcs_29_1[2] = {
++    {26, 2},
++    {0, 1},
+ };
+-static arc arcs_29_2[1] = {
++static arc arcs_29_2[2] = {
++    {81, 3},
+     {0, 2},
+ };
+-static state states_29[3] = {
++static arc arcs_29_3[1] = {
++    {26, 4},
++};
++static arc arcs_29_4[1] = {
++    {0, 4},
++};
++static state states_29[5] = {
+     {1, arcs_29_0},
+-    {1, arcs_29_1},
+-    {1, arcs_29_2},
++    {2, arcs_29_1},
++    {2, arcs_29_2},
++    {1, arcs_29_3},
++    {1, arcs_29_4},
+ };
+-static arc arcs_30_0[1] = {
+-    {77, 1},
++static arc arcs_30_0[2] = {
++    {82, 1},
++    {83, 1},
+ };
+-static arc arcs_30_1[3] = {
+-    {82, 2},
+-    {83, 2},
++static arc arcs_30_1[1] = {
++    {0, 1},
++};
++static state states_30[2] = {
++    {2, arcs_30_0},
++    {1, arcs_30_1},
++};
++static arc arcs_31_0[1] = {
++    {84, 1},
++};
++static arc arcs_31_1[1] = {
++    {85, 2},
++};
++static arc arcs_31_2[1] = {
++    {0, 2},
++};
++static state states_31[3] = {
++    {1, arcs_31_0},
++    {1, arcs_31_1},
++    {1, arcs_31_2},
++};
++static arc arcs_32_0[1] = {
++    {81, 1},
++};
++static arc arcs_32_1[3] = {
++    {86, 2},
++    {87, 2},
+     {12, 3},
+ };
+-static arc arcs_30_2[4] = {
+-    {82, 2},
+-    {83, 2},
++static arc arcs_32_2[4] = {
++    {86, 2},
++    {87, 2},
+     {12, 3},
+-    {80, 4},
++    {84, 4},
+ };
+-static arc arcs_30_3[1] = {
+-    {80, 4},
++static arc arcs_32_3[1] = {
++    {84, 4},
+ };
+-static arc arcs_30_4[3] = {
++static arc arcs_32_4[3] = {
+     {33, 5},
+     {13, 6},
+-    {84, 5},
++    {88, 5},
+ };
+-static arc arcs_30_5[1] = {
++static arc arcs_32_5[1] = {
+     {0, 5},
+ };
+-static arc arcs_30_6[1] = {
+-    {84, 7},
++static arc arcs_32_6[1] = {
++    {88, 7},
+ };
+-static arc arcs_30_7[1] = {
++static arc arcs_32_7[1] = {
+     {15, 5},
+ };
+-static state states_30[8] = {
+-    {1, arcs_30_0},
+-    {3, arcs_30_1},
+-    {4, arcs_30_2},
+-    {1, arcs_30_3},
+-    {3, arcs_30_4},
+-    {1, arcs_30_5},
+-    {1, arcs_30_6},
+-    {1, arcs_30_7},
++static state states_32[8] = {
++    {1, arcs_32_0},
++    {3, arcs_32_1},
++    {4, arcs_32_2},
++    {1, arcs_32_3},
++    {3, arcs_32_4},
++    {1, arcs_32_5},
++    {1, arcs_32_6},
++    {1, arcs_32_7},
+ };
+-static arc arcs_31_0[1] = {
++static arc arcs_33_0[1] = {
+     {23, 1},
+ };
+-static arc arcs_31_1[2] = {
+-    {86, 2},
++static arc arcs_33_1[2] = {
++    {90, 2},
+     {0, 1},
+ };
+-static arc arcs_31_2[1] = {
++static arc arcs_33_2[1] = {
+     {23, 3},
+ };
+-static arc arcs_31_3[1] = {
++static arc arcs_33_3[1] = {
+     {0, 3},
+ };
+-static state states_31[4] = {
+-    {1, arcs_31_0},
+-    {2, arcs_31_1},
+-    {1, arcs_31_2},
+-    {1, arcs_31_3},
++static state states_33[4] = {
++    {1, arcs_33_0},
++    {2, arcs_33_1},
++    {1, arcs_33_2},
++    {1, arcs_33_3},
+ };
+-static arc arcs_32_0[1] = {
++static arc arcs_34_0[1] = {
+     {12, 1},
+ };
+-static arc arcs_32_1[2] = {
+-    {86, 2},
++static arc arcs_34_1[2] = {
++    {90, 2},
+     {0, 1},
+ };
+-static arc arcs_32_2[1] = {
++static arc arcs_34_2[1] = {
+     {23, 3},
+ };
+-static arc arcs_32_3[1] = {
++static arc arcs_34_3[1] = {
+     {0, 3},
+ };
+-static state states_32[4] = {
+-    {1, arcs_32_0},
+-    {2, arcs_32_1},
+-    {1, arcs_32_2},
+-    {1, arcs_32_3},
++static state states_34[4] = {
++    {1, arcs_34_0},
++    {2, arcs_34_1},
++    {1, arcs_34_2},
++    {1, arcs_34_3},
+ };
+-static arc arcs_33_0[1] = {
+-    {85, 1},
++static arc arcs_35_0[1] = {
++    {89, 1},
+ };
+-static arc arcs_33_1[2] = {
++static arc arcs_35_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_33_2[2] = {
+-    {85, 1},
++static arc arcs_35_2[2] = {
++    {89, 1},
+     {0, 2},
+ };
+-static state states_33[3] = {
+-    {1, arcs_33_0},
+-    {2, arcs_33_1},
+-    {2, arcs_33_2},
++static state states_35[3] = {
++    {1, arcs_35_0},
++    {2, arcs_35_1},
++    {2, arcs_35_2},
+ };
+-static arc arcs_34_0[1] = {
+-    {87, 1},
++static arc arcs_36_0[1] = {
++    {91, 1},
+ };
+-static arc arcs_34_1[2] = {
++static arc arcs_36_1[2] = {
+     {32, 0},
+     {0, 1},
+ };
+-static state states_34[2] = {
+-    {1, arcs_34_0},
+-    {2, arcs_34_1},
++static state states_36[2] = {
++    {1, arcs_36_0},
++    {2, arcs_36_1},
+ };
+-static arc arcs_35_0[1] = {
++static arc arcs_37_0[1] = {
+     {23, 1},
+ };
+-static arc arcs_35_1[2] = {
+-    {82, 0},
++static arc arcs_37_1[2] = {
++    {86, 0},
+     {0, 1},
+ };
+-static state states_35[2] = {
+-    {1, arcs_35_0},
+-    {2, arcs_35_1},
++static state states_37[2] = {
++    {1, arcs_37_0},
++    {2, arcs_37_1},
+ };
+-static arc arcs_36_0[1] = {
+-    {88, 1},
++static arc arcs_38_0[1] = {
++    {92, 1},
+ };
+-static arc arcs_36_1[1] = {
++static arc arcs_38_1[1] = {
+     {23, 2},
+ };
+-static arc arcs_36_2[2] = {
++static arc arcs_38_2[2] = {
+     {32, 1},
+     {0, 2},
+ };
+-static state states_36[3] = {
+-    {1, arcs_36_0},
+-    {1, arcs_36_1},
+-    {2, arcs_36_2},
++static state states_38[3] = {
++    {1, arcs_38_0},
++    {1, arcs_38_1},
++    {2, arcs_38_2},
+ };
+-static arc arcs_37_0[1] = {
+-    {89, 1},
++static arc arcs_39_0[1] = {
++    {93, 1},
+ };
+-static arc arcs_37_1[1] = {
++static arc arcs_39_1[1] = {
+     {23, 2},
+ };
+-static arc arcs_37_2[2] = {
++static arc arcs_39_2[2] = {
+     {32, 1},
+     {0, 2},
+ };
+-static state states_37[3] = {
+-    {1, arcs_37_0},
+-    {1, arcs_37_1},
+-    {2, arcs_37_2},
++static state states_39[3] = {
++    {1, arcs_39_0},
++    {1, arcs_39_1},
++    {2, arcs_39_2},
+ };
+-static arc arcs_38_0[1] = {
+-    {90, 1},
++static arc arcs_40_0[1] = {
++    {94, 1},
+ };
+-static arc arcs_38_1[1] = {
++static arc arcs_40_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_38_2[2] = {
++static arc arcs_40_2[2] = {
+     {32, 3},
+     {0, 2},
+ };
+-static arc arcs_38_3[1] = {
++static arc arcs_40_3[1] = {
+     {26, 4},
+ };
+-static arc arcs_38_4[1] = {
++static arc arcs_40_4[1] = {
+     {0, 4},
+ };
+-static state states_38[5] = {
+-    {1, arcs_38_0},
+-    {1, arcs_38_1},
+-    {2, arcs_38_2},
+-    {1, arcs_38_3},
+-    {1, arcs_38_4},
++static state states_40[5] = {
++    {1, arcs_40_0},
++    {1, arcs_40_1},
++    {2, arcs_40_2},
++    {1, arcs_40_3},
++    {1, arcs_40_4},
+ };
+-static arc arcs_39_0[9] = {
+-    {91, 1},
+-    {92, 1},
+-    {93, 1},
+-    {94, 1},
++static arc arcs_41_0[9] = {
+     {95, 1},
++    {96, 1},
++    {97, 1},
++    {98, 1},
++    {99, 1},
+     {19, 1},
+     {18, 1},
+     {17, 1},
+-    {96, 1},
++    {100, 1},
+ };
+-static arc arcs_39_1[1] = {
++static arc arcs_41_1[1] = {
+     {0, 1},
+ };
+-static state states_39[2] = {
+-    {9, arcs_39_0},
+-    {1, arcs_39_1},
++static state states_41[2] = {
++    {9, arcs_41_0},
++    {1, arcs_41_1},
+ };
+-static arc arcs_40_0[1] = {
++static arc arcs_42_0[1] = {
+     {21, 1},
+ };
+-static arc arcs_40_1[3] = {
++static arc arcs_42_1[3] = {
+     {19, 2},
+-    {95, 2},
+-    {93, 2},
++    {99, 2},
++    {97, 2},
+ };
+-static arc arcs_40_2[1] = {
++static arc arcs_42_2[1] = {
+     {0, 2},
+ };
+-static state states_40[3] = {
+-    {1, arcs_40_0},
+-    {3, arcs_40_1},
+-    {1, arcs_40_2},
++static state states_42[3] = {
++    {1, arcs_42_0},
++    {3, arcs_42_1},
++    {1, arcs_42_2},
+ };
+-static arc arcs_41_0[1] = {
+-    {97, 1},
++static arc arcs_43_0[1] = {
++    {101, 1},
+ };
+-static arc arcs_41_1[1] = {
++static arc arcs_43_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_41_2[1] = {
++static arc arcs_43_2[1] = {
+     {27, 3},
+ };
+-static arc arcs_41_3[1] = {
++static arc arcs_43_3[1] = {
+     {28, 4},
+ };
+-static arc arcs_41_4[3] = {
+-    {98, 1},
+-    {99, 5},
++static arc arcs_43_4[3] = {
++    {102, 1},
++    {103, 5},
+     {0, 4},
+ };
+-static arc arcs_41_5[1] = {
++static arc arcs_43_5[1] = {
+     {27, 6},
+ };
+-static arc arcs_41_6[1] = {
++static arc arcs_43_6[1] = {
+     {28, 7},
+ };
+-static arc arcs_41_7[1] = {
++static arc arcs_43_7[1] = {
+     {0, 7},
+ };
+-static state states_41[8] = {
+-    {1, arcs_41_0},
+-    {1, arcs_41_1},
+-    {1, arcs_41_2},
+-    {1, arcs_41_3},
+-    {3, arcs_41_4},
+-    {1, arcs_41_5},
+-    {1, arcs_41_6},
+-    {1, arcs_41_7},
++static state states_43[8] = {
++    {1, arcs_43_0},
++    {1, arcs_43_1},
++    {1, arcs_43_2},
++    {1, arcs_43_3},
++    {3, arcs_43_4},
++    {1, arcs_43_5},
++    {1, arcs_43_6},
++    {1, arcs_43_7},
+ };
+-static arc arcs_42_0[1] = {
+-    {100, 1},
++static arc arcs_44_0[1] = {
++    {104, 1},
+ };
+-static arc arcs_42_1[1] = {
++static arc arcs_44_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_42_2[1] = {
++static arc arcs_44_2[1] = {
+     {27, 3},
+ };
+-static arc arcs_42_3[1] = {
++static arc arcs_44_3[1] = {
+     {28, 4},
+ };
+-static arc arcs_42_4[2] = {
+-    {99, 5},
++static arc arcs_44_4[2] = {
++    {103, 5},
+     {0, 4},
+ };
+-static arc arcs_42_5[1] = {
++static arc arcs_44_5[1] = {
+     {27, 6},
+ };
+-static arc arcs_42_6[1] = {
++static arc arcs_44_6[1] = {
+     {28, 7},
+ };
+-static arc arcs_42_7[1] = {
++static arc arcs_44_7[1] = {
+     {0, 7},
+ };
+-static state states_42[8] = {
+-    {1, arcs_42_0},
+-    {1, arcs_42_1},
+-    {1, arcs_42_2},
+-    {1, arcs_42_3},
+-    {2, arcs_42_4},
+-    {1, arcs_42_5},
+-    {1, arcs_42_6},
+-    {1, arcs_42_7},
++static state states_44[8] = {
++    {1, arcs_44_0},
++    {1, arcs_44_1},
++    {1, arcs_44_2},
++    {1, arcs_44_3},
++    {2, arcs_44_4},
++    {1, arcs_44_5},
++    {1, arcs_44_6},
++    {1, arcs_44_7},
+ };
+-static arc arcs_43_0[1] = {
+-    {101, 1},
++static arc arcs_45_0[1] = {
++    {105, 1},
+ };
+-static arc arcs_43_1[1] = {
+-    {66, 2},
++static arc arcs_45_1[1] = {
++    {68, 2},
+ };
+-static arc arcs_43_2[1] = {
+-    {102, 3},
++static arc arcs_45_2[1] = {
++    {106, 3},
+ };
+-static arc arcs_43_3[1] = {
++static arc arcs_45_3[1] = {
+     {9, 4},
+ };
+-static arc arcs_43_4[1] = {
++static arc arcs_45_4[1] = {
+     {27, 5},
+ };
+-static arc arcs_43_5[1] = {
++static arc arcs_45_5[1] = {
+     {28, 6},
+ };
+-static arc arcs_43_6[2] = {
+-    {99, 7},
++static arc arcs_45_6[2] = {
++    {103, 7},
+     {0, 6},
+ };
+-static arc arcs_43_7[1] = {
++static arc arcs_45_7[1] = {
+     {27, 8},
+ };
+-static arc arcs_43_8[1] = {
++static arc arcs_45_8[1] = {
+     {28, 9},
+ };
+-static arc arcs_43_9[1] = {
++static arc arcs_45_9[1] = {
+     {0, 9},
+ };
+-static state states_43[10] = {
+-    {1, arcs_43_0},
+-    {1, arcs_43_1},
+-    {1, arcs_43_2},
+-    {1, arcs_43_3},
+-    {1, arcs_43_4},
+-    {1, arcs_43_5},
+-    {2, arcs_43_6},
+-    {1, arcs_43_7},
+-    {1, arcs_43_8},
+-    {1, arcs_43_9},
++static state states_45[10] = {
++    {1, arcs_45_0},
++    {1, arcs_45_1},
++    {1, arcs_45_2},
++    {1, arcs_45_3},
++    {1, arcs_45_4},
++    {1, arcs_45_5},
++    {2, arcs_45_6},
++    {1, arcs_45_7},
++    {1, arcs_45_8},
++    {1, arcs_45_9},
+ };
+-static arc arcs_44_0[1] = {
+-    {103, 1},
++static arc arcs_46_0[1] = {
++    {107, 1},
+ };
+-static arc arcs_44_1[1] = {
++static arc arcs_46_1[1] = {
+     {27, 2},
+ };
+-static arc arcs_44_2[1] = {
++static arc arcs_46_2[1] = {
+     {28, 3},
+ };
+-static arc arcs_44_3[2] = {
+-    {104, 4},
+-    {105, 5},
++static arc arcs_46_3[2] = {
++    {108, 4},
++    {109, 5},
+ };
+-static arc arcs_44_4[1] = {
++static arc arcs_46_4[1] = {
+     {27, 6},
+ };
+-static arc arcs_44_5[1] = {
++static arc arcs_46_5[1] = {
+     {27, 7},
+ };
+-static arc arcs_44_6[1] = {
++static arc arcs_46_6[1] = {
+     {28, 8},
+ };
+-static arc arcs_44_7[1] = {
++static arc arcs_46_7[1] = {
+     {28, 9},
+ };
+-static arc arcs_44_8[4] = {
+-    {104, 4},
+-    {99, 10},
+-    {105, 5},
++static arc arcs_46_8[4] = {
++    {108, 4},
++    {103, 10},
++    {109, 5},
+     {0, 8},
+ };
+-static arc arcs_44_9[1] = {
++static arc arcs_46_9[1] = {
+     {0, 9},
+ };
+-static arc arcs_44_10[1] = {
++static arc arcs_46_10[1] = {
+     {27, 11},
+ };
+-static arc arcs_44_11[1] = {
++static arc arcs_46_11[1] = {
+     {28, 12},
+ };
+-static arc arcs_44_12[2] = {
+-    {105, 5},
++static arc arcs_46_12[2] = {
++    {109, 5},
+     {0, 12},
+ };
+-static state states_44[13] = {
+-    {1, arcs_44_0},
+-    {1, arcs_44_1},
+-    {1, arcs_44_2},
+-    {2, arcs_44_3},
+-    {1, arcs_44_4},
+-    {1, arcs_44_5},
+-    {1, arcs_44_6},
+-    {1, arcs_44_7},
+-    {4, arcs_44_8},
+-    {1, arcs_44_9},
+-    {1, arcs_44_10},
+-    {1, arcs_44_11},
+-    {2, arcs_44_12},
+-};
+-static arc arcs_45_0[1] = {
+-    {106, 1},
+-};
+-static arc arcs_45_1[1] = {
+-    {107, 2},
+-};
+-static arc arcs_45_2[2] = {
+-    {32, 1},
+-    {27, 3},
+-};
+-static arc arcs_45_3[1] = {
+-    {28, 4},
+-};
+-static arc arcs_45_4[1] = {
+-    {0, 4},
+-};
+-static state states_45[5] = {
+-    {1, arcs_45_0},
+-    {1, arcs_45_1},
+-    {2, arcs_45_2},
+-    {1, arcs_45_3},
+-    {1, arcs_45_4},
+-};
+-static arc arcs_46_0[1] = {
+-    {26, 1},
+-};
+-static arc arcs_46_1[2] = {
+-    {86, 2},
+-    {0, 1},
+-};
+-static arc arcs_46_2[1] = {
+-    {108, 3},
+-};
+-static arc arcs_46_3[1] = {
+-    {0, 3},
+-};
+-static state states_46[4] = {
++static state states_46[13] = {
+     {1, arcs_46_0},
+-    {2, arcs_46_1},
++    {1, arcs_46_1},
+     {1, arcs_46_2},
+-    {1, arcs_46_3},
++    {2, arcs_46_3},
++    {1, arcs_46_4},
++    {1, arcs_46_5},
++    {1, arcs_46_6},
++    {1, arcs_46_7},
++    {4, arcs_46_8},
++    {1, arcs_46_9},
++    {1, arcs_46_10},
++    {1, arcs_46_11},
++    {2, arcs_46_12},
+ };
+ static arc arcs_47_0[1] = {
+-    {109, 1},
++    {110, 1},
+ };
+-static arc arcs_47_1[2] = {
+-    {26, 2},
+-    {0, 1},
++static arc arcs_47_1[1] = {
++    {111, 2},
+ };
+ static arc arcs_47_2[2] = {
+-    {86, 3},
+-    {0, 2},
++    {32, 1},
++    {27, 3},
+ };
+ static arc arcs_47_3[1] = {
+-    {23, 4},
++    {28, 4},
+ };
+ static arc arcs_47_4[1] = {
+     {0, 4},
+ };
+ static state states_47[5] = {
+     {1, arcs_47_0},
+-    {2, arcs_47_1},
++    {1, arcs_47_1},
+     {2, arcs_47_2},
+     {1, arcs_47_3},
+     {1, arcs_47_4},
+ };
+-static arc arcs_48_0[2] = {
+-    {3, 1},
+-    {2, 2},
++static arc arcs_48_0[1] = {
++    {26, 1},
+ };
+-static arc arcs_48_1[1] = {
++static arc arcs_48_1[2] = {
++    {90, 2},
+     {0, 1},
+ };
+ static arc arcs_48_2[1] = {
+-    {110, 3},
++    {112, 3},
+ };
+ static arc arcs_48_3[1] = {
+-    {6, 4},
+-};
+-static arc arcs_48_4[2] = {
+-    {6, 4},
+-    {111, 1},
++    {0, 3},
+ };
+-static state states_48[5] = {
+-    {2, arcs_48_0},
+-    {1, arcs_48_1},
++static state states_48[4] = {
++    {1, arcs_48_0},
++    {2, arcs_48_1},
+     {1, arcs_48_2},
+     {1, arcs_48_3},
+-    {2, arcs_48_4},
+ };
+-static arc arcs_49_0[2] = {
+-    {112, 1},
+-    {113, 2},
++static arc arcs_49_0[1] = {
++    {113, 1},
+ };
+ static arc arcs_49_1[2] = {
+-    {97, 3},
++    {26, 2},
+     {0, 1},
+ };
+-static arc arcs_49_2[1] = {
++static arc arcs_49_2[2] = {
++    {90, 3},
+     {0, 2},
+ };
+ static arc arcs_49_3[1] = {
+-    {112, 4},
++    {23, 4},
+ };
+ static arc arcs_49_4[1] = {
+-    {99, 5},
+-};
+-static arc arcs_49_5[1] = {
+-    {26, 2},
++    {0, 4},
+ };
+-static state states_49[6] = {
+-    {2, arcs_49_0},
++static state states_49[5] = {
++    {1, arcs_49_0},
+     {2, arcs_49_1},
+-    {1, arcs_49_2},
++    {2, arcs_49_2},
+     {1, arcs_49_3},
+     {1, arcs_49_4},
+-    {1, arcs_49_5},
+ };
+ static arc arcs_50_0[2] = {
+-    {112, 1},
+-    {115, 1},
++    {3, 1},
++    {2, 2},
+ };
+ static arc arcs_50_1[1] = {
+     {0, 1},
+ };
+-static state states_50[2] = {
++static arc arcs_50_2[1] = {
++    {114, 3},
++};
++static arc arcs_50_3[1] = {
++    {6, 4},
++};
++static arc arcs_50_4[2] = {
++    {6, 4},
++    {115, 1},
++};
++static state states_50[5] = {
+     {2, arcs_50_0},
+     {1, arcs_50_1},
++    {1, arcs_50_2},
++    {1, arcs_50_3},
++    {2, arcs_50_4},
+ };
+-static arc arcs_51_0[1] = {
++static arc arcs_51_0[2] = {
+     {116, 1},
++    {117, 2},
+ };
+ static arc arcs_51_1[2] = {
+-    {35, 2},
+-    {27, 3},
++    {101, 3},
++    {0, 1},
+ };
+ static arc arcs_51_2[1] = {
+-    {27, 3},
++    {0, 2},
+ };
+ static arc arcs_51_3[1] = {
+-    {26, 4},
++    {116, 4},
+ };
+ static arc arcs_51_4[1] = {
+-    {0, 4},
++    {103, 5},
+ };
+-static state states_51[5] = {
+-    {1, arcs_51_0},
++static arc arcs_51_5[1] = {
++    {26, 2},
++};
++static state states_51[6] = {
++    {2, arcs_51_0},
+     {2, arcs_51_1},
+     {1, arcs_51_2},
+     {1, arcs_51_3},
+     {1, arcs_51_4},
++    {1, arcs_51_5},
+ };
+-static arc arcs_52_0[1] = {
++static arc arcs_52_0[2] = {
+     {116, 1},
++    {119, 1},
+ };
+-static arc arcs_52_1[2] = {
++static arc arcs_52_1[1] = {
++    {0, 1},
++};
++static state states_52[2] = {
++    {2, arcs_52_0},
++    {1, arcs_52_1},
++};
++static arc arcs_53_0[1] = {
++    {120, 1},
++};
++static arc arcs_53_1[2] = {
+     {35, 2},
+     {27, 3},
+ };
+-static arc arcs_52_2[1] = {
++static arc arcs_53_2[1] = {
+     {27, 3},
+ };
+-static arc arcs_52_3[1] = {
+-    {114, 4},
++static arc arcs_53_3[1] = {
++    {26, 4},
+ };
+-static arc arcs_52_4[1] = {
++static arc arcs_53_4[1] = {
+     {0, 4},
+ };
+-static state states_52[5] = {
+-    {1, arcs_52_0},
+-    {2, arcs_52_1},
+-    {1, arcs_52_2},
+-    {1, arcs_52_3},
+-    {1, arcs_52_4},
+-};
+-static arc arcs_53_0[1] = {
+-    {117, 1},
+-};
+-static arc arcs_53_1[2] = {
+-    {118, 0},
+-    {0, 1},
+-};
+-static state states_53[2] = {
++static state states_53[5] = {
+     {1, arcs_53_0},
+     {2, arcs_53_1},
++    {1, arcs_53_2},
++    {1, arcs_53_3},
++    {1, arcs_53_4},
+ };
+ static arc arcs_54_0[1] = {
+-    {119, 1},
++    {120, 1},
+ };
+ static arc arcs_54_1[2] = {
+-    {120, 0},
+-    {0, 1},
++    {35, 2},
++    {27, 3},
++};
++static arc arcs_54_2[1] = {
++    {27, 3},
+ };
+-static state states_54[2] = {
++static arc arcs_54_3[1] = {
++    {118, 4},
++};
++static arc arcs_54_4[1] = {
++    {0, 4},
++};
++static state states_54[5] = {
+     {1, arcs_54_0},
+     {2, arcs_54_1},
++    {1, arcs_54_2},
++    {1, arcs_54_3},
++    {1, arcs_54_4},
+ };
+-static arc arcs_55_0[2] = {
++static arc arcs_55_0[1] = {
+     {121, 1},
+-    {122, 2},
+-};
+-static arc arcs_55_1[1] = {
+-    {119, 2},
+ };
+-static arc arcs_55_2[1] = {
+-    {0, 2},
++static arc arcs_55_1[2] = {
++    {122, 0},
++    {0, 1},
+ };
+-static state states_55[3] = {
+-    {2, arcs_55_0},
+-    {1, arcs_55_1},
+-    {1, arcs_55_2},
++static state states_55[2] = {
++    {1, arcs_55_0},
++    {2, arcs_55_1},
+ };
+ static arc arcs_56_0[1] = {
+-    {108, 1},
++    {123, 1},
+ };
+ static arc arcs_56_1[2] = {
+-    {123, 0},
++    {124, 0},
+     {0, 1},
+ };
+ static state states_56[2] = {
+     {1, arcs_56_0},
+     {2, arcs_56_1},
+ };
+-static arc arcs_57_0[10] = {
+-    {124, 1},
++static arc arcs_57_0[2] = {
+     {125, 1},
+-    {126, 1},
+-    {127, 1},
+-    {128, 1},
+-    {129, 1},
+-    {130, 1},
+-    {102, 1},
+-    {121, 2},
+-    {131, 3},
++    {126, 2},
+ };
+ static arc arcs_57_1[1] = {
+-    {0, 1},
++    {123, 2},
+ };
+ static arc arcs_57_2[1] = {
+-    {102, 1},
+-};
+-static arc arcs_57_3[2] = {
+-    {121, 1},
+-    {0, 3},
++    {0, 2},
+ };
+-static state states_57[4] = {
+-    {10, arcs_57_0},
++static state states_57[3] = {
++    {2, arcs_57_0},
+     {1, arcs_57_1},
+     {1, arcs_57_2},
+-    {2, arcs_57_3},
+ };
+ static arc arcs_58_0[1] = {
+-    {33, 1},
+-};
+-static arc arcs_58_1[1] = {
+-    {108, 2},
++    {112, 1},
+ };
+-static arc arcs_58_2[1] = {
+-    {0, 2},
++static arc arcs_58_1[2] = {
++    {127, 0},
++    {0, 1},
+ };
+-static state states_58[3] = {
++static state states_58[2] = {
+     {1, arcs_58_0},
+-    {1, arcs_58_1},
+-    {1, arcs_58_2},
++    {2, arcs_58_1},
+ };
+-static arc arcs_59_0[1] = {
++static arc arcs_59_0[10] = {
++    {128, 1},
++    {129, 1},
++    {130, 1},
++    {131, 1},
+     {132, 1},
++    {133, 1},
++    {134, 1},
++    {106, 1},
++    {125, 2},
++    {135, 3},
+ };
+-static arc arcs_59_1[2] = {
+-    {133, 0},
++static arc arcs_59_1[1] = {
+     {0, 1},
+ };
+-static state states_59[2] = {
+-    {1, arcs_59_0},
+-    {2, arcs_59_1},
++static arc arcs_59_2[1] = {
++    {106, 1},
++};
++static arc arcs_59_3[2] = {
++    {125, 1},
++    {0, 3},
++};
++static state states_59[4] = {
++    {10, arcs_59_0},
++    {1, arcs_59_1},
++    {1, arcs_59_2},
++    {2, arcs_59_3},
+ };
+ static arc arcs_60_0[1] = {
+-    {134, 1},
++    {33, 1},
+ };
+-static arc arcs_60_1[2] = {
+-    {135, 0},
+-    {0, 1},
++static arc arcs_60_1[1] = {
++    {112, 2},
++};
++static arc arcs_60_2[1] = {
++    {0, 2},
+ };
+-static state states_60[2] = {
++static state states_60[3] = {
+     {1, arcs_60_0},
+-    {2, arcs_60_1},
++    {1, arcs_60_1},
++    {1, arcs_60_2},
+ };
+ static arc arcs_61_0[1] = {
+     {136, 1},
+@@ -1361,742 +1361,768 @@ static state states_61[2] = {
+ static arc arcs_62_0[1] = {
+     {138, 1},
+ };
+-static arc arcs_62_1[3] = {
++static arc arcs_62_1[2] = {
+     {139, 0},
+-    {140, 0},
+     {0, 1},
+ };
+ static state states_62[2] = {
+     {1, arcs_62_0},
+-    {3, arcs_62_1},
++    {2, arcs_62_1},
+ };
+ static arc arcs_63_0[1] = {
+-    {141, 1},
++    {140, 1},
+ };
+-static arc arcs_63_1[3] = {
+-    {142, 0},
+-    {143, 0},
++static arc arcs_63_1[2] = {
++    {141, 0},
+     {0, 1},
+ };
+ static state states_63[2] = {
+     {1, arcs_63_0},
+-    {3, arcs_63_1},
++    {2, arcs_63_1},
+ };
+ static arc arcs_64_0[1] = {
+-    {144, 1},
++    {142, 1},
+ };
+-static arc arcs_64_1[6] = {
+-    {33, 0},
+-    {11, 0},
+-    {145, 0},
+-    {146, 0},
+-    {147, 0},
++static arc arcs_64_1[3] = {
++    {143, 0},
++    {144, 0},
+     {0, 1},
+ };
+ static state states_64[2] = {
+     {1, arcs_64_0},
+-    {6, arcs_64_1},
++    {3, arcs_64_1},
+ };
+-static arc arcs_65_0[4] = {
+-    {142, 1},
+-    {143, 1},
++static arc arcs_65_0[1] = {
++    {145, 1},
++};
++static arc arcs_65_1[3] = {
++    {146, 0},
++    {147, 0},
++    {0, 1},
++};
++static state states_65[2] = {
++    {1, arcs_65_0},
++    {3, arcs_65_1},
++};
++static arc arcs_66_0[1] = {
+     {148, 1},
+-    {149, 2},
+ };
+-static arc arcs_65_1[1] = {
+-    {144, 2},
++static arc arcs_66_1[6] = {
++    {33, 0},
++    {11, 0},
++    {149, 0},
++    {150, 0},
++    {151, 0},
++    {0, 1},
++};
++static state states_66[2] = {
++    {1, arcs_66_0},
++    {6, arcs_66_1},
++};
++static arc arcs_67_0[4] = {
++    {146, 1},
++    {147, 1},
++    {152, 1},
++    {153, 2},
++};
++static arc arcs_67_1[1] = {
++    {148, 2},
+ };
+-static arc arcs_65_2[1] = {
++static arc arcs_67_2[1] = {
+     {0, 2},
+ };
+-static state states_65[3] = {
+-    {4, arcs_65_0},
+-    {1, arcs_65_1},
+-    {1, arcs_65_2},
++static state states_67[3] = {
++    {4, arcs_67_0},
++    {1, arcs_67_1},
++    {1, arcs_67_2},
+ };
+-static arc arcs_66_0[1] = {
+-    {150, 1},
++static arc arcs_68_0[1] = {
++    {154, 1},
+ };
+-static arc arcs_66_1[2] = {
++static arc arcs_68_1[2] = {
+     {34, 2},
+     {0, 1},
+ };
+-static arc arcs_66_2[1] = {
+-    {144, 3},
++static arc arcs_68_2[1] = {
++    {148, 3},
+ };
+-static arc arcs_66_3[1] = {
++static arc arcs_68_3[1] = {
+     {0, 3},
+ };
+-static state states_66[4] = {
+-    {1, arcs_66_0},
+-    {2, arcs_66_1},
+-    {1, arcs_66_2},
+-    {1, arcs_66_3},
++static state states_68[4] = {
++    {1, arcs_68_0},
++    {2, arcs_68_1},
++    {1, arcs_68_2},
++    {1, arcs_68_3},
+ };
+-static arc arcs_67_0[2] = {
+-    {151, 1},
+-    {152, 2},
++static arc arcs_69_0[2] = {
++    {155, 1},
++    {156, 2},
+ };
+-static arc arcs_67_1[1] = {
+-    {152, 2},
++static arc arcs_69_1[1] = {
++    {156, 2},
+ };
+-static arc arcs_67_2[2] = {
+-    {153, 2},
++static arc arcs_69_2[2] = {
++    {157, 2},
+     {0, 2},
+ };
+-static state states_67[3] = {
+-    {2, arcs_67_0},
+-    {1, arcs_67_1},
+-    {2, arcs_67_2},
++static state states_69[3] = {
++    {2, arcs_69_0},
++    {1, arcs_69_1},
++    {2, arcs_69_2},
+ };
+-static arc arcs_68_0[10] = {
++static arc arcs_70_0[10] = {
+     {13, 1},
+-    {155, 2},
+-    {157, 3},
++    {159, 2},
++    {161, 3},
+     {23, 4},
+-    {160, 4},
+-    {161, 5},
+-    {83, 4},
+-    {162, 4},
+-    {163, 4},
+     {164, 4},
++    {165, 5},
++    {87, 4},
++    {166, 4},
++    {167, 4},
++    {168, 4},
+ };
+-static arc arcs_68_1[3] = {
++static arc arcs_70_1[3] = {
+     {50, 6},
+-    {154, 6},
++    {158, 6},
+     {15, 4},
+ };
+-static arc arcs_68_2[2] = {
+-    {154, 7},
+-    {156, 4},
++static arc arcs_70_2[2] = {
++    {158, 7},
++    {160, 4},
+ };
+-static arc arcs_68_3[2] = {
+-    {158, 8},
+-    {159, 4},
++static arc arcs_70_3[2] = {
++    {162, 8},
++    {163, 4},
+ };
+-static arc arcs_68_4[1] = {
++static arc arcs_70_4[1] = {
+     {0, 4},
+ };
+-static arc arcs_68_5[2] = {
+-    {161, 5},
++static arc arcs_70_5[2] = {
++    {165, 5},
+     {0, 5},
+ };
+-static arc arcs_68_6[1] = {
++static arc arcs_70_6[1] = {
+     {15, 4},
+ };
+-static arc arcs_68_7[1] = {
+-    {156, 4},
++static arc arcs_70_7[1] = {
++    {160, 4},
+ };
+-static arc arcs_68_8[1] = {
+-    {159, 4},
++static arc arcs_70_8[1] = {
++    {163, 4},
+ };
+-static state states_68[9] = {
+-    {10, arcs_68_0},
+-    {3, arcs_68_1},
+-    {2, arcs_68_2},
+-    {2, arcs_68_3},
+-    {1, arcs_68_4},
+-    {2, arcs_68_5},
+-    {1, arcs_68_6},
+-    {1, arcs_68_7},
+-    {1, arcs_68_8},
++static state states_70[9] = {
++    {10, arcs_70_0},
++    {3, arcs_70_1},
++    {2, arcs_70_2},
++    {2, arcs_70_3},
++    {1, arcs_70_4},
++    {2, arcs_70_5},
++    {1, arcs_70_6},
++    {1, arcs_70_7},
++    {1, arcs_70_8},
+ };
+-static arc arcs_69_0[2] = {
++static arc arcs_71_0[2] = {
+     {26, 1},
+-    {51, 1},
++    {53, 1},
+ };
+-static arc arcs_69_1[3] = {
+-    {165, 2},
++static arc arcs_71_1[3] = {
++    {169, 2},
+     {32, 3},
+     {0, 1},
+ };
+-static arc arcs_69_2[1] = {
++static arc arcs_71_2[1] = {
+     {0, 2},
+ };
+-static arc arcs_69_3[3] = {
++static arc arcs_71_3[3] = {
+     {26, 4},
+-    {51, 4},
++    {53, 4},
+     {0, 3},
+ };
+-static arc arcs_69_4[2] = {
++static arc arcs_71_4[2] = {
+     {32, 3},
+     {0, 4},
+ };
+-static state states_69[5] = {
+-    {2, arcs_69_0},
+-    {3, arcs_69_1},
+-    {1, arcs_69_2},
+-    {3, arcs_69_3},
+-    {2, arcs_69_4},
++static state states_71[5] = {
++    {2, arcs_71_0},
++    {3, arcs_71_1},
++    {1, arcs_71_2},
++    {3, arcs_71_3},
++    {2, arcs_71_4},
+ };
+-static arc arcs_70_0[3] = {
++static arc arcs_72_0[3] = {
+     {13, 1},
+-    {155, 2},
+-    {82, 3},
++    {159, 2},
++    {86, 3},
+ };
+-static arc arcs_70_1[2] = {
++static arc arcs_72_1[2] = {
+     {14, 4},
+     {15, 5},
+ };
+-static arc arcs_70_2[1] = {
+-    {166, 6},
++static arc arcs_72_2[1] = {
++    {170, 6},
+ };
+-static arc arcs_70_3[1] = {
++static arc arcs_72_3[1] = {
+     {23, 5},
+ };
+-static arc arcs_70_4[1] = {
++static arc arcs_72_4[1] = {
+     {15, 5},
+ };
+-static arc arcs_70_5[1] = {
++static arc arcs_72_5[1] = {
+     {0, 5},
+ };
+-static arc arcs_70_6[1] = {
+-    {156, 5},
++static arc arcs_72_6[1] = {
++    {160, 5},
+ };
+-static state states_70[7] = {
+-    {3, arcs_70_0},
+-    {2, arcs_70_1},
+-    {1, arcs_70_2},
+-    {1, arcs_70_3},
+-    {1, arcs_70_4},
+-    {1, arcs_70_5},
+-    {1, arcs_70_6},
++static state states_72[7] = {
++    {3, arcs_72_0},
++    {2, arcs_72_1},
++    {1, arcs_72_2},
++    {1, arcs_72_3},
++    {1, arcs_72_4},
++    {1, arcs_72_5},
++    {1, arcs_72_6},
+ };
+-static arc arcs_71_0[1] = {
+-    {167, 1},
++static arc arcs_73_0[1] = {
++    {171, 1},
+ };
+-static arc arcs_71_1[2] = {
++static arc arcs_73_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_71_2[2] = {
+-    {167, 1},
++static arc arcs_73_2[2] = {
++    {171, 1},
+     {0, 2},
+ };
+-static state states_71[3] = {
+-    {1, arcs_71_0},
+-    {2, arcs_71_1},
+-    {2, arcs_71_2},
++static state states_73[3] = {
++    {1, arcs_73_0},
++    {2, arcs_73_1},
++    {2, arcs_73_2},
+ };
+-static arc arcs_72_0[2] = {
++static arc arcs_74_0[2] = {
+     {26, 1},
+     {27, 2},
+ };
+-static arc arcs_72_1[2] = {
++static arc arcs_74_1[2] = {
+     {27, 2},
+     {0, 1},
+ };
+-static arc arcs_72_2[3] = {
++static arc arcs_74_2[3] = {
+     {26, 3},
+-    {168, 4},
++    {172, 4},
+     {0, 2},
+ };
+-static arc arcs_72_3[2] = {
+-    {168, 4},
++static arc arcs_74_3[2] = {
++    {172, 4},
+     {0, 3},
+ };
+-static arc arcs_72_4[1] = {
++static arc arcs_74_4[1] = {
+     {0, 4},
+ };
+-static state states_72[5] = {
+-    {2, arcs_72_0},
+-    {2, arcs_72_1},
+-    {3, arcs_72_2},
+-    {2, arcs_72_3},
+-    {1, arcs_72_4},
++static state states_74[5] = {
++    {2, arcs_74_0},
++    {2, arcs_74_1},
++    {3, arcs_74_2},
++    {2, arcs_74_3},
++    {1, arcs_74_4},
+ };
+-static arc arcs_73_0[1] = {
++static arc arcs_75_0[1] = {
+     {27, 1},
+ };
+-static arc arcs_73_1[2] = {
++static arc arcs_75_1[2] = {
+     {26, 2},
+     {0, 1},
+ };
+-static arc arcs_73_2[1] = {
++static arc arcs_75_2[1] = {
+     {0, 2},
+ };
+-static state states_73[3] = {
+-    {1, arcs_73_0},
+-    {2, arcs_73_1},
+-    {1, arcs_73_2},
++static state states_75[3] = {
++    {1, arcs_75_0},
++    {2, arcs_75_1},
++    {1, arcs_75_2},
+ };
+-static arc arcs_74_0[2] = {
+-    {108, 1},
+-    {51, 1},
++static arc arcs_76_0[2] = {
++    {112, 1},
++    {53, 1},
+ };
+-static arc arcs_74_1[2] = {
++static arc arcs_76_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_74_2[3] = {
+-    {108, 1},
+-    {51, 1},
++static arc arcs_76_2[3] = {
++    {112, 1},
++    {53, 1},
+     {0, 2},
+ };
+-static state states_74[3] = {
+-    {2, arcs_74_0},
+-    {2, arcs_74_1},
+-    {3, arcs_74_2},
++static state states_76[3] = {
++    {2, arcs_76_0},
++    {2, arcs_76_1},
++    {3, arcs_76_2},
+ };
+-static arc arcs_75_0[1] = {
++static arc arcs_77_0[1] = {
+     {26, 1},
+ };
+-static arc arcs_75_1[2] = {
++static arc arcs_77_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_75_2[2] = {
++static arc arcs_77_2[2] = {
+     {26, 1},
+     {0, 2},
+ };
+-static state states_75[3] = {
+-    {1, arcs_75_0},
+-    {2, arcs_75_1},
+-    {2, arcs_75_2},
++static state states_77[3] = {
++    {1, arcs_77_0},
++    {2, arcs_77_1},
++    {2, arcs_77_2},
+ };
+-static arc arcs_76_0[3] = {
++static arc arcs_78_0[3] = {
+     {26, 1},
+     {34, 2},
+-    {51, 3},
++    {53, 3},
+ };
+-static arc arcs_76_1[4] = {
++static arc arcs_78_1[4] = {
+     {27, 4},
+-    {165, 5},
++    {169, 5},
+     {32, 6},
+     {0, 1},
+ };
+-static arc arcs_76_2[1] = {
+-    {108, 7},
++static arc arcs_78_2[1] = {
++    {112, 7},
+ };
+-static arc arcs_76_3[3] = {
+-    {165, 5},
++static arc arcs_78_3[3] = {
++    {169, 5},
+     {32, 6},
+     {0, 3},
+ };
+-static arc arcs_76_4[1] = {
++static arc arcs_78_4[1] = {
+     {26, 7},
+ };
+-static arc arcs_76_5[1] = {
++static arc arcs_78_5[1] = {
+     {0, 5},
+ };
+-static arc arcs_76_6[3] = {
++static arc arcs_78_6[3] = {
+     {26, 8},
+-    {51, 8},
++    {53, 8},
+     {0, 6},
+ };
+-static arc arcs_76_7[3] = {
+-    {165, 5},
++static arc arcs_78_7[3] = {
++    {169, 5},
+     {32, 9},
+     {0, 7},
+ };
+-static arc arcs_76_8[2] = {
++static arc arcs_78_8[2] = {
+     {32, 6},
+     {0, 8},
+ };
+-static arc arcs_76_9[3] = {
++static arc arcs_78_9[3] = {
+     {26, 10},
+     {34, 11},
+     {0, 9},
+ };
+-static arc arcs_76_10[1] = {
++static arc arcs_78_10[1] = {
+     {27, 12},
+ };
+-static arc arcs_76_11[1] = {
+-    {108, 13},
++static arc arcs_78_11[1] = {
++    {112, 13},
+ };
+-static arc arcs_76_12[1] = {
++static arc arcs_78_12[1] = {
+     {26, 13},
+ };
+-static arc arcs_76_13[2] = {
++static arc arcs_78_13[2] = {
+     {32, 9},
+     {0, 13},
+ };
+-static state states_76[14] = {
+-    {3, arcs_76_0},
+-    {4, arcs_76_1},
+-    {1, arcs_76_2},
+-    {3, arcs_76_3},
+-    {1, arcs_76_4},
+-    {1, arcs_76_5},
+-    {3, arcs_76_6},
+-    {3, arcs_76_7},
+-    {2, arcs_76_8},
+-    {3, arcs_76_9},
+-    {1, arcs_76_10},
+-    {1, arcs_76_11},
+-    {1, arcs_76_12},
+-    {2, arcs_76_13},
+-};
+-static arc arcs_77_0[1] = {
+-    {169, 1},
+-};
+-static arc arcs_77_1[1] = {
++static state states_78[14] = {
++    {3, arcs_78_0},
++    {4, arcs_78_1},
++    {1, arcs_78_2},
++    {3, arcs_78_3},
++    {1, arcs_78_4},
++    {1, arcs_78_5},
++    {3, arcs_78_6},
++    {3, arcs_78_7},
++    {2, arcs_78_8},
++    {3, arcs_78_9},
++    {1, arcs_78_10},
++    {1, arcs_78_11},
++    {1, arcs_78_12},
++    {2, arcs_78_13},
++};
++static arc arcs_79_0[1] = {
++    {173, 1},
++};
++static arc arcs_79_1[1] = {
+     {23, 2},
+ };
+-static arc arcs_77_2[2] = {
++static arc arcs_79_2[2] = {
+     {13, 3},
+     {27, 4},
+ };
+-static arc arcs_77_3[2] = {
++static arc arcs_79_3[2] = {
+     {14, 5},
+     {15, 6},
+ };
+-static arc arcs_77_4[1] = {
++static arc arcs_79_4[1] = {
+     {28, 7},
+ };
+-static arc arcs_77_5[1] = {
++static arc arcs_79_5[1] = {
+     {15, 6},
+ };
+-static arc arcs_77_6[1] = {
++static arc arcs_79_6[1] = {
+     {27, 4},
+ };
+-static arc arcs_77_7[1] = {
++static arc arcs_79_7[1] = {
+     {0, 7},
+ };
+-static state states_77[8] = {
+-    {1, arcs_77_0},
+-    {1, arcs_77_1},
+-    {2, arcs_77_2},
+-    {2, arcs_77_3},
+-    {1, arcs_77_4},
+-    {1, arcs_77_5},
+-    {1, arcs_77_6},
+-    {1, arcs_77_7},
+-};
+-static arc arcs_78_0[1] = {
+-    {170, 1},
++static state states_79[8] = {
++    {1, arcs_79_0},
++    {1, arcs_79_1},
++    {2, arcs_79_2},
++    {2, arcs_79_3},
++    {1, arcs_79_4},
++    {1, arcs_79_5},
++    {1, arcs_79_6},
++    {1, arcs_79_7},
++};
++static arc arcs_80_0[1] = {
++    {174, 1},
+ };
+-static arc arcs_78_1[2] = {
++static arc arcs_80_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_78_2[2] = {
+-    {170, 1},
++static arc arcs_80_2[2] = {
++    {174, 1},
+     {0, 2},
+ };
+-static state states_78[3] = {
+-    {1, arcs_78_0},
+-    {2, arcs_78_1},
+-    {2, arcs_78_2},
++static state states_80[3] = {
++    {1, arcs_80_0},
++    {2, arcs_80_1},
++    {2, arcs_80_2},
+ };
+-static arc arcs_79_0[3] = {
++static arc arcs_81_0[3] = {
+     {26, 1},
+     {34, 2},
+     {33, 2},
+ };
+-static arc arcs_79_1[3] = {
+-    {165, 3},
++static arc arcs_81_1[3] = {
++    {169, 3},
+     {31, 2},
+     {0, 1},
+ };
+-static arc arcs_79_2[1] = {
++static arc arcs_81_2[1] = {
+     {26, 3},
+ };
+-static arc arcs_79_3[1] = {
++static arc arcs_81_3[1] = {
+     {0, 3},
+ };
+-static state states_79[4] = {
+-    {3, arcs_79_0},
+-    {3, arcs_79_1},
+-    {1, arcs_79_2},
+-    {1, arcs_79_3},
++static state states_81[4] = {
++    {3, arcs_81_0},
++    {3, arcs_81_1},
++    {1, arcs_81_2},
++    {1, arcs_81_3},
+ };
+-static arc arcs_80_0[2] = {
+-    {165, 1},
+-    {172, 1},
++static arc arcs_82_0[2] = {
++    {169, 1},
++    {176, 1},
+ };
+-static arc arcs_80_1[1] = {
++static arc arcs_82_1[1] = {
+     {0, 1},
+ };
+-static state states_80[2] = {
+-    {2, arcs_80_0},
+-    {1, arcs_80_1},
++static state states_82[2] = {
++    {2, arcs_82_0},
++    {1, arcs_82_1},
+ };
+-static arc arcs_81_0[2] = {
++static arc arcs_83_0[2] = {
+     {21, 1},
+-    {101, 2},
++    {105, 2},
+ };
+-static arc arcs_81_1[1] = {
+-    {101, 2},
++static arc arcs_83_1[1] = {
++    {105, 2},
+ };
+-static arc arcs_81_2[1] = {
+-    {66, 3},
++static arc arcs_83_2[1] = {
++    {68, 3},
+ };
+-static arc arcs_81_3[1] = {
+-    {102, 4},
++static arc arcs_83_3[1] = {
++    {106, 4},
+ };
+-static arc arcs_81_4[1] = {
+-    {112, 5},
++static arc arcs_83_4[1] = {
++    {116, 5},
+ };
+-static arc arcs_81_5[2] = {
+-    {171, 6},
++static arc arcs_83_5[2] = {
++    {175, 6},
+     {0, 5},
+ };
+-static arc arcs_81_6[1] = {
++static arc arcs_83_6[1] = {
+     {0, 6},
+ };
+-static state states_81[7] = {
+-    {2, arcs_81_0},
+-    {1, arcs_81_1},
+-    {1, arcs_81_2},
+-    {1, arcs_81_3},
+-    {1, arcs_81_4},
+-    {2, arcs_81_5},
+-    {1, arcs_81_6},
++static state states_83[7] = {
++    {2, arcs_83_0},
++    {1, arcs_83_1},
++    {1, arcs_83_2},
++    {1, arcs_83_3},
++    {1, arcs_83_4},
++    {2, arcs_83_5},
++    {1, arcs_83_6},
+ };
+-static arc arcs_82_0[1] = {
+-    {97, 1},
++static arc arcs_84_0[1] = {
++    {101, 1},
+ };
+-static arc arcs_82_1[1] = {
+-    {114, 2},
++static arc arcs_84_1[1] = {
++    {118, 2},
+ };
+-static arc arcs_82_2[2] = {
+-    {171, 3},
++static arc arcs_84_2[2] = {
++    {175, 3},
+     {0, 2},
+ };
+-static arc arcs_82_3[1] = {
++static arc arcs_84_3[1] = {
+     {0, 3},
+ };
+-static state states_82[4] = {
+-    {1, arcs_82_0},
+-    {1, arcs_82_1},
+-    {2, arcs_82_2},
+-    {1, arcs_82_3},
++static state states_84[4] = {
++    {1, arcs_84_0},
++    {1, arcs_84_1},
++    {2, arcs_84_2},
++    {1, arcs_84_3},
+ };
+-static arc arcs_83_0[1] = {
++static arc arcs_85_0[1] = {
+     {23, 1},
+ };
+-static arc arcs_83_1[1] = {
++static arc arcs_85_1[1] = {
+     {0, 1},
+ };
+-static state states_83[2] = {
+-    {1, arcs_83_0},
+-    {1, arcs_83_1},
++static state states_85[2] = {
++    {1, arcs_85_0},
++    {1, arcs_85_1},
+ };
+-static arc arcs_84_0[1] = {
+-    {174, 1},
++static arc arcs_86_0[1] = {
++    {178, 1},
+ };
+-static arc arcs_84_1[2] = {
+-    {175, 2},
++static arc arcs_86_1[2] = {
++    {179, 2},
+     {0, 1},
+ };
+-static arc arcs_84_2[1] = {
++static arc arcs_86_2[1] = {
+     {0, 2},
+ };
+-static state states_84[3] = {
+-    {1, arcs_84_0},
+-    {2, arcs_84_1},
+-    {1, arcs_84_2},
++static state states_86[3] = {
++    {1, arcs_86_0},
++    {2, arcs_86_1},
++    {1, arcs_86_2},
+ };
+-static arc arcs_85_0[2] = {
+-    {77, 1},
++static arc arcs_87_0[2] = {
++    {81, 1},
+     {9, 2},
+ };
+-static arc arcs_85_1[1] = {
++static arc arcs_87_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_85_2[1] = {
++static arc arcs_87_2[1] = {
+     {0, 2},
+ };
+-static state states_85[3] = {
+-    {2, arcs_85_0},
+-    {1, arcs_85_1},
+-    {1, arcs_85_2},
++static state states_87[3] = {
++    {2, arcs_87_0},
++    {1, arcs_87_1},
++    {1, arcs_87_2},
+ };
+-static dfa dfas[86] = {
++static dfa dfas[88] = {
+     {256, "single_input", 0, 3, states_0,
+-     "\004\050\340\000\002\000\000\000\012\076\011\007\262\004\020\002\000\300\220\050\037\102"},
++     "\004\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     {257, "file_input", 0, 2, states_1,
+-     "\204\050\340\000\002\000\000\000\012\076\011\007\262\004\020\002\000\300\220\050\037\102"},
++     "\204\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     {258, "eval_input", 0, 3, states_2,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     {259, "decorator", 0, 7, states_3,
+-     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {260, "decorators", 0, 2, states_4,
+-     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {261, "decorated", 0, 3, states_5,
+-     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {262, "async_funcdef", 0, 3, states_6,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {263, "funcdef", 0, 8, states_7,
+-     "\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {264, "parameters", 0, 4, states_8,
+-     "\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {265, "typedargslist", 0, 19, states_9,
+-     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {266, "tfpdef", 0, 4, states_10,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {267, "varargslist", 0, 19, states_11,
+-     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {268, "vfpdef", 0, 2, states_12,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {269, "stmt", 0, 2, states_13,
+-     "\000\050\340\000\002\000\000\000\012\076\011\007\262\004\020\002\000\300\220\050\037\102"},
++     "\000\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     {270, "simple_stmt", 0, 4, states_14,
+-     "\000\040\200\000\002\000\000\000\012\076\011\007\000\000\020\002\000\300\220\050\037\100"},
++     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
+     {271, "small_stmt", 0, 2, states_15,
+-     "\000\040\200\000\002\000\000\000\012\076\011\007\000\000\020\002\000\300\220\050\037\100"},
++     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
+     {272, "expr_stmt", 0, 6, states_16,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     {273, "annassign", 0, 5, states_17,
+-     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {274, "testlist_star_expr", 0, 3, states_18,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     {275, "augassign", 0, 2, states_19,
+-     "\000\000\000\000\000\000\360\377\001\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\000\000\000\000\300\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {276, "del_stmt", 0, 3, states_20,
+-     "\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {277, "pass_stmt", 0, 2, states_21,
+-     "\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {278, "flow_stmt", 0, 2, states_22,
+-     "\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\000\000\000\000\000\000\100"},
+-    {279, "break_stmt", 0, 2, states_23,
+-     "\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {280, "continue_stmt", 0, 2, states_24,
+-     "\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {281, "return_stmt", 0, 3, states_25,
+-     "\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {282, "yield_stmt", 0, 2, states_26,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\100"},
+-    {283, "raise_stmt", 0, 5, states_27,
+-     "\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {284, "import_stmt", 0, 2, states_28,
+-     "\000\000\000\000\000\000\000\000\000\040\001\000\000\000\000\000\000\000\000\000\000\000"},
+-    {285, "import_name", 0, 3, states_29,
+-     "\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"},
+-    {286, "import_from", 0, 8, states_30,
+-     "\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {287, "import_as_name", 0, 4, states_31,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {288, "dotted_as_name", 0, 4, states_32,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {289, "import_as_names", 0, 3, states_33,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {290, "dotted_as_names", 0, 2, states_34,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {291, "dotted_name", 0, 2, states_35,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {292, "global_stmt", 0, 3, states_36,
+-     "\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000"},
+-    {293, "nonlocal_stmt", 0, 3, states_37,
+-     "\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000"},
+-    {294, "assert_stmt", 0, 5, states_38,
+-     "\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000"},
+-    {295, "compound_stmt", 0, 2, states_39,
+-     "\000\010\140\000\000\000\000\000\000\000\000\000\262\004\000\000\000\000\000\000\000\002"},
+-    {296, "async_stmt", 0, 3, states_40,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {297, "if_stmt", 0, 8, states_41,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
+-    {298, "while_stmt", 0, 8, states_42,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000"},
+-    {299, "for_stmt", 0, 10, states_43,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000"},
+-    {300, "try_stmt", 0, 13, states_44,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000"},
+-    {301, "with_stmt", 0, 5, states_45,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000"},
+-    {302, "with_item", 0, 4, states_46,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {303, "except_clause", 0, 5, states_47,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000"},
+-    {304, "suite", 0, 5, states_48,
+-     "\004\040\200\000\002\000\000\000\012\076\011\007\000\000\020\002\000\300\220\050\037\100"},
+-    {305, "test", 0, 6, states_49,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {306, "test_nocond", 0, 2, states_50,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {307, "lambdef", 0, 5, states_51,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000"},
+-    {308, "lambdef_nocond", 0, 5, states_52,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000"},
+-    {309, "or_test", 0, 2, states_53,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\002\000\300\220\050\037\000"},
+-    {310, "and_test", 0, 2, states_54,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\002\000\300\220\050\037\000"},
+-    {311, "not_test", 0, 3, states_55,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\002\000\300\220\050\037\000"},
+-    {312, "comparison", 0, 2, states_56,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {313, "comp_op", 0, 4, states_57,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\362\017\000\000\000\000\000"},
+-    {314, "star_expr", 0, 3, states_58,
+-     "\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {315, "expr", 0, 2, states_59,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {316, "xor_expr", 0, 2, states_60,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {317, "and_expr", 0, 2, states_61,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {318, "shift_expr", 0, 2, states_62,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {319, "arith_expr", 0, 2, states_63,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {320, "term", 0, 2, states_64,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {321, "factor", 0, 3, states_65,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {322, "power", 0, 4, states_66,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\200\050\037\000"},
+-    {323, "atom_expr", 0, 3, states_67,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\200\050\037\000"},
+-    {324, "atom", 0, 9, states_68,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\050\037\000"},
+-    {325, "testlist_comp", 0, 5, states_69,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {326, "trailer", 0, 7, states_70,
+-     "\000\040\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\010\000\000"},
+-    {327, "subscriptlist", 0, 3, states_71,
+-     "\000\040\200\010\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {328, "subscript", 0, 5, states_72,
+-     "\000\040\200\010\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {329, "sliceop", 0, 3, states_73,
+-     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {330, "exprlist", 0, 3, states_74,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {331, "testlist", 0, 3, states_75,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {332, "dictorsetmaker", 0, 14, states_76,
+-     "\000\040\200\000\006\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {333, "classdef", 0, 8, states_77,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"},
+-    {334, "arglist", 0, 3, states_78,
+-     "\000\040\200\000\006\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {335, "argument", 0, 4, states_79,
+-     "\000\040\200\000\006\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {336, "comp_iter", 0, 2, states_80,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\042\000\000\000\000\000\000\000\000\000"},
+-    {337, "comp_for", 0, 7, states_81,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000"},
+-    {338, "comp_if", 0, 4, states_82,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
+-    {339, "encoding_decl", 0, 2, states_83,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {340, "yield_expr", 0, 3, states_84,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\100"},
+-    {341, "yield_arg", 0, 3, states_85,
+-     "\000\040\200\000\000\000\000\000\000\040\010\000\000\000\020\002\000\300\220\050\037\000"},
+-};
+-static label labels[176] = {
++     "\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {277, "incr_stmt", 0, 2, states_21,
++     "\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {278, "decr_stmt", 0, 2, states_22,
++     "\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {279, "pass_stmt", 0, 2, states_23,
++     "\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {280, "flow_stmt", 0, 2, states_24,
++     "\000\000\000\000\000\000\000\000\000\340\001\000\000\000\000\000\000\000\000\000\000\000\004"},
++    {281, "break_stmt", 0, 2, states_25,
++     "\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {282, "continue_stmt", 0, 2, states_26,
++     "\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {283, "return_stmt", 0, 3, states_27,
++     "\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {284, "yield_stmt", 0, 2, states_28,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004"},
++    {285, "raise_stmt", 0, 5, states_29,
++     "\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {286, "import_stmt", 0, 2, states_30,
++     "\000\000\000\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {287, "import_name", 0, 3, states_31,
++     "\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {288, "import_from", 0, 8, states_32,
++     "\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {289, "import_as_name", 0, 4, states_33,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {290, "dotted_as_name", 0, 4, states_34,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {291, "import_as_names", 0, 3, states_35,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {292, "dotted_as_names", 0, 2, states_36,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {293, "dotted_name", 0, 2, states_37,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {294, "global_stmt", 0, 3, states_38,
++     "\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000"},
++    {295, "nonlocal_stmt", 0, 3, states_39,
++     "\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000"},
++    {296, "assert_stmt", 0, 5, states_40,
++     "\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000"},
++    {297, "compound_stmt", 0, 2, states_41,
++     "\000\010\140\000\000\000\000\000\000\000\000\000\040\113\000\000\000\000\000\000\000\040\000"},
++    {298, "async_stmt", 0, 3, states_42,
++     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {299, "if_stmt", 0, 8, states_43,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000"},
++    {300, "while_stmt", 0, 8, states_44,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000"},
++    {301, "for_stmt", 0, 10, states_45,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
++    {302, "try_stmt", 0, 13, states_46,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000"},
++    {303, "with_stmt", 0, 5, states_47,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000"},
++    {304, "with_item", 0, 4, states_48,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {305, "except_clause", 0, 5, states_49,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000"},
++    {306, "suite", 0, 5, states_50,
++     "\004\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
++    {307, "test", 0, 6, states_51,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {308, "test_nocond", 0, 2, states_52,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {309, "lambdef", 0, 5, states_53,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"},
++    {310, "lambdef_nocond", 0, 5, states_54,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"},
++    {311, "or_test", 0, 2, states_55,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
++    {312, "and_test", 0, 2, states_56,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
++    {313, "not_test", 0, 3, states_57,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
++    {314, "comparison", 0, 2, states_58,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {315, "comp_op", 0, 4, states_59,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\040\377\000\000\000\000\000\000"},
++    {316, "star_expr", 0, 3, states_60,
++     "\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {317, "expr", 0, 2, states_61,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {318, "xor_expr", 0, 2, states_62,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {319, "and_expr", 0, 2, states_63,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {320, "shift_expr", 0, 2, states_64,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {321, "arith_expr", 0, 2, states_65,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {322, "term", 0, 2, states_66,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {323, "factor", 0, 3, states_67,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {324, "power", 0, 4, states_68,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\210\362\001\000"},
++    {325, "atom_expr", 0, 3, states_69,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\210\362\001\000"},
++    {326, "atom", 0, 9, states_70,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\200\362\001\000"},
++    {327, "testlist_comp", 0, 5, states_71,
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {328, "trailer", 0, 7, states_72,
++     "\000\040\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\200\000\000\000"},
++    {329, "subscriptlist", 0, 3, states_73,
++     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {330, "subscript", 0, 5, states_74,
++     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {331, "sliceop", 0, 3, states_75,
++     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {332, "exprlist", 0, 3, states_76,
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {333, "testlist", 0, 3, states_77,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {334, "dictorsetmaker", 0, 14, states_78,
++     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {335, "classdef", 0, 8, states_79,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\040\000"},
++    {336, "arglist", 0, 3, states_80,
++     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {337, "argument", 0, 4, states_81,
++     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {338, "comp_iter", 0, 2, states_82,
++     "\000\000\040\000\000\000\000\000\000\000\000\000\040\002\000\000\000\000\000\000\000\000\000"},
++    {339, "comp_for", 0, 7, states_83,
++     "\000\000\040\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
++    {340, "comp_if", 0, 4, states_84,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000"},
++    {341, "encoding_decl", 0, 2, states_85,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {342, "yield_expr", 0, 3, states_86,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004"},
++    {343, "yield_arg", 0, 3, states_87,
++     "\000\040\200\000\000\000\000\000\000\000\202\000\000\000\000\041\000\000\014\211\362\001\000"},
++};
++static label labels[180] = {
+     {0, "EMPTY"},
+     {256, 0},
+     {4, 0},
+     {270, 0},
+-    {295, 0},
++    {297, 0},
+     {257, 0},
+     {269, 0},
+     {0, 0},
+     {258, 0},
+-    {331, 0},
++    {333, 0},
+     {259, 0},
+     {49, 0},
+-    {291, 0},
++    {293, 0},
+     {7, 0},
+-    {334, 0},
++    {336, 0},
+     {8, 0},
+     {260, 0},
+     {261, 0},
+-    {333, 0},
++    {335, 0},
+     {263, 0},
+     {262, 0},
+     {55, 0},
+@@ -2104,9 +2130,9 @@ static label labels[176] = {
+     {1, 0},
+     {264, 0},
+     {51, 0},
+-    {305, 0},
++    {307, 0},
+     {11, 0},
+-    {304, 0},
++    {306, 0},
+     {265, 0},
+     {266, 0},
+     {22, 0},
+@@ -2119,17 +2145,19 @@ static label labels[176] = {
+     {13, 0},
+     {272, 0},
+     {276, 0},
+-    {277, 0},
+-    {278, 0},
+-    {284, 0},
+-    {292, 0},
+-    {293, 0},
++    {279, 0},
++    {280, 0},
++    {286, 0},
+     {294, 0},
++    {295, 0},
++    {296, 0},
+     {274, 0},
+     {273, 0},
+     {275, 0},
+-    {340, 0},
+-    {314, 0},
++    {342, 0},
++    {277, 0},
++    {278, 0},
++    {316, 0},
+     {36, 0},
+     {37, 0},
+     {38, 0},
+@@ -2144,37 +2172,39 @@ static label labels[176] = {
+     {46, 0},
+     {48, 0},
+     {1, "del"},
+-    {330, 0},
++    {332, 0},
++    {58, 0},
++    {59, 0},
+     {1, "pass"},
+-    {279, 0},
+-    {280, 0},
+     {281, 0},
+-    {283, 0},
+     {282, 0},
++    {283, 0},
++    {285, 0},
++    {284, 0},
+     {1, "break"},
+     {1, "continue"},
+     {1, "return"},
+     {1, "raise"},
+     {1, "from"},
+-    {285, 0},
+-    {286, 0},
++    {287, 0},
++    {288, 0},
+     {1, "import"},
+-    {290, 0},
++    {292, 0},
+     {23, 0},
+     {52, 0},
++    {291, 0},
+     {289, 0},
+-    {287, 0},
+     {1, "as"},
+-    {288, 0},
++    {290, 0},
+     {1, "global"},
+     {1, "nonlocal"},
+     {1, "assert"},
+-    {297, 0},
+-    {298, 0},
+     {299, 0},
+     {300, 0},
+     {301, 0},
+-    {296, 0},
++    {302, 0},
++    {303, 0},
++    {298, 0},
+     {1, "if"},
+     {1, "elif"},
+     {1, "else"},
+@@ -2182,26 +2212,26 @@ static label labels[176] = {
+     {1, "for"},
+     {1, "in"},
+     {1, "try"},
+-    {303, 0},
++    {305, 0},
+     {1, "finally"},
+     {1, "with"},
+-    {302, 0},
+-    {315, 0},
++    {304, 0},
++    {317, 0},
+     {1, "except"},
+     {5, 0},
+     {6, 0},
++    {311, 0},
+     {309, 0},
+-    {307, 0},
+-    {306, 0},
+     {308, 0},
+-    {1, "lambda"},
+     {310, 0},
++    {1, "lambda"},
++    {312, 0},
+     {1, "or"},
+-    {311, 0},
++    {313, 0},
+     {1, "and"},
+     {1, "not"},
+-    {312, 0},
+-    {313, 0},
++    {314, 0},
++    {315, 0},
+     {20, 0},
+     {21, 0},
+     {27, 0},
+@@ -2210,54 +2240,54 @@ static label labels[176] = {
+     {28, 0},
+     {28, 0},
+     {1, "is"},
+-    {316, 0},
++    {318, 0},
+     {18, 0},
+-    {317, 0},
++    {319, 0},
+     {32, 0},
+-    {318, 0},
++    {320, 0},
+     {19, 0},
+-    {319, 0},
++    {321, 0},
+     {33, 0},
+     {34, 0},
+-    {320, 0},
++    {322, 0},
+     {14, 0},
+     {15, 0},
+-    {321, 0},
++    {323, 0},
+     {17, 0},
+     {24, 0},
+     {47, 0},
+     {31, 0},
+-    {322, 0},
+-    {323, 0},
+-    {54, 0},
+     {324, 0},
+-    {326, 0},
+     {325, 0},
++    {54, 0},
++    {326, 0},
++    {328, 0},
++    {327, 0},
+     {9, 0},
+     {10, 0},
+     {25, 0},
+-    {332, 0},
++    {334, 0},
+     {26, 0},
+     {2, 0},
+     {3, 0},
+     {1, "None"},
+     {1, "True"},
+     {1, "False"},
+-    {337, 0},
+-    {327, 0},
+-    {328, 0},
++    {339, 0},
+     {329, 0},
++    {330, 0},
++    {331, 0},
+     {1, "class"},
+-    {335, 0},
+-    {336, 0},
++    {337, 0},
+     {338, 0},
+-    {339, 0},
+-    {1, "yield"},
++    {340, 0},
+     {341, 0},
++    {1, "yield"},
++    {343, 0},
+ };
+ grammar _PyParser_Grammar = {
+-    86,
++    88,
+     dfas,
+-    {176, labels},
++    {180, labels},
+     256
+ };
+-- 
+2.30.2
+
diff --git a/Grammar/Grammar b/Grammar/Grammar
index 7b3157f5e5..f7943c0956 100644
--- a/Grammar/Grammar
+++ b/Grammar/Grammar
@@ -73,10 +73,13 @@ global_stmt: 'global' NAME (',' NAME)*
 nonlocal_stmt: 'nonlocal' NAME (',' NAME)*
 assert_stmt: 'assert' test [',' test]
 
-compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated | async_stmt
+compound_stmt: if_stmt | while_stmt | until_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated | async_stmt
 async_stmt: ASYNC (funcdef | with_stmt | for_stmt)
 if_stmt: 'if' test ':' suite ('elif' test ':' suite)* ['else' ':' suite]
 while_stmt: 'while' test ':' suite ['else' ':' suite]
+until_stmt: 'until' test ':' suite
+
+
 for_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]
 try_stmt: ('try' ':' suite
            ((except_clause ':' suite)+
diff --git a/Include/Python-ast.h b/Include/Python-ast.h
index a39cdda5c6..c1f8b49f81 100644
--- a/Include/Python-ast.h
+++ b/Include/Python-ast.h
@@ -65,12 +65,12 @@ struct _mod {
 
 enum _stmt_kind {FunctionDef_kind=1, AsyncFunctionDef_kind=2, ClassDef_kind=3,
                   Return_kind=4, Delete_kind=5, Assign_kind=6,
-                  AugAssign_kind=7, Increment_kind=8, Decrement_kind=9, AnnAssign_kind=10, For_kind=11,
-                  AsyncFor_kind=12, While_kind=13, If_kind=14, With_kind=15,
-                  AsyncWith_kind=16, Raise_kind=17, Try_kind=18,
-                  Assert_kind=19, Import_kind=20, ImportFrom_kind=21,
-                  Global_kind=22, Nonlocal_kind=23, Expr_kind=24, Pass_kind=25,
-                  Break_kind=26, Continue_kind=27};
+                  AugAssign_kind=7, AnnAssign_kind=8, For_kind=9,
+                  AsyncFor_kind=10, While_kind=11, Until_kind=12, If_kind=13,
+                  With_kind=14, AsyncWith_kind=15, Raise_kind=16, Try_kind=17,
+                  Assert_kind=18, Import_kind=19, ImportFrom_kind=20,
+                  Global_kind=21, Nonlocal_kind=22, Expr_kind=23, Pass_kind=24,
+                  Break_kind=25, Continue_kind=26};
 struct _stmt {
     enum _stmt_kind kind;
     union {
@@ -116,14 +116,6 @@ struct _stmt {
             operator_ty op;
             expr_ty value;
         } AugAssign;
-
-        struct {
-            expr_ty target;
-        } Increment;
-
-        struct {
-            expr_ty target;
-        } Decrement;
         
         struct {
             expr_ty target;
@@ -152,6 +144,11 @@ struct _stmt {
             asdl_seq *orelse;
         } While;
         
+        struct {
+            expr_ty test;
+            asdl_seq *body;
+        } Until;
+        
         struct {
             expr_ty test;
             asdl_seq *body;
@@ -478,13 +475,6 @@ stmt_ty _Py_Assign(asdl_seq * targets, expr_ty value, int lineno, int
 #define AugAssign(a0, a1, a2, a3, a4, a5) _Py_AugAssign(a0, a1, a2, a3, a4, a5)
 stmt_ty _Py_AugAssign(expr_ty target, operator_ty op, expr_ty value, int
                       lineno, int col_offset, PyArena *arena);
-#define Increment(a0, a1, a2, a3) _Py_Increment(a0, a1, a2, a3)
-stmt_ty _Py_Increment(expr_ty target, int lineno, int col_offset, PyArena
-                      *arena);
-#define Decrement(a0, a1, a2, a3) _Py_Decrement(a0, a1, a2, a3)
-stmt_ty _Py_Decrement(expr_ty target, int lineno, int col_offset, PyArena
-                      *arena);
-
 #define AnnAssign(a0, a1, a2, a3, a4, a5, a6) _Py_AnnAssign(a0, a1, a2, a3, a4, a5, a6)
 stmt_ty _Py_AnnAssign(expr_ty target, expr_ty annotation, expr_ty value, int
                       simple, int lineno, int col_offset, PyArena *arena);
@@ -497,6 +487,9 @@ stmt_ty _Py_AsyncFor(expr_ty target, expr_ty iter, asdl_seq * body, asdl_seq *
 #define While(a0, a1, a2, a3, a4, a5) _Py_While(a0, a1, a2, a3, a4, a5)
 stmt_ty _Py_While(expr_ty test, asdl_seq * body, asdl_seq * orelse, int lineno,
                   int col_offset, PyArena *arena);
+#define Until(a0, a1, a2, a3, a4) _Py_Until(a0, a1, a2, a3, a4)
+stmt_ty _Py_Until(expr_ty test, asdl_seq * body, int lineno, int col_offset,
+                  PyArena *arena);
 #define If(a0, a1, a2, a3, a4, a5) _Py_If(a0, a1, a2, a3, a4, a5)
 stmt_ty _Py_If(expr_ty test, asdl_seq * body, asdl_seq * orelse, int lineno,
                int col_offset, PyArena *arena);
diff --git a/Include/graminit.h b/Include/graminit.h
index 7d988f7cf1..5c8828f6e6 100644
--- a/Include/graminit.h
+++ b/Include/graminit.h
@@ -45,46 +45,47 @@
 #define async_stmt 298
 #define if_stmt 299
 #define while_stmt 300
-#define for_stmt 301
-#define try_stmt 302
-#define with_stmt 303
-#define with_item 304
-#define except_clause 305
-#define suite 306
-#define test 307
-#define test_nocond 308
-#define lambdef 309
-#define lambdef_nocond 310
-#define or_test 311
-#define and_test 312
-#define not_test 313
-#define comparison 314
-#define comp_op 315
-#define star_expr 316
-#define expr 317
-#define xor_expr 318
-#define and_expr 319
-#define shift_expr 320
-#define arith_expr 321
-#define term 322
-#define factor 323
-#define power 324
-#define atom_expr 325
-#define atom 326
-#define testlist_comp 327
-#define trailer 328
-#define subscriptlist 329
-#define subscript 330
-#define sliceop 331
-#define exprlist 332
-#define testlist 333
-#define dictorsetmaker 334
-#define classdef 335
-#define arglist 336
-#define argument 337
-#define comp_iter 338
-#define comp_for 339
-#define comp_if 340
-#define encoding_decl 341
-#define yield_expr 342
-#define yield_arg 343
+#define until_stmt 301
+#define for_stmt 302
+#define try_stmt 303
+#define with_stmt 304
+#define with_item 305
+#define except_clause 306
+#define suite 307
+#define test 308
+#define test_nocond 309
+#define lambdef 310
+#define lambdef_nocond 311
+#define or_test 312
+#define and_test 313
+#define not_test 314
+#define comparison 315
+#define comp_op 316
+#define star_expr 317
+#define expr 318
+#define xor_expr 319
+#define and_expr 320
+#define shift_expr 321
+#define arith_expr 322
+#define term 323
+#define factor 324
+#define power 325
+#define atom_expr 326
+#define atom 327
+#define testlist_comp 328
+#define trailer 329
+#define subscriptlist 330
+#define subscript 331
+#define sliceop 332
+#define exprlist 333
+#define testlist 334
+#define dictorsetmaker 335
+#define classdef 336
+#define arglist 337
+#define argument 338
+#define comp_iter 339
+#define comp_for 340
+#define comp_if 341
+#define encoding_decl 342
+#define yield_expr 343
+#define yield_arg 344
diff --git a/Parser/Python.asdl b/Parser/Python.asdl
index f470ad13b6..410c93e6ab 100644
--- a/Parser/Python.asdl
+++ b/Parser/Python.asdl
@@ -35,6 +35,7 @@ module Python
           | For(expr target, expr iter, stmt* body, stmt* orelse)
           | AsyncFor(expr target, expr iter, stmt* body, stmt* orelse)
           | While(expr test, stmt* body, stmt* orelse)
+          | Until(expr test, stmt* body)
           | If(expr test, stmt* body, stmt* orelse)
           | With(withitem* items, stmt* body)
           | AsyncWith(withitem* items, stmt* body)
diff --git a/Python/Python-ast.c b/Python/Python-ast.c
index dcf24f0df3..0a0823700c 100644
--- a/Python/Python-ast.c
+++ b/Python/Python-ast.c
@@ -118,6 +118,11 @@ static char *While_fields[]={
     "body",
     "orelse",
 };
+static PyTypeObject *Until_type;
+static char *Until_fields[]={
+    "test",
+    "body",
+};
 static PyTypeObject *If_type;
 static char *If_fields[]={
     "test",
@@ -897,6 +902,8 @@ static int init_types(void)
     if (!AsyncFor_type) return 0;
     While_type = make_type("While", stmt_type, While_fields, 3);
     if (!While_type) return 0;
+    Until_type = make_type("Until", stmt_type, Until_fields, 2);
+    if (!Until_type) return 0;
     If_type = make_type("If", stmt_type, If_fields, 3);
     if (!If_type) return 0;
     With_type = make_type("With", stmt_type, With_fields, 2);
@@ -1530,6 +1537,26 @@ While(expr_ty test, asdl_seq * body, asdl_seq * orelse, int lineno, int
     return p;
 }
 
+stmt_ty
+Until(expr_ty test, asdl_seq * body, int lineno, int col_offset, PyArena *arena)
+{
+    stmt_ty p;
+    if (!test) {
+        PyErr_SetString(PyExc_ValueError,
+                        "field test is required for Until");
+        return NULL;
+    }
+    p = (stmt_ty)PyArena_Malloc(arena, sizeof(*p));
+    if (!p)
+        return NULL;
+    p->kind = Until_kind;
+    p->v.Until.test = test;
+    p->v.Until.body = body;
+    p->lineno = lineno;
+    p->col_offset = col_offset;
+    return p;
+}
+
 stmt_ty
 If(expr_ty test, asdl_seq * body, asdl_seq * orelse, int lineno, int
    col_offset, PyArena *arena)
@@ -2877,6 +2904,20 @@ ast2obj_stmt(void* _o)
             goto failed;
         Py_DECREF(value);
         break;
+    case Until_kind:
+        result = PyType_GenericNew(Until_type, NULL, NULL);
+        if (!result) goto failed;
+        value = ast2obj_expr(o->v.Until.test);
+        if (!value) goto failed;
+        if (_PyObject_SetAttrId(result, &PyId_test, value) == -1)
+            goto failed;
+        Py_DECREF(value);
+        value = ast2obj_list(o->v.Until.body, ast2obj_stmt);
+        if (!value) goto failed;
+        if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)
+            goto failed;
+        Py_DECREF(value);
+        break;
     case If_kind:
         result = PyType_GenericNew(If_type, NULL, NULL);
         if (!result) goto failed;
@@ -4975,6 +5016,57 @@ obj2ast_stmt(PyObject* obj, stmt_ty* out, PyArena* arena)
         if (*out == NULL) goto failed;
         return 0;
     }
+    isinstance = PyObject_IsInstance(obj, (PyObject*)Until_type);
+    if (isinstance == -1) {
+        return 1;
+    }
+    if (isinstance) {
+        expr_ty test;
+        asdl_seq* body;
+
+        if (_PyObject_HasAttrId(obj, &PyId_test)) {
+            int res;
+            tmp = _PyObject_GetAttrId(obj, &PyId_test);
+            if (tmp == NULL) goto failed;
+            res = obj2ast_expr(tmp, &test, arena);
+            if (res != 0) goto failed;
+            Py_CLEAR(tmp);
+        } else {
+            PyErr_SetString(PyExc_TypeError, "required field \"test\" missing from Until");
+            return 1;
+        }
+        if (_PyObject_HasAttrId(obj, &PyId_body)) {
+            int res;
+            Py_ssize_t len;
+            Py_ssize_t i;
+            tmp = _PyObject_GetAttrId(obj, &PyId_body);
+            if (tmp == NULL) goto failed;
+            if (!PyList_Check(tmp)) {
+                PyErr_Format(PyExc_TypeError, "Until field \"body\" must be a list, not a %.200s", tmp->ob_type->tp_name);
+                goto failed;
+            }
+            len = PyList_GET_SIZE(tmp);
+            body = _Py_asdl_seq_new(len, arena);
+            if (body == NULL) goto failed;
+            for (i = 0; i < len; i++) {
+                stmt_ty value;
+                res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);
+                if (res != 0) goto failed;
+                if (len != PyList_GET_SIZE(tmp)) {
+                    PyErr_SetString(PyExc_RuntimeError, "Until field \"body\" changed size during iteration");
+                    goto failed;
+                }
+                asdl_seq_SET(body, i, value);
+            }
+            Py_CLEAR(tmp);
+        } else {
+            PyErr_SetString(PyExc_TypeError, "required field \"body\" missing from Until");
+            return 1;
+        }
+        *out = Until(test, body, lineno, col_offset, arena);
+        if (*out == NULL) goto failed;
+        return 0;
+    }
     isinstance = PyObject_IsInstance(obj, (PyObject*)If_type);
     if (isinstance == -1) {
         return 1;
@@ -7880,6 +7972,8 @@ PyInit__ast(void)
         return NULL;
     if (PyDict_SetItemString(d, "While", (PyObject*)While_type) < 0) return
         NULL;
+    if (PyDict_SetItemString(d, "Until", (PyObject*)Until_type) < 0) return
+        NULL;
     if (PyDict_SetItemString(d, "If", (PyObject*)If_type) < 0) return NULL;
     if (PyDict_SetItemString(d, "With", (PyObject*)With_type) < 0) return NULL;
     if (PyDict_SetItemString(d, "AsyncWith", (PyObject*)AsyncWith_type) < 0)
diff --git a/Python/ast.c b/Python/ast.c
index 3495e257a6..c6d513a2cb 100644
--- a/Python/ast.c
+++ b/Python/ast.c
@@ -3716,6 +3716,32 @@ ast_for_while_stmt(struct compiling *c, const node *n)
     return NULL;
 }
 
+static stmt_ty
+ast_for_until_stmt(struct compiling *c, const node *n)
+{
+    /* until_stmt: 'until' test ':' suite */
+    REQ(n, until_stmt);
+
+    if (NCH(n) == 4) {
+        expr_ty expression;
+        asdl_seq *suite_seq;
+
+        expression = ast_for_expr(c, CHILD(n, 1));
+        if (!expression)
+            return NULL;
+        suite_seq = ast_for_suite(c, CHILD(n, 3));
+        if (!suite_seq)
+            return NULL;
+        return Until(expression, suite_seq, LINENO(n), n->n_col_offset, c->c_arena);
+    }
+
+    PyErr_Format(PyExc_SystemError,
+                 "wrong number of tokens for 'until' statement: %d",
+                 NCH(n));
+    return NULL;
+}
+
+
 static stmt_ty
 ast_for_for_stmt(struct compiling *c, const node *n, int is_async)
 {
@@ -4046,6 +4072,9 @@ ast_for_stmt(struct compiling *c, const node *n)
                 return ast_for_if_stmt(c, ch);
             case while_stmt:
                 return ast_for_while_stmt(c, ch);
+            case until_stmt:
+                return ast_for_until_stmt(c, ch);
+
             case for_stmt:
                 return ast_for_for_stmt(c, ch, 0);
             case try_stmt:
diff --git a/Python/compile.c b/Python/compile.c
index 17fef31482..2cf941cbc4 100644
--- a/Python/compile.c
+++ b/Python/compile.c
@@ -2321,6 +2321,47 @@ compiler_while(struct compiler *c, stmt_ty s)
     return 1;
 }
 
+static int
+compiler_until(struct compiler *c, stmt_ty s)
+{
+    basicblock *loop, *end, *anchor = NULL;
+    int constant = expr_constant(c,s->v.Until.test);
+
+    if (constant == 1) {
+        return 1;
+    }
+    loop = compiler_new_block(c);
+    end = compiler_new_block(c);
+    if (constant == -1) {
+        anchor = compiler_new_block(c);
+        if (anchor == NULL)
+            return 0;
+    }
+    if (loop == NULL || end == NULL)
+        return 0;
+
+    ADDOP_JREL(c, SETUP_LOOP, end);
+    compiler_use_next_block(c, loop);
+    if (!compiler_push_fblock(c, LOOP, loop))
+        return 0;
+    if (constant == -1) {
+        VISIT(c, expr, s->v.Until.test);
+        ADDOP_JABS(c, POP_JUMP_IF_TRUE, anchor);
+    }
+    VISIT_SEQ(c, stmt, s->v.Until.body);
+    ADDOP_JABS(c, JUMP_ABSOLUTE, loop);
+
+    if (constant == -1) {
+        compiler_use_next_block(c, anchor);
+        ADDOP(c, POP_BLOCK);
+    }
+    compiler_pop_fblock(c, LOOP, loop);
+    compiler_use_next_block(c, end);
+
+    return 1;
+}
+
+
 static int
 compiler_continue(struct compiler *c)
 {
@@ -2849,6 +2890,8 @@ compiler_visit_stmt(struct compiler *c, stmt_ty s)
         return compiler_for(c, s);
     case While_kind:
         return compiler_while(c, s);
+    case Until_kind:
+        return compiler_until(c, s);
     case If_kind:
         return compiler_if(c, s);
     case Raise_kind:
diff --git a/Python/graminit.c b/Python/graminit.c
index 5f39a2e2cf..b31c4470fc 100644
--- a/Python/graminit.c
+++ b/Python/graminit.c
@@ -875,22 +875,23 @@ static state states_40[5] = {
     {1, arcs_40_3},
     {1, arcs_40_4},
 };
-static arc arcs_41_0[9] = {
+static arc arcs_41_0[10] = {
     {95, 1},
     {96, 1},
     {97, 1},
     {98, 1},
     {99, 1},
+    {100, 1},
     {19, 1},
     {18, 1},
     {17, 1},
-    {100, 1},
+    {101, 1},
 };
 static arc arcs_41_1[1] = {
     {0, 1},
 };
 static state states_41[2] = {
-    {9, arcs_41_0},
+    {10, arcs_41_0},
     {1, arcs_41_1},
 };
 static arc arcs_42_0[1] = {
@@ -898,8 +899,8 @@ static arc arcs_42_0[1] = {
 };
 static arc arcs_42_1[3] = {
     {19, 2},
-    {99, 2},
-    {97, 2},
+    {100, 2},
+    {98, 2},
 };
 static arc arcs_42_2[1] = {
     {0, 2},
@@ -910,7 +911,7 @@ static state states_42[3] = {
     {1, arcs_42_2},
 };
 static arc arcs_43_0[1] = {
-    {101, 1},
+    {102, 1},
 };
 static arc arcs_43_1[1] = {
     {26, 2},
@@ -922,8 +923,8 @@ static arc arcs_43_3[1] = {
     {28, 4},
 };
 static arc arcs_43_4[3] = {
-    {102, 1},
-    {103, 5},
+    {103, 1},
+    {104, 5},
     {0, 4},
 };
 static arc arcs_43_5[1] = {
@@ -946,7 +947,7 @@ static state states_43[8] = {
     {1, arcs_43_7},
 };
 static arc arcs_44_0[1] = {
-    {104, 1},
+    {105, 1},
 };
 static arc arcs_44_1[1] = {
     {26, 2},
@@ -958,7 +959,7 @@ static arc arcs_44_3[1] = {
     {28, 4},
 };
 static arc arcs_44_4[2] = {
-    {103, 5},
+    {104, 5},
     {0, 4},
 };
 static arc arcs_44_5[1] = {
@@ -981,261 +982,260 @@ static state states_44[8] = {
     {1, arcs_44_7},
 };
 static arc arcs_45_0[1] = {
-    {105, 1},
+    {106, 1},
 };
 static arc arcs_45_1[1] = {
-    {68, 2},
+    {26, 2},
 };
 static arc arcs_45_2[1] = {
-    {106, 3},
+    {27, 3},
 };
 static arc arcs_45_3[1] = {
-    {9, 4},
+    {28, 4},
 };
 static arc arcs_45_4[1] = {
-    {27, 5},
-};
-static arc arcs_45_5[1] = {
-    {28, 6},
-};
-static arc arcs_45_6[2] = {
-    {103, 7},
-    {0, 6},
-};
-static arc arcs_45_7[1] = {
-    {27, 8},
-};
-static arc arcs_45_8[1] = {
-    {28, 9},
-};
-static arc arcs_45_9[1] = {
-    {0, 9},
+    {0, 4},
 };
-static state states_45[10] = {
+static state states_45[5] = {
     {1, arcs_45_0},
     {1, arcs_45_1},
     {1, arcs_45_2},
     {1, arcs_45_3},
     {1, arcs_45_4},
-    {1, arcs_45_5},
-    {2, arcs_45_6},
-    {1, arcs_45_7},
-    {1, arcs_45_8},
-    {1, arcs_45_9},
 };
 static arc arcs_46_0[1] = {
     {107, 1},
 };
 static arc arcs_46_1[1] = {
-    {27, 2},
+    {68, 2},
 };
 static arc arcs_46_2[1] = {
-    {28, 3},
+    {108, 3},
 };
-static arc arcs_46_3[2] = {
-    {108, 4},
-    {109, 5},
+static arc arcs_46_3[1] = {
+    {9, 4},
 };
 static arc arcs_46_4[1] = {
-    {27, 6},
+    {27, 5},
 };
 static arc arcs_46_5[1] = {
-    {27, 7},
+    {28, 6},
 };
-static arc arcs_46_6[1] = {
-    {28, 8},
+static arc arcs_46_6[2] = {
+    {104, 7},
+    {0, 6},
 };
 static arc arcs_46_7[1] = {
-    {28, 9},
+    {27, 8},
 };
-static arc arcs_46_8[4] = {
-    {108, 4},
-    {103, 10},
-    {109, 5},
-    {0, 8},
+static arc arcs_46_8[1] = {
+    {28, 9},
 };
 static arc arcs_46_9[1] = {
     {0, 9},
 };
-static arc arcs_46_10[1] = {
-    {27, 11},
-};
-static arc arcs_46_11[1] = {
-    {28, 12},
-};
-static arc arcs_46_12[2] = {
-    {109, 5},
-    {0, 12},
-};
-static state states_46[13] = {
+static state states_46[10] = {
     {1, arcs_46_0},
     {1, arcs_46_1},
     {1, arcs_46_2},
-    {2, arcs_46_3},
+    {1, arcs_46_3},
     {1, arcs_46_4},
     {1, arcs_46_5},
-    {1, arcs_46_6},
+    {2, arcs_46_6},
     {1, arcs_46_7},
-    {4, arcs_46_8},
+    {1, arcs_46_8},
     {1, arcs_46_9},
-    {1, arcs_46_10},
-    {1, arcs_46_11},
-    {2, arcs_46_12},
 };
 static arc arcs_47_0[1] = {
-    {110, 1},
+    {109, 1},
 };
 static arc arcs_47_1[1] = {
-    {111, 2},
+    {27, 2},
 };
-static arc arcs_47_2[2] = {
-    {32, 1},
-    {27, 3},
+static arc arcs_47_2[1] = {
+    {28, 3},
 };
-static arc arcs_47_3[1] = {
-    {28, 4},
+static arc arcs_47_3[2] = {
+    {110, 4},
+    {111, 5},
 };
 static arc arcs_47_4[1] = {
-    {0, 4},
+    {27, 6},
+};
+static arc arcs_47_5[1] = {
+    {27, 7},
+};
+static arc arcs_47_6[1] = {
+    {28, 8},
+};
+static arc arcs_47_7[1] = {
+    {28, 9},
+};
+static arc arcs_47_8[4] = {
+    {110, 4},
+    {104, 10},
+    {111, 5},
+    {0, 8},
+};
+static arc arcs_47_9[1] = {
+    {0, 9},
+};
+static arc arcs_47_10[1] = {
+    {27, 11},
+};
+static arc arcs_47_11[1] = {
+    {28, 12},
 };
-static state states_47[5] = {
+static arc arcs_47_12[2] = {
+    {111, 5},
+    {0, 12},
+};
+static state states_47[13] = {
     {1, arcs_47_0},
     {1, arcs_47_1},
-    {2, arcs_47_2},
-    {1, arcs_47_3},
+    {1, arcs_47_2},
+    {2, arcs_47_3},
     {1, arcs_47_4},
+    {1, arcs_47_5},
+    {1, arcs_47_6},
+    {1, arcs_47_7},
+    {4, arcs_47_8},
+    {1, arcs_47_9},
+    {1, arcs_47_10},
+    {1, arcs_47_11},
+    {2, arcs_47_12},
 };
 static arc arcs_48_0[1] = {
-    {26, 1},
+    {112, 1},
 };
-static arc arcs_48_1[2] = {
-    {90, 2},
-    {0, 1},
+static arc arcs_48_1[1] = {
+    {113, 2},
 };
-static arc arcs_48_2[1] = {
-    {112, 3},
+static arc arcs_48_2[2] = {
+    {32, 1},
+    {27, 3},
 };
 static arc arcs_48_3[1] = {
-    {0, 3},
+    {28, 4},
+};
+static arc arcs_48_4[1] = {
+    {0, 4},
 };
-static state states_48[4] = {
+static state states_48[5] = {
     {1, arcs_48_0},
-    {2, arcs_48_1},
-    {1, arcs_48_2},
+    {1, arcs_48_1},
+    {2, arcs_48_2},
     {1, arcs_48_3},
+    {1, arcs_48_4},
 };
 static arc arcs_49_0[1] = {
-    {113, 1},
+    {26, 1},
 };
 static arc arcs_49_1[2] = {
-    {26, 2},
+    {90, 2},
     {0, 1},
 };
-static arc arcs_49_2[2] = {
-    {90, 3},
-    {0, 2},
+static arc arcs_49_2[1] = {
+    {114, 3},
 };
 static arc arcs_49_3[1] = {
-    {23, 4},
-};
-static arc arcs_49_4[1] = {
-    {0, 4},
+    {0, 3},
 };
-static state states_49[5] = {
+static state states_49[4] = {
     {1, arcs_49_0},
     {2, arcs_49_1},
-    {2, arcs_49_2},
+    {1, arcs_49_2},
     {1, arcs_49_3},
-    {1, arcs_49_4},
 };
-static arc arcs_50_0[2] = {
-    {3, 1},
-    {2, 2},
+static arc arcs_50_0[1] = {
+    {115, 1},
 };
-static arc arcs_50_1[1] = {
+static arc arcs_50_1[2] = {
+    {26, 2},
     {0, 1},
 };
-static arc arcs_50_2[1] = {
-    {114, 3},
+static arc arcs_50_2[2] = {
+    {90, 3},
+    {0, 2},
 };
 static arc arcs_50_3[1] = {
-    {6, 4},
+    {23, 4},
 };
-static arc arcs_50_4[2] = {
-    {6, 4},
-    {115, 1},
+static arc arcs_50_4[1] = {
+    {0, 4},
 };
 static state states_50[5] = {
-    {2, arcs_50_0},
-    {1, arcs_50_1},
-    {1, arcs_50_2},
+    {1, arcs_50_0},
+    {2, arcs_50_1},
+    {2, arcs_50_2},
     {1, arcs_50_3},
-    {2, arcs_50_4},
+    {1, arcs_50_4},
 };
 static arc arcs_51_0[2] = {
-    {116, 1},
-    {117, 2},
+    {3, 1},
+    {2, 2},
 };
-static arc arcs_51_1[2] = {
-    {101, 3},
+static arc arcs_51_1[1] = {
     {0, 1},
 };
 static arc arcs_51_2[1] = {
-    {0, 2},
+    {116, 3},
 };
 static arc arcs_51_3[1] = {
-    {116, 4},
-};
-static arc arcs_51_4[1] = {
-    {103, 5},
+    {6, 4},
 };
-static arc arcs_51_5[1] = {
-    {26, 2},
+static arc arcs_51_4[2] = {
+    {6, 4},
+    {117, 1},
 };
-static state states_51[6] = {
+static state states_51[5] = {
     {2, arcs_51_0},
-    {2, arcs_51_1},
+    {1, arcs_51_1},
     {1, arcs_51_2},
     {1, arcs_51_3},
-    {1, arcs_51_4},
-    {1, arcs_51_5},
+    {2, arcs_51_4},
 };
 static arc arcs_52_0[2] = {
-    {116, 1},
-    {119, 1},
+    {118, 1},
+    {119, 2},
 };
-static arc arcs_52_1[1] = {
+static arc arcs_52_1[2] = {
+    {102, 3},
     {0, 1},
 };
-static state states_52[2] = {
-    {2, arcs_52_0},
-    {1, arcs_52_1},
+static arc arcs_52_2[1] = {
+    {0, 2},
 };
-static arc arcs_53_0[1] = {
-    {120, 1},
+static arc arcs_52_3[1] = {
+    {118, 4},
 };
-static arc arcs_53_1[2] = {
-    {35, 2},
-    {27, 3},
+static arc arcs_52_4[1] = {
+    {104, 5},
 };
-static arc arcs_53_2[1] = {
-    {27, 3},
+static arc arcs_52_5[1] = {
+    {26, 2},
 };
-static arc arcs_53_3[1] = {
-    {26, 4},
+static state states_52[6] = {
+    {2, arcs_52_0},
+    {2, arcs_52_1},
+    {1, arcs_52_2},
+    {1, arcs_52_3},
+    {1, arcs_52_4},
+    {1, arcs_52_5},
+};
+static arc arcs_53_0[2] = {
+    {118, 1},
+    {121, 1},
 };
-static arc arcs_53_4[1] = {
-    {0, 4},
+static arc arcs_53_1[1] = {
+    {0, 1},
 };
-static state states_53[5] = {
-    {1, arcs_53_0},
-    {2, arcs_53_1},
-    {1, arcs_53_2},
-    {1, arcs_53_3},
-    {1, arcs_53_4},
+static state states_53[2] = {
+    {2, arcs_53_0},
+    {1, arcs_53_1},
 };
 static arc arcs_54_0[1] = {
-    {120, 1},
+    {122, 1},
 };
 static arc arcs_54_1[2] = {
     {35, 2},
@@ -1245,7 +1245,7 @@ static arc arcs_54_2[1] = {
     {27, 3},
 };
 static arc arcs_54_3[1] = {
-    {118, 4},
+    {26, 4},
 };
 static arc arcs_54_4[1] = {
     {0, 4},
@@ -1258,15 +1258,27 @@ static state states_54[5] = {
     {1, arcs_54_4},
 };
 static arc arcs_55_0[1] = {
-    {121, 1},
+    {122, 1},
 };
 static arc arcs_55_1[2] = {
-    {122, 0},
-    {0, 1},
+    {35, 2},
+    {27, 3},
+};
+static arc arcs_55_2[1] = {
+    {27, 3},
+};
+static arc arcs_55_3[1] = {
+    {120, 4},
+};
+static arc arcs_55_4[1] = {
+    {0, 4},
 };
-static state states_55[2] = {
+static state states_55[5] = {
     {1, arcs_55_0},
     {2, arcs_55_1},
+    {1, arcs_55_2},
+    {1, arcs_55_3},
+    {1, arcs_55_4},
 };
 static arc arcs_56_0[1] = {
     {123, 1},
@@ -1279,84 +1291,84 @@ static state states_56[2] = {
     {1, arcs_56_0},
     {2, arcs_56_1},
 };
-static arc arcs_57_0[2] = {
+static arc arcs_57_0[1] = {
     {125, 1},
-    {126, 2},
 };
-static arc arcs_57_1[1] = {
-    {123, 2},
+static arc arcs_57_1[2] = {
+    {126, 0},
+    {0, 1},
+};
+static state states_57[2] = {
+    {1, arcs_57_0},
+    {2, arcs_57_1},
+};
+static arc arcs_58_0[2] = {
+    {127, 1},
+    {128, 2},
+};
+static arc arcs_58_1[1] = {
+    {125, 2},
 };
-static arc arcs_57_2[1] = {
+static arc arcs_58_2[1] = {
     {0, 2},
 };
-static state states_57[3] = {
-    {2, arcs_57_0},
-    {1, arcs_57_1},
-    {1, arcs_57_2},
+static state states_58[3] = {
+    {2, arcs_58_0},
+    {1, arcs_58_1},
+    {1, arcs_58_2},
 };
-static arc arcs_58_0[1] = {
-    {112, 1},
+static arc arcs_59_0[1] = {
+    {114, 1},
 };
-static arc arcs_58_1[2] = {
-    {127, 0},
+static arc arcs_59_1[2] = {
+    {129, 0},
     {0, 1},
 };
-static state states_58[2] = {
-    {1, arcs_58_0},
-    {2, arcs_58_1},
+static state states_59[2] = {
+    {1, arcs_59_0},
+    {2, arcs_59_1},
 };
-static arc arcs_59_0[10] = {
-    {128, 1},
-    {129, 1},
+static arc arcs_60_0[10] = {
     {130, 1},
     {131, 1},
     {132, 1},
     {133, 1},
     {134, 1},
-    {106, 1},
-    {125, 2},
-    {135, 3},
+    {135, 1},
+    {136, 1},
+    {108, 1},
+    {127, 2},
+    {137, 3},
 };
-static arc arcs_59_1[1] = {
+static arc arcs_60_1[1] = {
     {0, 1},
 };
-static arc arcs_59_2[1] = {
-    {106, 1},
+static arc arcs_60_2[1] = {
+    {108, 1},
 };
-static arc arcs_59_3[2] = {
-    {125, 1},
+static arc arcs_60_3[2] = {
+    {127, 1},
     {0, 3},
 };
-static state states_59[4] = {
-    {10, arcs_59_0},
-    {1, arcs_59_1},
-    {1, arcs_59_2},
-    {2, arcs_59_3},
-};
-static arc arcs_60_0[1] = {
-    {33, 1},
-};
-static arc arcs_60_1[1] = {
-    {112, 2},
-};
-static arc arcs_60_2[1] = {
-    {0, 2},
-};
-static state states_60[3] = {
-    {1, arcs_60_0},
+static state states_60[4] = {
+    {10, arcs_60_0},
     {1, arcs_60_1},
     {1, arcs_60_2},
+    {2, arcs_60_3},
 };
 static arc arcs_61_0[1] = {
-    {136, 1},
+    {33, 1},
 };
-static arc arcs_61_1[2] = {
-    {137, 0},
-    {0, 1},
+static arc arcs_61_1[1] = {
+    {114, 2},
 };
-static state states_61[2] = {
+static arc arcs_61_2[1] = {
+    {0, 2},
+};
+static state states_61[3] = {
     {1, arcs_61_0},
-    {2, arcs_61_1},
+    {1, arcs_61_1},
+    {1, arcs_61_2},
 };
 static arc arcs_62_0[1] = {
     {138, 1},
@@ -1383,21 +1395,20 @@ static state states_63[2] = {
 static arc arcs_64_0[1] = {
     {142, 1},
 };
-static arc arcs_64_1[3] = {
+static arc arcs_64_1[2] = {
     {143, 0},
-    {144, 0},
     {0, 1},
 };
 static state states_64[2] = {
     {1, arcs_64_0},
-    {3, arcs_64_1},
+    {2, arcs_64_1},
 };
 static arc arcs_65_0[1] = {
-    {145, 1},
+    {144, 1},
 };
 static arc arcs_65_1[3] = {
+    {145, 0},
     {146, 0},
-    {147, 0},
     {0, 1},
 };
 static state states_65[2] = {
@@ -1405,533 +1416,545 @@ static state states_65[2] = {
     {3, arcs_65_1},
 };
 static arc arcs_66_0[1] = {
-    {148, 1},
+    {147, 1},
 };
-static arc arcs_66_1[6] = {
-    {33, 0},
-    {11, 0},
+static arc arcs_66_1[3] = {
+    {148, 0},
     {149, 0},
-    {150, 0},
-    {151, 0},
     {0, 1},
 };
 static state states_66[2] = {
     {1, arcs_66_0},
-    {6, arcs_66_1},
+    {3, arcs_66_1},
 };
-static arc arcs_67_0[4] = {
-    {146, 1},
-    {147, 1},
-    {152, 1},
-    {153, 2},
+static arc arcs_67_0[1] = {
+    {150, 1},
 };
-static arc arcs_67_1[1] = {
-    {148, 2},
+static arc arcs_67_1[6] = {
+    {33, 0},
+    {11, 0},
+    {151, 0},
+    {152, 0},
+    {153, 0},
+    {0, 1},
+};
+static state states_67[2] = {
+    {1, arcs_67_0},
+    {6, arcs_67_1},
 };
-static arc arcs_67_2[1] = {
+static arc arcs_68_0[4] = {
+    {148, 1},
+    {149, 1},
+    {154, 1},
+    {155, 2},
+};
+static arc arcs_68_1[1] = {
+    {150, 2},
+};
+static arc arcs_68_2[1] = {
     {0, 2},
 };
-static state states_67[3] = {
-    {4, arcs_67_0},
-    {1, arcs_67_1},
-    {1, arcs_67_2},
+static state states_68[3] = {
+    {4, arcs_68_0},
+    {1, arcs_68_1},
+    {1, arcs_68_2},
 };
-static arc arcs_68_0[1] = {
-    {154, 1},
+static arc arcs_69_0[1] = {
+    {156, 1},
 };
-static arc arcs_68_1[2] = {
+static arc arcs_69_1[2] = {
     {34, 2},
     {0, 1},
 };
-static arc arcs_68_2[1] = {
-    {148, 3},
+static arc arcs_69_2[1] = {
+    {150, 3},
 };
-static arc arcs_68_3[1] = {
+static arc arcs_69_3[1] = {
     {0, 3},
 };
-static state states_68[4] = {
-    {1, arcs_68_0},
-    {2, arcs_68_1},
-    {1, arcs_68_2},
-    {1, arcs_68_3},
+static state states_69[4] = {
+    {1, arcs_69_0},
+    {2, arcs_69_1},
+    {1, arcs_69_2},
+    {1, arcs_69_3},
 };
-static arc arcs_69_0[2] = {
-    {155, 1},
-    {156, 2},
+static arc arcs_70_0[2] = {
+    {157, 1},
+    {158, 2},
 };
-static arc arcs_69_1[1] = {
-    {156, 2},
+static arc arcs_70_1[1] = {
+    {158, 2},
 };
-static arc arcs_69_2[2] = {
-    {157, 2},
+static arc arcs_70_2[2] = {
+    {159, 2},
     {0, 2},
 };
-static state states_69[3] = {
-    {2, arcs_69_0},
-    {1, arcs_69_1},
-    {2, arcs_69_2},
+static state states_70[3] = {
+    {2, arcs_70_0},
+    {1, arcs_70_1},
+    {2, arcs_70_2},
 };
-static arc arcs_70_0[10] = {
+static arc arcs_71_0[10] = {
     {13, 1},
-    {159, 2},
-    {161, 3},
+    {161, 2},
+    {163, 3},
     {23, 4},
-    {164, 4},
-    {165, 5},
-    {87, 4},
     {166, 4},
-    {167, 4},
+    {167, 5},
+    {87, 4},
     {168, 4},
+    {169, 4},
+    {170, 4},
 };
-static arc arcs_70_1[3] = {
+static arc arcs_71_1[3] = {
     {50, 6},
-    {158, 6},
+    {160, 6},
     {15, 4},
 };
-static arc arcs_70_2[2] = {
-    {158, 7},
-    {160, 4},
+static arc arcs_71_2[2] = {
+    {160, 7},
+    {162, 4},
 };
-static arc arcs_70_3[2] = {
-    {162, 8},
-    {163, 4},
+static arc arcs_71_3[2] = {
+    {164, 8},
+    {165, 4},
 };
-static arc arcs_70_4[1] = {
+static arc arcs_71_4[1] = {
     {0, 4},
 };
-static arc arcs_70_5[2] = {
-    {165, 5},
+static arc arcs_71_5[2] = {
+    {167, 5},
     {0, 5},
 };
-static arc arcs_70_6[1] = {
+static arc arcs_71_6[1] = {
     {15, 4},
 };
-static arc arcs_70_7[1] = {
-    {160, 4},
+static arc arcs_71_7[1] = {
+    {162, 4},
 };
-static arc arcs_70_8[1] = {
-    {163, 4},
+static arc arcs_71_8[1] = {
+    {165, 4},
 };
-static state states_70[9] = {
-    {10, arcs_70_0},
-    {3, arcs_70_1},
-    {2, arcs_70_2},
-    {2, arcs_70_3},
-    {1, arcs_70_4},
-    {2, arcs_70_5},
-    {1, arcs_70_6},
-    {1, arcs_70_7},
-    {1, arcs_70_8},
-};
-static arc arcs_71_0[2] = {
+static state states_71[9] = {
+    {10, arcs_71_0},
+    {3, arcs_71_1},
+    {2, arcs_71_2},
+    {2, arcs_71_3},
+    {1, arcs_71_4},
+    {2, arcs_71_5},
+    {1, arcs_71_6},
+    {1, arcs_71_7},
+    {1, arcs_71_8},
+};
+static arc arcs_72_0[2] = {
     {26, 1},
     {53, 1},
 };
-static arc arcs_71_1[3] = {
-    {169, 2},
+static arc arcs_72_1[3] = {
+    {171, 2},
     {32, 3},
     {0, 1},
 };
-static arc arcs_71_2[1] = {
+static arc arcs_72_2[1] = {
     {0, 2},
 };
-static arc arcs_71_3[3] = {
+static arc arcs_72_3[3] = {
     {26, 4},
     {53, 4},
     {0, 3},
 };
-static arc arcs_71_4[2] = {
+static arc arcs_72_4[2] = {
     {32, 3},
     {0, 4},
 };
-static state states_71[5] = {
-    {2, arcs_71_0},
-    {3, arcs_71_1},
-    {1, arcs_71_2},
-    {3, arcs_71_3},
-    {2, arcs_71_4},
+static state states_72[5] = {
+    {2, arcs_72_0},
+    {3, arcs_72_1},
+    {1, arcs_72_2},
+    {3, arcs_72_3},
+    {2, arcs_72_4},
 };
-static arc arcs_72_0[3] = {
+static arc arcs_73_0[3] = {
     {13, 1},
-    {159, 2},
+    {161, 2},
     {86, 3},
 };
-static arc arcs_72_1[2] = {
+static arc arcs_73_1[2] = {
     {14, 4},
     {15, 5},
 };
-static arc arcs_72_2[1] = {
-    {170, 6},
+static arc arcs_73_2[1] = {
+    {172, 6},
 };
-static arc arcs_72_3[1] = {
+static arc arcs_73_3[1] = {
     {23, 5},
 };
-static arc arcs_72_4[1] = {
+static arc arcs_73_4[1] = {
     {15, 5},
 };
-static arc arcs_72_5[1] = {
+static arc arcs_73_5[1] = {
     {0, 5},
 };
-static arc arcs_72_6[1] = {
-    {160, 5},
+static arc arcs_73_6[1] = {
+    {162, 5},
 };
-static state states_72[7] = {
-    {3, arcs_72_0},
-    {2, arcs_72_1},
-    {1, arcs_72_2},
-    {1, arcs_72_3},
-    {1, arcs_72_4},
-    {1, arcs_72_5},
-    {1, arcs_72_6},
+static state states_73[7] = {
+    {3, arcs_73_0},
+    {2, arcs_73_1},
+    {1, arcs_73_2},
+    {1, arcs_73_3},
+    {1, arcs_73_4},
+    {1, arcs_73_5},
+    {1, arcs_73_6},
 };
-static arc arcs_73_0[1] = {
-    {171, 1},
+static arc arcs_74_0[1] = {
+    {173, 1},
 };
-static arc arcs_73_1[2] = {
+static arc arcs_74_1[2] = {
     {32, 2},
     {0, 1},
 };
-static arc arcs_73_2[2] = {
-    {171, 1},
+static arc arcs_74_2[2] = {
+    {173, 1},
     {0, 2},
 };
-static state states_73[3] = {
-    {1, arcs_73_0},
-    {2, arcs_73_1},
-    {2, arcs_73_2},
+static state states_74[3] = {
+    {1, arcs_74_0},
+    {2, arcs_74_1},
+    {2, arcs_74_2},
 };
-static arc arcs_74_0[2] = {
+static arc arcs_75_0[2] = {
     {26, 1},
     {27, 2},
 };
-static arc arcs_74_1[2] = {
+static arc arcs_75_1[2] = {
     {27, 2},
     {0, 1},
 };
-static arc arcs_74_2[3] = {
+static arc arcs_75_2[3] = {
     {26, 3},
-    {172, 4},
+    {174, 4},
     {0, 2},
 };
-static arc arcs_74_3[2] = {
-    {172, 4},
+static arc arcs_75_3[2] = {
+    {174, 4},
     {0, 3},
 };
-static arc arcs_74_4[1] = {
+static arc arcs_75_4[1] = {
     {0, 4},
 };
-static state states_74[5] = {
-    {2, arcs_74_0},
-    {2, arcs_74_1},
-    {3, arcs_74_2},
-    {2, arcs_74_3},
-    {1, arcs_74_4},
+static state states_75[5] = {
+    {2, arcs_75_0},
+    {2, arcs_75_1},
+    {3, arcs_75_2},
+    {2, arcs_75_3},
+    {1, arcs_75_4},
 };
-static arc arcs_75_0[1] = {
+static arc arcs_76_0[1] = {
     {27, 1},
 };
-static arc arcs_75_1[2] = {
+static arc arcs_76_1[2] = {
     {26, 2},
     {0, 1},
 };
-static arc arcs_75_2[1] = {
+static arc arcs_76_2[1] = {
     {0, 2},
 };
-static state states_75[3] = {
-    {1, arcs_75_0},
-    {2, arcs_75_1},
-    {1, arcs_75_2},
+static state states_76[3] = {
+    {1, arcs_76_0},
+    {2, arcs_76_1},
+    {1, arcs_76_2},
 };
-static arc arcs_76_0[2] = {
-    {112, 1},
+static arc arcs_77_0[2] = {
+    {114, 1},
     {53, 1},
 };
-static arc arcs_76_1[2] = {
+static arc arcs_77_1[2] = {
     {32, 2},
     {0, 1},
 };
-static arc arcs_76_2[3] = {
-    {112, 1},
+static arc arcs_77_2[3] = {
+    {114, 1},
     {53, 1},
     {0, 2},
 };
-static state states_76[3] = {
-    {2, arcs_76_0},
-    {2, arcs_76_1},
-    {3, arcs_76_2},
+static state states_77[3] = {
+    {2, arcs_77_0},
+    {2, arcs_77_1},
+    {3, arcs_77_2},
 };
-static arc arcs_77_0[1] = {
+static arc arcs_78_0[1] = {
     {26, 1},
 };
-static arc arcs_77_1[2] = {
+static arc arcs_78_1[2] = {
     {32, 2},
     {0, 1},
 };
-static arc arcs_77_2[2] = {
+static arc arcs_78_2[2] = {
     {26, 1},
     {0, 2},
 };
-static state states_77[3] = {
-    {1, arcs_77_0},
-    {2, arcs_77_1},
-    {2, arcs_77_2},
+static state states_78[3] = {
+    {1, arcs_78_0},
+    {2, arcs_78_1},
+    {2, arcs_78_2},
 };
-static arc arcs_78_0[3] = {
+static arc arcs_79_0[3] = {
     {26, 1},
     {34, 2},
     {53, 3},
 };
-static arc arcs_78_1[4] = {
+static arc arcs_79_1[4] = {
     {27, 4},
-    {169, 5},
+    {171, 5},
     {32, 6},
     {0, 1},
 };
-static arc arcs_78_2[1] = {
-    {112, 7},
+static arc arcs_79_2[1] = {
+    {114, 7},
 };
-static arc arcs_78_3[3] = {
-    {169, 5},
+static arc arcs_79_3[3] = {
+    {171, 5},
     {32, 6},
     {0, 3},
 };
-static arc arcs_78_4[1] = {
+static arc arcs_79_4[1] = {
     {26, 7},
 };
-static arc arcs_78_5[1] = {
+static arc arcs_79_5[1] = {
     {0, 5},
 };
-static arc arcs_78_6[3] = {
+static arc arcs_79_6[3] = {
     {26, 8},
     {53, 8},
     {0, 6},
 };
-static arc arcs_78_7[3] = {
-    {169, 5},
+static arc arcs_79_7[3] = {
+    {171, 5},
     {32, 9},
     {0, 7},
 };
-static arc arcs_78_8[2] = {
+static arc arcs_79_8[2] = {
     {32, 6},
     {0, 8},
 };
-static arc arcs_78_9[3] = {
+static arc arcs_79_9[3] = {
     {26, 10},
     {34, 11},
     {0, 9},
 };
-static arc arcs_78_10[1] = {
+static arc arcs_79_10[1] = {
     {27, 12},
 };
-static arc arcs_78_11[1] = {
-    {112, 13},
+static arc arcs_79_11[1] = {
+    {114, 13},
 };
-static arc arcs_78_12[1] = {
+static arc arcs_79_12[1] = {
     {26, 13},
 };
-static arc arcs_78_13[2] = {
+static arc arcs_79_13[2] = {
     {32, 9},
     {0, 13},
 };
-static state states_78[14] = {
-    {3, arcs_78_0},
-    {4, arcs_78_1},
-    {1, arcs_78_2},
-    {3, arcs_78_3},
-    {1, arcs_78_4},
-    {1, arcs_78_5},
-    {3, arcs_78_6},
-    {3, arcs_78_7},
-    {2, arcs_78_8},
-    {3, arcs_78_9},
-    {1, arcs_78_10},
-    {1, arcs_78_11},
-    {1, arcs_78_12},
-    {2, arcs_78_13},
-};
-static arc arcs_79_0[1] = {
-    {173, 1},
+static state states_79[14] = {
+    {3, arcs_79_0},
+    {4, arcs_79_1},
+    {1, arcs_79_2},
+    {3, arcs_79_3},
+    {1, arcs_79_4},
+    {1, arcs_79_5},
+    {3, arcs_79_6},
+    {3, arcs_79_7},
+    {2, arcs_79_8},
+    {3, arcs_79_9},
+    {1, arcs_79_10},
+    {1, arcs_79_11},
+    {1, arcs_79_12},
+    {2, arcs_79_13},
 };
-static arc arcs_79_1[1] = {
+static arc arcs_80_0[1] = {
+    {175, 1},
+};
+static arc arcs_80_1[1] = {
     {23, 2},
 };
-static arc arcs_79_2[2] = {
+static arc arcs_80_2[2] = {
     {13, 3},
     {27, 4},
 };
-static arc arcs_79_3[2] = {
+static arc arcs_80_3[2] = {
     {14, 5},
     {15, 6},
 };
-static arc arcs_79_4[1] = {
+static arc arcs_80_4[1] = {
     {28, 7},
 };
-static arc arcs_79_5[1] = {
+static arc arcs_80_5[1] = {
     {15, 6},
 };
-static arc arcs_79_6[1] = {
+static arc arcs_80_6[1] = {
     {27, 4},
 };
-static arc arcs_79_7[1] = {
+static arc arcs_80_7[1] = {
     {0, 7},
 };
-static state states_79[8] = {
-    {1, arcs_79_0},
-    {1, arcs_79_1},
-    {2, arcs_79_2},
-    {2, arcs_79_3},
-    {1, arcs_79_4},
-    {1, arcs_79_5},
-    {1, arcs_79_6},
-    {1, arcs_79_7},
+static state states_80[8] = {
+    {1, arcs_80_0},
+    {1, arcs_80_1},
+    {2, arcs_80_2},
+    {2, arcs_80_3},
+    {1, arcs_80_4},
+    {1, arcs_80_5},
+    {1, arcs_80_6},
+    {1, arcs_80_7},
 };
-static arc arcs_80_0[1] = {
-    {174, 1},
+static arc arcs_81_0[1] = {
+    {176, 1},
 };
-static arc arcs_80_1[2] = {
+static arc arcs_81_1[2] = {
     {32, 2},
     {0, 1},
 };
-static arc arcs_80_2[2] = {
-    {174, 1},
+static arc arcs_81_2[2] = {
+    {176, 1},
     {0, 2},
 };
-static state states_80[3] = {
-    {1, arcs_80_0},
-    {2, arcs_80_1},
-    {2, arcs_80_2},
+static state states_81[3] = {
+    {1, arcs_81_0},
+    {2, arcs_81_1},
+    {2, arcs_81_2},
 };
-static arc arcs_81_0[3] = {
+static arc arcs_82_0[3] = {
     {26, 1},
     {34, 2},
     {33, 2},
 };
-static arc arcs_81_1[3] = {
-    {169, 3},
+static arc arcs_82_1[3] = {
+    {171, 3},
     {31, 2},
     {0, 1},
 };
-static arc arcs_81_2[1] = {
+static arc arcs_82_2[1] = {
     {26, 3},
 };
-static arc arcs_81_3[1] = {
+static arc arcs_82_3[1] = {
     {0, 3},
 };
-static state states_81[4] = {
-    {3, arcs_81_0},
-    {3, arcs_81_1},
-    {1, arcs_81_2},
-    {1, arcs_81_3},
+static state states_82[4] = {
+    {3, arcs_82_0},
+    {3, arcs_82_1},
+    {1, arcs_82_2},
+    {1, arcs_82_3},
 };
-static arc arcs_82_0[2] = {
-    {169, 1},
-    {176, 1},
+static arc arcs_83_0[2] = {
+    {171, 1},
+    {178, 1},
 };
-static arc arcs_82_1[1] = {
+static arc arcs_83_1[1] = {
     {0, 1},
 };
-static state states_82[2] = {
-    {2, arcs_82_0},
-    {1, arcs_82_1},
+static state states_83[2] = {
+    {2, arcs_83_0},
+    {1, arcs_83_1},
 };
-static arc arcs_83_0[2] = {
+static arc arcs_84_0[2] = {
     {21, 1},
-    {105, 2},
+    {107, 2},
 };
-static arc arcs_83_1[1] = {
-    {105, 2},
+static arc arcs_84_1[1] = {
+    {107, 2},
 };
-static arc arcs_83_2[1] = {
+static arc arcs_84_2[1] = {
     {68, 3},
 };
-static arc arcs_83_3[1] = {
-    {106, 4},
+static arc arcs_84_3[1] = {
+    {108, 4},
 };
-static arc arcs_83_4[1] = {
-    {116, 5},
+static arc arcs_84_4[1] = {
+    {118, 5},
 };
-static arc arcs_83_5[2] = {
-    {175, 6},
+static arc arcs_84_5[2] = {
+    {177, 6},
     {0, 5},
 };
-static arc arcs_83_6[1] = {
+static arc arcs_84_6[1] = {
     {0, 6},
 };
-static state states_83[7] = {
-    {2, arcs_83_0},
-    {1, arcs_83_1},
-    {1, arcs_83_2},
-    {1, arcs_83_3},
-    {1, arcs_83_4},
-    {2, arcs_83_5},
-    {1, arcs_83_6},
+static state states_84[7] = {
+    {2, arcs_84_0},
+    {1, arcs_84_1},
+    {1, arcs_84_2},
+    {1, arcs_84_3},
+    {1, arcs_84_4},
+    {2, arcs_84_5},
+    {1, arcs_84_6},
 };
-static arc arcs_84_0[1] = {
-    {101, 1},
+static arc arcs_85_0[1] = {
+    {102, 1},
 };
-static arc arcs_84_1[1] = {
-    {118, 2},
+static arc arcs_85_1[1] = {
+    {120, 2},
 };
-static arc arcs_84_2[2] = {
-    {175, 3},
+static arc arcs_85_2[2] = {
+    {177, 3},
     {0, 2},
 };
-static arc arcs_84_3[1] = {
+static arc arcs_85_3[1] = {
     {0, 3},
 };
-static state states_84[4] = {
-    {1, arcs_84_0},
-    {1, arcs_84_1},
-    {2, arcs_84_2},
-    {1, arcs_84_3},
+static state states_85[4] = {
+    {1, arcs_85_0},
+    {1, arcs_85_1},
+    {2, arcs_85_2},
+    {1, arcs_85_3},
 };
-static arc arcs_85_0[1] = {
+static arc arcs_86_0[1] = {
     {23, 1},
 };
-static arc arcs_85_1[1] = {
+static arc arcs_86_1[1] = {
     {0, 1},
 };
-static state states_85[2] = {
-    {1, arcs_85_0},
-    {1, arcs_85_1},
+static state states_86[2] = {
+    {1, arcs_86_0},
+    {1, arcs_86_1},
 };
-static arc arcs_86_0[1] = {
-    {178, 1},
+static arc arcs_87_0[1] = {
+    {180, 1},
 };
-static arc arcs_86_1[2] = {
-    {179, 2},
+static arc arcs_87_1[2] = {
+    {181, 2},
     {0, 1},
 };
-static arc arcs_86_2[1] = {
+static arc arcs_87_2[1] = {
     {0, 2},
 };
-static state states_86[3] = {
-    {1, arcs_86_0},
-    {2, arcs_86_1},
-    {1, arcs_86_2},
+static state states_87[3] = {
+    {1, arcs_87_0},
+    {2, arcs_87_1},
+    {1, arcs_87_2},
 };
-static arc arcs_87_0[2] = {
+static arc arcs_88_0[2] = {
     {81, 1},
     {9, 2},
 };
-static arc arcs_87_1[1] = {
+static arc arcs_88_1[1] = {
     {26, 2},
 };
-static arc arcs_87_2[1] = {
+static arc arcs_88_2[1] = {
     {0, 2},
 };
-static state states_87[3] = {
-    {2, arcs_87_0},
-    {1, arcs_87_1},
-    {1, arcs_87_2},
+static state states_88[3] = {
+    {2, arcs_88_0},
+    {1, arcs_88_1},
+    {1, arcs_88_2},
 };
-static dfa dfas[88] = {
+static dfa dfas[89] = {
     {256, "single_input", 0, 3, states_0,
-     "\004\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     "\004\050\340\000\002\000\000\000\210\340\223\160\100\056\001\204\000\000\060\044\312\207\020"},
     {257, "file_input", 0, 2, states_1,
-     "\204\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     "\204\050\340\000\002\000\000\000\210\340\223\160\100\056\001\204\000\000\060\044\312\207\020"},
     {258, "eval_input", 0, 3, states_2,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
     {259, "decorator", 0, 7, states_3,
      "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {260, "decorators", 0, 2, states_4,
@@ -1953,17 +1976,17 @@ static dfa dfas[88] = {
     {268, "vfpdef", 0, 2, states_12,
      "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {269, "stmt", 0, 2, states_13,
-     "\000\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     "\000\050\340\000\002\000\000\000\210\340\223\160\100\056\001\204\000\000\060\044\312\207\020"},
     {270, "simple_stmt", 0, 4, states_14,
-     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
+     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\204\000\000\060\044\312\007\020"},
     {271, "small_stmt", 0, 2, states_15,
-     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
+     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\204\000\000\060\044\312\007\020"},
     {272, "expr_stmt", 0, 6, states_16,
-     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
     {273, "annassign", 0, 5, states_17,
      "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {274, "testlist_star_expr", 0, 3, states_18,
-     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
     {275, "augassign", 0, 2, states_19,
      "\000\000\000\000\000\000\300\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {276, "del_stmt", 0, 3, states_20,
@@ -1975,7 +1998,7 @@ static dfa dfas[88] = {
     {279, "pass_stmt", 0, 2, states_23,
      "\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {280, "flow_stmt", 0, 2, states_24,
-     "\000\000\000\000\000\000\000\000\000\340\001\000\000\000\000\000\000\000\000\000\000\000\004"},
+     "\000\000\000\000\000\000\000\000\000\340\001\000\000\000\000\000\000\000\000\000\000\000\020"},
     {281, "break_stmt", 0, 2, states_25,
      "\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {282, "continue_stmt", 0, 2, states_26,
@@ -1983,7 +2006,7 @@ static dfa dfas[88] = {
     {283, "return_stmt", 0, 3, states_27,
      "\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {284, "yield_stmt", 0, 2, states_28,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004"},
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020"},
     {285, "raise_stmt", 0, 5, states_29,
      "\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000"},
     {286, "import_stmt", 0, 2, states_30,
@@ -2009,101 +2032,103 @@ static dfa dfas[88] = {
     {296, "assert_stmt", 0, 5, states_40,
      "\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000"},
     {297, "compound_stmt", 0, 2, states_41,
-     "\000\010\140\000\000\000\000\000\000\000\000\000\040\113\000\000\000\000\000\000\000\040\000"},
+     "\000\010\140\000\000\000\000\000\000\000\000\000\100\056\001\000\000\000\000\000\000\200\000"},
     {298, "async_stmt", 0, 3, states_42,
      "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
     {299, "if_stmt", 0, 8, states_43,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000"},
+     "\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000"},
     {300, "while_stmt", 0, 8, states_44,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000"},
-    {301, "for_stmt", 0, 10, states_45,
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
-    {302, "try_stmt", 0, 13, states_46,
+    {301, "until_stmt", 0, 5, states_45,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000"},
+    {302, "for_stmt", 0, 10, states_46,
      "\000\000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000"},
-    {303, "with_stmt", 0, 5, states_47,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000"},
-    {304, "with_item", 0, 4, states_48,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {305, "except_clause", 0, 5, states_49,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000"},
-    {306, "suite", 0, 5, states_50,
-     "\004\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
-    {307, "test", 0, 6, states_51,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {308, "test_nocond", 0, 2, states_52,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {309, "lambdef", 0, 5, states_53,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"},
-    {310, "lambdef_nocond", 0, 5, states_54,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"},
-    {311, "or_test", 0, 2, states_55,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
-    {312, "and_test", 0, 2, states_56,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
-    {313, "not_test", 0, 3, states_57,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
-    {314, "comparison", 0, 2, states_58,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {315, "comp_op", 0, 4, states_59,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\040\377\000\000\000\000\000\000"},
-    {316, "star_expr", 0, 3, states_60,
+    {303, "try_stmt", 0, 13, states_47,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000"},
+    {304, "with_stmt", 0, 5, states_48,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000"},
+    {305, "with_item", 0, 4, states_49,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {306, "except_clause", 0, 5, states_50,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000"},
+    {307, "suite", 0, 5, states_51,
+     "\004\040\200\000\002\000\000\000\210\340\223\160\000\000\000\204\000\000\060\044\312\007\020"},
+    {308, "test", 0, 6, states_52,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {309, "test_nocond", 0, 2, states_53,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {310, "lambdef", 0, 5, states_54,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000"},
+    {311, "lambdef_nocond", 0, 5, states_55,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000"},
+    {312, "or_test", 0, 2, states_56,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\200\000\000\060\044\312\007\000"},
+    {313, "and_test", 0, 2, states_57,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\200\000\000\060\044\312\007\000"},
+    {314, "not_test", 0, 3, states_58,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\200\000\000\060\044\312\007\000"},
+    {315, "comparison", 0, 2, states_59,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {316, "comp_op", 0, 4, states_60,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\200\374\003\000\000\000\000\000"},
+    {317, "star_expr", 0, 3, states_61,
      "\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
-    {317, "expr", 0, 2, states_61,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {318, "xor_expr", 0, 2, states_62,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {319, "and_expr", 0, 2, states_63,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {320, "shift_expr", 0, 2, states_64,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {321, "arith_expr", 0, 2, states_65,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {322, "term", 0, 2, states_66,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {323, "factor", 0, 3, states_67,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {324, "power", 0, 4, states_68,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\210\362\001\000"},
-    {325, "atom_expr", 0, 3, states_69,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\210\362\001\000"},
-    {326, "atom", 0, 9, states_70,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\200\362\001\000"},
-    {327, "testlist_comp", 0, 5, states_71,
-     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {328, "trailer", 0, 7, states_72,
-     "\000\040\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\200\000\000\000"},
-    {329, "subscriptlist", 0, 3, states_73,
-     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {330, "subscript", 0, 5, states_74,
-     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {331, "sliceop", 0, 3, states_75,
+    {318, "expr", 0, 2, states_62,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {319, "xor_expr", 0, 2, states_63,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {320, "and_expr", 0, 2, states_64,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {321, "shift_expr", 0, 2, states_65,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {322, "arith_expr", 0, 2, states_66,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {323, "term", 0, 2, states_67,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {324, "factor", 0, 3, states_68,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {325, "power", 0, 4, states_69,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\040\312\007\000"},
+    {326, "atom_expr", 0, 3, states_70,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\040\312\007\000"},
+    {327, "atom", 0, 9, states_71,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\312\007\000"},
+    {328, "testlist_comp", 0, 5, states_72,
+     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {329, "trailer", 0, 7, states_73,
+     "\000\040\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\002\000\000"},
+    {330, "subscriptlist", 0, 3, states_74,
+     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {331, "subscript", 0, 5, states_75,
+     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {332, "sliceop", 0, 3, states_76,
      "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
-    {332, "exprlist", 0, 3, states_76,
-     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
-    {333, "testlist", 0, 3, states_77,
-     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {334, "dictorsetmaker", 0, 14, states_78,
-     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {335, "classdef", 0, 8, states_79,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\040\000"},
-    {336, "arglist", 0, 3, states_80,
-     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {337, "argument", 0, 4, states_81,
-     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
-    {338, "comp_iter", 0, 2, states_82,
-     "\000\000\040\000\000\000\000\000\000\000\000\000\040\002\000\000\000\000\000\000\000\000\000"},
-    {339, "comp_for", 0, 7, states_83,
-     "\000\000\040\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
-    {340, "comp_if", 0, 4, states_84,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000"},
-    {341, "encoding_decl", 0, 2, states_85,
+    {333, "exprlist", 0, 3, states_77,
+     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\000\000\000\060\044\312\007\000"},
+    {334, "testlist", 0, 3, states_78,
+     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {335, "dictorsetmaker", 0, 14, states_79,
+     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {336, "classdef", 0, 8, states_80,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000"},
+    {337, "arglist", 0, 3, states_81,
+     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {338, "argument", 0, 4, states_82,
+     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\204\000\000\060\044\312\007\000"},
+    {339, "comp_iter", 0, 2, states_83,
+     "\000\000\040\000\000\000\000\000\000\000\000\000\100\010\000\000\000\000\000\000\000\000\000"},
+    {340, "comp_for", 0, 7, states_84,
+     "\000\000\040\000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000"},
+    {341, "comp_if", 0, 4, states_85,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000"},
+    {342, "encoding_decl", 0, 2, states_86,
      "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
-    {342, "yield_expr", 0, 3, states_86,
-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004"},
-    {343, "yield_arg", 0, 3, states_87,
-     "\000\040\200\000\000\000\000\000\000\000\202\000\000\000\000\041\000\000\014\211\362\001\000"},
+    {343, "yield_expr", 0, 3, states_87,
+     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020"},
+    {344, "yield_arg", 0, 3, states_88,
+     "\000\040\200\000\000\000\000\000\000\000\202\000\000\000\000\204\000\000\060\044\312\007\000"},
 };
-static label labels[180] = {
+static label labels[182] = {
     {0, "EMPTY"},
     {256, 0},
     {4, 0},
@@ -2113,16 +2138,16 @@ static label labels[180] = {
     {269, 0},
     {0, 0},
     {258, 0},
-    {333, 0},
+    {334, 0},
     {259, 0},
     {49, 0},
     {293, 0},
     {7, 0},
-    {336, 0},
+    {337, 0},
     {8, 0},
     {260, 0},
     {261, 0},
-    {335, 0},
+    {336, 0},
     {263, 0},
     {262, 0},
     {55, 0},
@@ -2130,9 +2155,9 @@ static label labels[180] = {
     {1, 0},
     {264, 0},
     {51, 0},
-    {307, 0},
+    {308, 0},
     {11, 0},
-    {306, 0},
+    {307, 0},
     {265, 0},
     {266, 0},
     {22, 0},
@@ -2154,10 +2179,10 @@ static label labels[180] = {
     {274, 0},
     {273, 0},
     {275, 0},
-    {342, 0},
+    {343, 0},
     {277, 0},
     {278, 0},
-    {316, 0},
+    {317, 0},
     {36, 0},
     {37, 0},
     {38, 0},
@@ -2172,7 +2197,7 @@ static label labels[180] = {
     {46, 0},
     {48, 0},
     {1, "del"},
-    {332, 0},
+    {333, 0},
     {58, 0},
     {59, 0},
     {1, "pass"},
@@ -2204,34 +2229,36 @@ static label labels[180] = {
     {301, 0},
     {302, 0},
     {303, 0},
+    {304, 0},
     {298, 0},
     {1, "if"},
     {1, "elif"},
     {1, "else"},
     {1, "while"},
+    {1, "until"},
     {1, "for"},
     {1, "in"},
     {1, "try"},
-    {305, 0},
+    {306, 0},
     {1, "finally"},
     {1, "with"},
-    {304, 0},
-    {317, 0},
+    {305, 0},
+    {318, 0},
     {1, "except"},
     {5, 0},
     {6, 0},
-    {311, 0},
-    {309, 0},
-    {308, 0},
+    {312, 0},
     {310, 0},
+    {309, 0},
+    {311, 0},
     {1, "lambda"},
-    {312, 0},
-    {1, "or"},
     {313, 0},
+    {1, "or"},
+    {314, 0},
     {1, "and"},
     {1, "not"},
-    {314, 0},
     {315, 0},
+    {316, 0},
     {20, 0},
     {21, 0},
     {27, 0},
@@ -2240,54 +2267,54 @@ static label labels[180] = {
     {28, 0},
     {28, 0},
     {1, "is"},
-    {318, 0},
-    {18, 0},
     {319, 0},
-    {32, 0},
+    {18, 0},
     {320, 0},
-    {19, 0},
+    {32, 0},
     {321, 0},
+    {19, 0},
+    {322, 0},
     {33, 0},
     {34, 0},
-    {322, 0},
+    {323, 0},
     {14, 0},
     {15, 0},
-    {323, 0},
+    {324, 0},
     {17, 0},
     {24, 0},
     {47, 0},
     {31, 0},
-    {324, 0},
     {325, 0},
-    {54, 0},
     {326, 0},
-    {328, 0},
+    {54, 0},
     {327, 0},
+    {329, 0},
+    {328, 0},
     {9, 0},
     {10, 0},
     {25, 0},
-    {334, 0},
+    {335, 0},
     {26, 0},
     {2, 0},
     {3, 0},
     {1, "None"},
     {1, "True"},
     {1, "False"},
-    {339, 0},
-    {329, 0},
+    {340, 0},
     {330, 0},
     {331, 0},
+    {332, 0},
     {1, "class"},
-    {337, 0},
     {338, 0},
-    {340, 0},
+    {339, 0},
     {341, 0},
+    {342, 0},
     {1, "yield"},
-    {343, 0},
+    {344, 0},
 };
 grammar _PyParser_Grammar = {
-    88,
+    89,
     dfas,
-    {180, labels},
+    {182, labels},
     256
 };
diff --git a/inc.patch b/inc.patch
new file mode 100644
index 0000000000..a64bdae2b6
--- /dev/null
+++ b/inc.patch
@@ -0,0 +1,3027 @@
+commit ac000c8772101cae3c93be95980397840122805d
+Author: u <u@bufn1.brest.local>
+Date:   Tue Apr 30 20:01:56 2024 +0300
+
+    incr decr patch
+
+diff --git a/Grammar/Grammar b/Grammar/Grammar
+index 59c807ef0c..7b3157f5e5 100644
+--- a/Grammar/Grammar
++++ b/Grammar/Grammar
+@@ -39,13 +39,19 @@ simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
+ small_stmt: (expr_stmt | del_stmt | pass_stmt | flow_stmt |
+              import_stmt | global_stmt | nonlocal_stmt | assert_stmt)
+ expr_stmt: testlist_star_expr (annassign | augassign (yield_expr|testlist) |
+-                     ('=' (yield_expr|testlist_star_expr))*)
++                     ('=' (yield_expr|testlist_star_expr))* | incr_stmt | decr_stmt)
+ annassign: ':' test ['=' test]
+ testlist_star_expr: (test|star_expr) (',' (test|star_expr))* [',']
+ augassign: ('+=' | '-=' | '*=' | '@=' | '/=' | '%=' | '&=' | '|=' | '^=' |
+             '<<=' | '>>=' | '**=' | '//=')
+ # For normal and annotated assignments, additional restrictions enforced by the interpreter
+ del_stmt: 'del' exprlist
++
++# New statements
++incr_stmt: '++'
++decr_stmt: '--'
++
++
+ pass_stmt: 'pass'
+ flow_stmt: break_stmt | continue_stmt | return_stmt | raise_stmt | yield_stmt
+ break_stmt: 'break'
+diff --git a/Include/Python-ast.h b/Include/Python-ast.h
+index 70494b70f6..a39cdda5c6 100644
+--- a/Include/Python-ast.h
++++ b/Include/Python-ast.h
+@@ -65,12 +65,12 @@ struct _mod {
+ 
+ enum _stmt_kind {FunctionDef_kind=1, AsyncFunctionDef_kind=2, ClassDef_kind=3,
+                   Return_kind=4, Delete_kind=5, Assign_kind=6,
+-                  AugAssign_kind=7, AnnAssign_kind=8, For_kind=9,
+-                  AsyncFor_kind=10, While_kind=11, If_kind=12, With_kind=13,
+-                  AsyncWith_kind=14, Raise_kind=15, Try_kind=16,
+-                  Assert_kind=17, Import_kind=18, ImportFrom_kind=19,
+-                  Global_kind=20, Nonlocal_kind=21, Expr_kind=22, Pass_kind=23,
+-                  Break_kind=24, Continue_kind=25};
++                  AugAssign_kind=7, Increment_kind=8, Decrement_kind=9, AnnAssign_kind=10, For_kind=11,
++                  AsyncFor_kind=12, While_kind=13, If_kind=14, With_kind=15,
++                  AsyncWith_kind=16, Raise_kind=17, Try_kind=18,
++                  Assert_kind=19, Import_kind=20, ImportFrom_kind=21,
++                  Global_kind=22, Nonlocal_kind=23, Expr_kind=24, Pass_kind=25,
++                  Break_kind=26, Continue_kind=27};
+ struct _stmt {
+     enum _stmt_kind kind;
+     union {
+@@ -116,6 +116,14 @@ struct _stmt {
+             operator_ty op;
+             expr_ty value;
+         } AugAssign;
++
++        struct {
++            expr_ty target;
++        } Increment;
++
++        struct {
++            expr_ty target;
++        } Decrement;
+         
+         struct {
+             expr_ty target;
+@@ -470,6 +478,13 @@ stmt_ty _Py_Assign(asdl_seq * targets, expr_ty value, int lineno, int
+ #define AugAssign(a0, a1, a2, a3, a4, a5) _Py_AugAssign(a0, a1, a2, a3, a4, a5)
+ stmt_ty _Py_AugAssign(expr_ty target, operator_ty op, expr_ty value, int
+                       lineno, int col_offset, PyArena *arena);
++#define Increment(a0, a1, a2, a3) _Py_Increment(a0, a1, a2, a3)
++stmt_ty _Py_Increment(expr_ty target, int lineno, int col_offset, PyArena
++                      *arena);
++#define Decrement(a0, a1, a2, a3) _Py_Decrement(a0, a1, a2, a3)
++stmt_ty _Py_Decrement(expr_ty target, int lineno, int col_offset, PyArena
++                      *arena);
++
+ #define AnnAssign(a0, a1, a2, a3, a4, a5, a6) _Py_AnnAssign(a0, a1, a2, a3, a4, a5, a6)
+ stmt_ty _Py_AnnAssign(expr_ty target, expr_ty annotation, expr_ty value, int
+                       simple, int lineno, int col_offset, PyArena *arena);
+diff --git a/Include/graminit.h b/Include/graminit.h
+index e9b4a93859..7d988f7cf1 100644
+--- a/Include/graminit.h
++++ b/Include/graminit.h
+@@ -21,68 +21,70 @@
+ #define testlist_star_expr 274
+ #define augassign 275
+ #define del_stmt 276
+-#define pass_stmt 277
+-#define flow_stmt 278
+-#define break_stmt 279
+-#define continue_stmt 280
+-#define return_stmt 281
+-#define yield_stmt 282
+-#define raise_stmt 283
+-#define import_stmt 284
+-#define import_name 285
+-#define import_from 286
+-#define import_as_name 287
+-#define dotted_as_name 288
+-#define import_as_names 289
+-#define dotted_as_names 290
+-#define dotted_name 291
+-#define global_stmt 292
+-#define nonlocal_stmt 293
+-#define assert_stmt 294
+-#define compound_stmt 295
+-#define async_stmt 296
+-#define if_stmt 297
+-#define while_stmt 298
+-#define for_stmt 299
+-#define try_stmt 300
+-#define with_stmt 301
+-#define with_item 302
+-#define except_clause 303
+-#define suite 304
+-#define test 305
+-#define test_nocond 306
+-#define lambdef 307
+-#define lambdef_nocond 308
+-#define or_test 309
+-#define and_test 310
+-#define not_test 311
+-#define comparison 312
+-#define comp_op 313
+-#define star_expr 314
+-#define expr 315
+-#define xor_expr 316
+-#define and_expr 317
+-#define shift_expr 318
+-#define arith_expr 319
+-#define term 320
+-#define factor 321
+-#define power 322
+-#define atom_expr 323
+-#define atom 324
+-#define testlist_comp 325
+-#define trailer 326
+-#define subscriptlist 327
+-#define subscript 328
+-#define sliceop 329
+-#define exprlist 330
+-#define testlist 331
+-#define dictorsetmaker 332
+-#define classdef 333
+-#define arglist 334
+-#define argument 335
+-#define comp_iter 336
+-#define comp_for 337
+-#define comp_if 338
+-#define encoding_decl 339
+-#define yield_expr 340
+-#define yield_arg 341
++#define incr_stmt 277
++#define decr_stmt 278
++#define pass_stmt 279
++#define flow_stmt 280
++#define break_stmt 281
++#define continue_stmt 282
++#define return_stmt 283
++#define yield_stmt 284
++#define raise_stmt 285
++#define import_stmt 286
++#define import_name 287
++#define import_from 288
++#define import_as_name 289
++#define dotted_as_name 290
++#define import_as_names 291
++#define dotted_as_names 292
++#define dotted_name 293
++#define global_stmt 294
++#define nonlocal_stmt 295
++#define assert_stmt 296
++#define compound_stmt 297
++#define async_stmt 298
++#define if_stmt 299
++#define while_stmt 300
++#define for_stmt 301
++#define try_stmt 302
++#define with_stmt 303
++#define with_item 304
++#define except_clause 305
++#define suite 306
++#define test 307
++#define test_nocond 308
++#define lambdef 309
++#define lambdef_nocond 310
++#define or_test 311
++#define and_test 312
++#define not_test 313
++#define comparison 314
++#define comp_op 315
++#define star_expr 316
++#define expr 317
++#define xor_expr 318
++#define and_expr 319
++#define shift_expr 320
++#define arith_expr 321
++#define term 322
++#define factor 323
++#define power 324
++#define atom_expr 325
++#define atom 326
++#define testlist_comp 327
++#define trailer 328
++#define subscriptlist 329
++#define subscript 330
++#define sliceop 331
++#define exprlist 332
++#define testlist 333
++#define dictorsetmaker 334
++#define classdef 335
++#define arglist 336
++#define argument 337
++#define comp_iter 338
++#define comp_for 339
++#define comp_if 340
++#define encoding_decl 341
++#define yield_expr 342
++#define yield_arg 343
+diff --git a/Include/token.h b/Include/token.h
+index 595afa0158..e57bbfb0f3 100644
+--- a/Include/token.h
++++ b/Include/token.h
+@@ -68,6 +68,9 @@ extern "C" {
+ #define ASYNC		55
+ #define ERRORTOKEN	56
+ #define N_TOKENS	57
++#define INCREMENT	58
++#define DECREMENT	59
++
+ 
+ /* Special definitions for cooperation with parser */
+ 
+diff --git a/Parser/tokenizer.c b/Parser/tokenizer.c
+index 5cc9533c3c..614479c946 100644
+--- a/Parser/tokenizer.c
++++ b/Parser/tokenizer.c
+@@ -106,7 +106,9 @@ const char *_PyParser_TokenNames[] = {
+     "AWAIT",
+     "ASYNC",
+     "<ERRORTOKEN>",
+-    "<N_TOKENS>"
++    "<N_TOKENS>",
++    "INCREMENT",
++    "DECREMENT"
+ };
+ 
+ 
+@@ -1175,11 +1177,13 @@ PyToken_TwoChars(int c1, int c2)
+         break;
+     case '+':
+         switch (c2) {
++        case '+':               return INCREMENT;
+         case '=':               return PLUSEQUAL;
+         }
+         break;
+     case '-':
+         switch (c2) {
++        case '-':               return DECREMENT;
+         case '=':               return MINEQUAL;
+         case '>':               return RARROW;
+         }
+diff --git a/Python/ast.c b/Python/ast.c
+index 5c5738f6ed..3495e257a6 100644
+--- a/Python/ast.c
++++ b/Python/ast.c
+@@ -3009,6 +3009,47 @@ ast_for_expr_stmt(struct compiling *c, const node *n)
+                              LINENO(n), n->n_col_offset, c->c_arena);
+         }
+     }
++    else if ((TYPE(CHILD(n, 1)) == incr_stmt) || (TYPE(CHILD(n, 1)) == decr_stmt)) {
++        expr_ty expr1, expr2;
++        node *ch = CHILD(n, 0);
++        operator_ty operator;
++
++        switch (TYPE(CHILD(n, 1))){
++            case incr_stmt:
++                operator = Add; 
++                break;
++            case decr_stmt:
++                operator = Sub; 
++                break;
++        }
++
++        expr1 = ast_for_testlist(c, ch);
++        if (!expr1) {
++            return NULL;
++        }
++        switch (expr1->kind) {
++            case Name_kind:
++                if (forbidden_name(c, expr1->v.Name.id, n, 0)) {
++                    return NULL;
++                }
++                expr1->v.Name.ctx = Store;
++                break;
++            default:
++                ast_error(c, ch,
++                          "illegal target for increment/decrement");
++                return NULL;
++        }
++        // Create a PyObject for the number 1
++        PyObject *pynum = parsenumber(c, "1");
++
++        if (PyArena_AddPyObject(c->c_arena, pynum) < 0) {
++            Py_DECREF(pynum);
++            return NULL;
++        }
++        // Create that as an expression on the same line and offset as the ++/--
++        expr2 = Num(pynum, LINENO(n), n->n_col_offset, c->c_arena);
++        return AugAssign(expr1, operator, expr2, LINENO(n), n->n_col_offset, c->c_arena);
++    }
+     else {
+         int i;
+         asdl_seq *targets;
+diff --git a/Python/graminit.c b/Python/graminit.c
+index f2584e0a2a..5f39a2e2cf 100644
+--- a/Python/graminit.c
++++ b/Python/graminit.c
+@@ -459,10 +459,12 @@ static state states_15[2] = {
+ static arc arcs_16_0[1] = {
+     {47, 1},
+ };
+-static arc arcs_16_1[4] = {
++static arc arcs_16_1[6] = {
+     {48, 2},
+     {49, 3},
+     {31, 4},
++    {51, 2},
++    {52, 2},
+     {0, 1},
+ };
+ static arc arcs_16_2[1] = {
+@@ -482,7 +484,7 @@ static arc arcs_16_5[2] = {
+ };
+ static state states_16[6] = {
+     {1, arcs_16_0},
+-    {4, arcs_16_1},
++    {6, arcs_16_1},
+     {1, arcs_16_2},
+     {2, arcs_16_3},
+     {2, arcs_16_4},
+@@ -513,7 +515,7 @@ static state states_17[5] = {
+ };
+ static arc arcs_18_0[2] = {
+     {26, 1},
+-    {51, 1},
++    {53, 1},
+ };
+ static arc arcs_18_1[2] = {
+     {32, 2},
+@@ -521,7 +523,7 @@ static arc arcs_18_1[2] = {
+ };
+ static arc arcs_18_2[3] = {
+     {26, 1},
+-    {51, 1},
++    {53, 1},
+     {0, 2},
+ };
+ static state states_18[3] = {
+@@ -530,8 +532,6 @@ static state states_18[3] = {
+     {3, arcs_18_2},
+ };
+ static arc arcs_19_0[13] = {
+-    {52, 1},
+-    {53, 1},
+     {54, 1},
+     {55, 1},
+     {56, 1},
+@@ -543,6 +543,8 @@ static arc arcs_19_0[13] = {
+     {62, 1},
+     {63, 1},
+     {64, 1},
++    {65, 1},
++    {66, 1},
+ };
+ static arc arcs_19_1[1] = {
+     {0, 1},
+@@ -552,10 +554,10 @@ static state states_19[2] = {
+     {1, arcs_19_1},
+ };
+ static arc arcs_20_0[1] = {
+-    {65, 1},
++    {67, 1},
+ };
+ static arc arcs_20_1[1] = {
+-    {66, 2},
++    {68, 2},
+ };
+ static arc arcs_20_2[1] = {
+     {0, 2},
+@@ -566,7 +568,7 @@ static state states_20[3] = {
+     {1, arcs_20_2},
+ };
+ static arc arcs_21_0[1] = {
+-    {67, 1},
++    {69, 1},
+ };
+ static arc arcs_21_1[1] = {
+     {0, 1},
+@@ -575,22 +577,18 @@ static state states_21[2] = {
+     {1, arcs_21_0},
+     {1, arcs_21_1},
+ };
+-static arc arcs_22_0[5] = {
+-    {68, 1},
+-    {69, 1},
++static arc arcs_22_0[1] = {
+     {70, 1},
+-    {71, 1},
+-    {72, 1},
+ };
+ static arc arcs_22_1[1] = {
+     {0, 1},
+ };
+ static state states_22[2] = {
+-    {5, arcs_22_0},
++    {1, arcs_22_0},
+     {1, arcs_22_1},
+ };
+ static arc arcs_23_0[1] = {
+-    {73, 1},
++    {71, 1},
+ };
+ static arc arcs_23_1[1] = {
+     {0, 1},
+@@ -599,33 +597,32 @@ static state states_23[2] = {
+     {1, arcs_23_0},
+     {1, arcs_23_1},
+ };
+-static arc arcs_24_0[1] = {
++static arc arcs_24_0[5] = {
++    {72, 1},
++    {73, 1},
+     {74, 1},
++    {75, 1},
++    {76, 1},
+ };
+ static arc arcs_24_1[1] = {
+     {0, 1},
+ };
+ static state states_24[2] = {
+-    {1, arcs_24_0},
++    {5, arcs_24_0},
+     {1, arcs_24_1},
+ };
+ static arc arcs_25_0[1] = {
+-    {75, 1},
++    {77, 1},
+ };
+-static arc arcs_25_1[2] = {
+-    {9, 2},
++static arc arcs_25_1[1] = {
+     {0, 1},
+ };
+-static arc arcs_25_2[1] = {
+-    {0, 2},
+-};
+-static state states_25[3] = {
++static state states_25[2] = {
+     {1, arcs_25_0},
+-    {2, arcs_25_1},
+-    {1, arcs_25_2},
++    {1, arcs_25_1},
+ };
+ static arc arcs_26_0[1] = {
+-    {50, 1},
++    {78, 1},
+ };
+ static arc arcs_26_1[1] = {
+     {0, 1},
+@@ -635,717 +632,720 @@ static state states_26[2] = {
+     {1, arcs_26_1},
+ };
+ static arc arcs_27_0[1] = {
+-    {76, 1},
++    {79, 1},
+ };
+ static arc arcs_27_1[2] = {
+-    {26, 2},
++    {9, 2},
+     {0, 1},
+ };
+-static arc arcs_27_2[2] = {
+-    {77, 3},
++static arc arcs_27_2[1] = {
+     {0, 2},
+ };
+-static arc arcs_27_3[1] = {
+-    {26, 4},
+-};
+-static arc arcs_27_4[1] = {
+-    {0, 4},
+-};
+-static state states_27[5] = {
++static state states_27[3] = {
+     {1, arcs_27_0},
+     {2, arcs_27_1},
+-    {2, arcs_27_2},
+-    {1, arcs_27_3},
+-    {1, arcs_27_4},
++    {1, arcs_27_2},
+ };
+-static arc arcs_28_0[2] = {
+-    {78, 1},
+-    {79, 1},
++static arc arcs_28_0[1] = {
++    {50, 1},
+ };
+ static arc arcs_28_1[1] = {
+     {0, 1},
+ };
+ static state states_28[2] = {
+-    {2, arcs_28_0},
++    {1, arcs_28_0},
+     {1, arcs_28_1},
+ };
+ static arc arcs_29_0[1] = {
+     {80, 1},
+ };
+-static arc arcs_29_1[1] = {
+-    {81, 2},
++static arc arcs_29_1[2] = {
++    {26, 2},
++    {0, 1},
+ };
+-static arc arcs_29_2[1] = {
++static arc arcs_29_2[2] = {
++    {81, 3},
+     {0, 2},
+ };
+-static state states_29[3] = {
++static arc arcs_29_3[1] = {
++    {26, 4},
++};
++static arc arcs_29_4[1] = {
++    {0, 4},
++};
++static state states_29[5] = {
+     {1, arcs_29_0},
+-    {1, arcs_29_1},
+-    {1, arcs_29_2},
++    {2, arcs_29_1},
++    {2, arcs_29_2},
++    {1, arcs_29_3},
++    {1, arcs_29_4},
+ };
+-static arc arcs_30_0[1] = {
+-    {77, 1},
++static arc arcs_30_0[2] = {
++    {82, 1},
++    {83, 1},
+ };
+-static arc arcs_30_1[3] = {
+-    {82, 2},
+-    {83, 2},
++static arc arcs_30_1[1] = {
++    {0, 1},
++};
++static state states_30[2] = {
++    {2, arcs_30_0},
++    {1, arcs_30_1},
++};
++static arc arcs_31_0[1] = {
++    {84, 1},
++};
++static arc arcs_31_1[1] = {
++    {85, 2},
++};
++static arc arcs_31_2[1] = {
++    {0, 2},
++};
++static state states_31[3] = {
++    {1, arcs_31_0},
++    {1, arcs_31_1},
++    {1, arcs_31_2},
++};
++static arc arcs_32_0[1] = {
++    {81, 1},
++};
++static arc arcs_32_1[3] = {
++    {86, 2},
++    {87, 2},
+     {12, 3},
+ };
+-static arc arcs_30_2[4] = {
+-    {82, 2},
+-    {83, 2},
++static arc arcs_32_2[4] = {
++    {86, 2},
++    {87, 2},
+     {12, 3},
+-    {80, 4},
++    {84, 4},
+ };
+-static arc arcs_30_3[1] = {
+-    {80, 4},
++static arc arcs_32_3[1] = {
++    {84, 4},
+ };
+-static arc arcs_30_4[3] = {
++static arc arcs_32_4[3] = {
+     {33, 5},
+     {13, 6},
+-    {84, 5},
++    {88, 5},
+ };
+-static arc arcs_30_5[1] = {
++static arc arcs_32_5[1] = {
+     {0, 5},
+ };
+-static arc arcs_30_6[1] = {
+-    {84, 7},
++static arc arcs_32_6[1] = {
++    {88, 7},
+ };
+-static arc arcs_30_7[1] = {
++static arc arcs_32_7[1] = {
+     {15, 5},
+ };
+-static state states_30[8] = {
+-    {1, arcs_30_0},
+-    {3, arcs_30_1},
+-    {4, arcs_30_2},
+-    {1, arcs_30_3},
+-    {3, arcs_30_4},
+-    {1, arcs_30_5},
+-    {1, arcs_30_6},
+-    {1, arcs_30_7},
++static state states_32[8] = {
++    {1, arcs_32_0},
++    {3, arcs_32_1},
++    {4, arcs_32_2},
++    {1, arcs_32_3},
++    {3, arcs_32_4},
++    {1, arcs_32_5},
++    {1, arcs_32_6},
++    {1, arcs_32_7},
+ };
+-static arc arcs_31_0[1] = {
++static arc arcs_33_0[1] = {
+     {23, 1},
+ };
+-static arc arcs_31_1[2] = {
+-    {86, 2},
++static arc arcs_33_1[2] = {
++    {90, 2},
+     {0, 1},
+ };
+-static arc arcs_31_2[1] = {
++static arc arcs_33_2[1] = {
+     {23, 3},
+ };
+-static arc arcs_31_3[1] = {
++static arc arcs_33_3[1] = {
+     {0, 3},
+ };
+-static state states_31[4] = {
+-    {1, arcs_31_0},
+-    {2, arcs_31_1},
+-    {1, arcs_31_2},
+-    {1, arcs_31_3},
++static state states_33[4] = {
++    {1, arcs_33_0},
++    {2, arcs_33_1},
++    {1, arcs_33_2},
++    {1, arcs_33_3},
+ };
+-static arc arcs_32_0[1] = {
++static arc arcs_34_0[1] = {
+     {12, 1},
+ };
+-static arc arcs_32_1[2] = {
+-    {86, 2},
++static arc arcs_34_1[2] = {
++    {90, 2},
+     {0, 1},
+ };
+-static arc arcs_32_2[1] = {
++static arc arcs_34_2[1] = {
+     {23, 3},
+ };
+-static arc arcs_32_3[1] = {
++static arc arcs_34_3[1] = {
+     {0, 3},
+ };
+-static state states_32[4] = {
+-    {1, arcs_32_0},
+-    {2, arcs_32_1},
+-    {1, arcs_32_2},
+-    {1, arcs_32_3},
++static state states_34[4] = {
++    {1, arcs_34_0},
++    {2, arcs_34_1},
++    {1, arcs_34_2},
++    {1, arcs_34_3},
+ };
+-static arc arcs_33_0[1] = {
+-    {85, 1},
++static arc arcs_35_0[1] = {
++    {89, 1},
+ };
+-static arc arcs_33_1[2] = {
++static arc arcs_35_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_33_2[2] = {
+-    {85, 1},
++static arc arcs_35_2[2] = {
++    {89, 1},
+     {0, 2},
+ };
+-static state states_33[3] = {
+-    {1, arcs_33_0},
+-    {2, arcs_33_1},
+-    {2, arcs_33_2},
++static state states_35[3] = {
++    {1, arcs_35_0},
++    {2, arcs_35_1},
++    {2, arcs_35_2},
+ };
+-static arc arcs_34_0[1] = {
+-    {87, 1},
++static arc arcs_36_0[1] = {
++    {91, 1},
+ };
+-static arc arcs_34_1[2] = {
++static arc arcs_36_1[2] = {
+     {32, 0},
+     {0, 1},
+ };
+-static state states_34[2] = {
+-    {1, arcs_34_0},
+-    {2, arcs_34_1},
++static state states_36[2] = {
++    {1, arcs_36_0},
++    {2, arcs_36_1},
+ };
+-static arc arcs_35_0[1] = {
++static arc arcs_37_0[1] = {
+     {23, 1},
+ };
+-static arc arcs_35_1[2] = {
+-    {82, 0},
++static arc arcs_37_1[2] = {
++    {86, 0},
+     {0, 1},
+ };
+-static state states_35[2] = {
+-    {1, arcs_35_0},
+-    {2, arcs_35_1},
++static state states_37[2] = {
++    {1, arcs_37_0},
++    {2, arcs_37_1},
+ };
+-static arc arcs_36_0[1] = {
+-    {88, 1},
++static arc arcs_38_0[1] = {
++    {92, 1},
+ };
+-static arc arcs_36_1[1] = {
++static arc arcs_38_1[1] = {
+     {23, 2},
+ };
+-static arc arcs_36_2[2] = {
++static arc arcs_38_2[2] = {
+     {32, 1},
+     {0, 2},
+ };
+-static state states_36[3] = {
+-    {1, arcs_36_0},
+-    {1, arcs_36_1},
+-    {2, arcs_36_2},
++static state states_38[3] = {
++    {1, arcs_38_0},
++    {1, arcs_38_1},
++    {2, arcs_38_2},
+ };
+-static arc arcs_37_0[1] = {
+-    {89, 1},
++static arc arcs_39_0[1] = {
++    {93, 1},
+ };
+-static arc arcs_37_1[1] = {
++static arc arcs_39_1[1] = {
+     {23, 2},
+ };
+-static arc arcs_37_2[2] = {
++static arc arcs_39_2[2] = {
+     {32, 1},
+     {0, 2},
+ };
+-static state states_37[3] = {
+-    {1, arcs_37_0},
+-    {1, arcs_37_1},
+-    {2, arcs_37_2},
++static state states_39[3] = {
++    {1, arcs_39_0},
++    {1, arcs_39_1},
++    {2, arcs_39_2},
+ };
+-static arc arcs_38_0[1] = {
+-    {90, 1},
++static arc arcs_40_0[1] = {
++    {94, 1},
+ };
+-static arc arcs_38_1[1] = {
++static arc arcs_40_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_38_2[2] = {
++static arc arcs_40_2[2] = {
+     {32, 3},
+     {0, 2},
+ };
+-static arc arcs_38_3[1] = {
++static arc arcs_40_3[1] = {
+     {26, 4},
+ };
+-static arc arcs_38_4[1] = {
++static arc arcs_40_4[1] = {
+     {0, 4},
+ };
+-static state states_38[5] = {
+-    {1, arcs_38_0},
+-    {1, arcs_38_1},
+-    {2, arcs_38_2},
+-    {1, arcs_38_3},
+-    {1, arcs_38_4},
++static state states_40[5] = {
++    {1, arcs_40_0},
++    {1, arcs_40_1},
++    {2, arcs_40_2},
++    {1, arcs_40_3},
++    {1, arcs_40_4},
+ };
+-static arc arcs_39_0[9] = {
+-    {91, 1},
+-    {92, 1},
+-    {93, 1},
+-    {94, 1},
++static arc arcs_41_0[9] = {
+     {95, 1},
++    {96, 1},
++    {97, 1},
++    {98, 1},
++    {99, 1},
+     {19, 1},
+     {18, 1},
+     {17, 1},
+-    {96, 1},
++    {100, 1},
+ };
+-static arc arcs_39_1[1] = {
++static arc arcs_41_1[1] = {
+     {0, 1},
+ };
+-static state states_39[2] = {
+-    {9, arcs_39_0},
+-    {1, arcs_39_1},
++static state states_41[2] = {
++    {9, arcs_41_0},
++    {1, arcs_41_1},
+ };
+-static arc arcs_40_0[1] = {
++static arc arcs_42_0[1] = {
+     {21, 1},
+ };
+-static arc arcs_40_1[3] = {
++static arc arcs_42_1[3] = {
+     {19, 2},
+-    {95, 2},
+-    {93, 2},
++    {99, 2},
++    {97, 2},
+ };
+-static arc arcs_40_2[1] = {
++static arc arcs_42_2[1] = {
+     {0, 2},
+ };
+-static state states_40[3] = {
+-    {1, arcs_40_0},
+-    {3, arcs_40_1},
+-    {1, arcs_40_2},
++static state states_42[3] = {
++    {1, arcs_42_0},
++    {3, arcs_42_1},
++    {1, arcs_42_2},
+ };
+-static arc arcs_41_0[1] = {
+-    {97, 1},
++static arc arcs_43_0[1] = {
++    {101, 1},
+ };
+-static arc arcs_41_1[1] = {
++static arc arcs_43_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_41_2[1] = {
++static arc arcs_43_2[1] = {
+     {27, 3},
+ };
+-static arc arcs_41_3[1] = {
++static arc arcs_43_3[1] = {
+     {28, 4},
+ };
+-static arc arcs_41_4[3] = {
+-    {98, 1},
+-    {99, 5},
++static arc arcs_43_4[3] = {
++    {102, 1},
++    {103, 5},
+     {0, 4},
+ };
+-static arc arcs_41_5[1] = {
++static arc arcs_43_5[1] = {
+     {27, 6},
+ };
+-static arc arcs_41_6[1] = {
++static arc arcs_43_6[1] = {
+     {28, 7},
+ };
+-static arc arcs_41_7[1] = {
++static arc arcs_43_7[1] = {
+     {0, 7},
+ };
+-static state states_41[8] = {
+-    {1, arcs_41_0},
+-    {1, arcs_41_1},
+-    {1, arcs_41_2},
+-    {1, arcs_41_3},
+-    {3, arcs_41_4},
+-    {1, arcs_41_5},
+-    {1, arcs_41_6},
+-    {1, arcs_41_7},
++static state states_43[8] = {
++    {1, arcs_43_0},
++    {1, arcs_43_1},
++    {1, arcs_43_2},
++    {1, arcs_43_3},
++    {3, arcs_43_4},
++    {1, arcs_43_5},
++    {1, arcs_43_6},
++    {1, arcs_43_7},
+ };
+-static arc arcs_42_0[1] = {
+-    {100, 1},
++static arc arcs_44_0[1] = {
++    {104, 1},
+ };
+-static arc arcs_42_1[1] = {
++static arc arcs_44_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_42_2[1] = {
++static arc arcs_44_2[1] = {
+     {27, 3},
+ };
+-static arc arcs_42_3[1] = {
++static arc arcs_44_3[1] = {
+     {28, 4},
+ };
+-static arc arcs_42_4[2] = {
+-    {99, 5},
++static arc arcs_44_4[2] = {
++    {103, 5},
+     {0, 4},
+ };
+-static arc arcs_42_5[1] = {
++static arc arcs_44_5[1] = {
+     {27, 6},
+ };
+-static arc arcs_42_6[1] = {
++static arc arcs_44_6[1] = {
+     {28, 7},
+ };
+-static arc arcs_42_7[1] = {
++static arc arcs_44_7[1] = {
+     {0, 7},
+ };
+-static state states_42[8] = {
+-    {1, arcs_42_0},
+-    {1, arcs_42_1},
+-    {1, arcs_42_2},
+-    {1, arcs_42_3},
+-    {2, arcs_42_4},
+-    {1, arcs_42_5},
+-    {1, arcs_42_6},
+-    {1, arcs_42_7},
++static state states_44[8] = {
++    {1, arcs_44_0},
++    {1, arcs_44_1},
++    {1, arcs_44_2},
++    {1, arcs_44_3},
++    {2, arcs_44_4},
++    {1, arcs_44_5},
++    {1, arcs_44_6},
++    {1, arcs_44_7},
+ };
+-static arc arcs_43_0[1] = {
+-    {101, 1},
++static arc arcs_45_0[1] = {
++    {105, 1},
+ };
+-static arc arcs_43_1[1] = {
+-    {66, 2},
++static arc arcs_45_1[1] = {
++    {68, 2},
+ };
+-static arc arcs_43_2[1] = {
+-    {102, 3},
++static arc arcs_45_2[1] = {
++    {106, 3},
+ };
+-static arc arcs_43_3[1] = {
++static arc arcs_45_3[1] = {
+     {9, 4},
+ };
+-static arc arcs_43_4[1] = {
++static arc arcs_45_4[1] = {
+     {27, 5},
+ };
+-static arc arcs_43_5[1] = {
++static arc arcs_45_5[1] = {
+     {28, 6},
+ };
+-static arc arcs_43_6[2] = {
+-    {99, 7},
++static arc arcs_45_6[2] = {
++    {103, 7},
+     {0, 6},
+ };
+-static arc arcs_43_7[1] = {
++static arc arcs_45_7[1] = {
+     {27, 8},
+ };
+-static arc arcs_43_8[1] = {
++static arc arcs_45_8[1] = {
+     {28, 9},
+ };
+-static arc arcs_43_9[1] = {
++static arc arcs_45_9[1] = {
+     {0, 9},
+ };
+-static state states_43[10] = {
+-    {1, arcs_43_0},
+-    {1, arcs_43_1},
+-    {1, arcs_43_2},
+-    {1, arcs_43_3},
+-    {1, arcs_43_4},
+-    {1, arcs_43_5},
+-    {2, arcs_43_6},
+-    {1, arcs_43_7},
+-    {1, arcs_43_8},
+-    {1, arcs_43_9},
++static state states_45[10] = {
++    {1, arcs_45_0},
++    {1, arcs_45_1},
++    {1, arcs_45_2},
++    {1, arcs_45_3},
++    {1, arcs_45_4},
++    {1, arcs_45_5},
++    {2, arcs_45_6},
++    {1, arcs_45_7},
++    {1, arcs_45_8},
++    {1, arcs_45_9},
+ };
+-static arc arcs_44_0[1] = {
+-    {103, 1},
++static arc arcs_46_0[1] = {
++    {107, 1},
+ };
+-static arc arcs_44_1[1] = {
++static arc arcs_46_1[1] = {
+     {27, 2},
+ };
+-static arc arcs_44_2[1] = {
++static arc arcs_46_2[1] = {
+     {28, 3},
+ };
+-static arc arcs_44_3[2] = {
+-    {104, 4},
+-    {105, 5},
++static arc arcs_46_3[2] = {
++    {108, 4},
++    {109, 5},
+ };
+-static arc arcs_44_4[1] = {
++static arc arcs_46_4[1] = {
+     {27, 6},
+ };
+-static arc arcs_44_5[1] = {
++static arc arcs_46_5[1] = {
+     {27, 7},
+ };
+-static arc arcs_44_6[1] = {
++static arc arcs_46_6[1] = {
+     {28, 8},
+ };
+-static arc arcs_44_7[1] = {
++static arc arcs_46_7[1] = {
+     {28, 9},
+ };
+-static arc arcs_44_8[4] = {
+-    {104, 4},
+-    {99, 10},
+-    {105, 5},
++static arc arcs_46_8[4] = {
++    {108, 4},
++    {103, 10},
++    {109, 5},
+     {0, 8},
+ };
+-static arc arcs_44_9[1] = {
++static arc arcs_46_9[1] = {
+     {0, 9},
+ };
+-static arc arcs_44_10[1] = {
++static arc arcs_46_10[1] = {
+     {27, 11},
+ };
+-static arc arcs_44_11[1] = {
++static arc arcs_46_11[1] = {
+     {28, 12},
+ };
+-static arc arcs_44_12[2] = {
+-    {105, 5},
++static arc arcs_46_12[2] = {
++    {109, 5},
+     {0, 12},
+ };
+-static state states_44[13] = {
+-    {1, arcs_44_0},
+-    {1, arcs_44_1},
+-    {1, arcs_44_2},
+-    {2, arcs_44_3},
+-    {1, arcs_44_4},
+-    {1, arcs_44_5},
+-    {1, arcs_44_6},
+-    {1, arcs_44_7},
+-    {4, arcs_44_8},
+-    {1, arcs_44_9},
+-    {1, arcs_44_10},
+-    {1, arcs_44_11},
+-    {2, arcs_44_12},
+-};
+-static arc arcs_45_0[1] = {
+-    {106, 1},
+-};
+-static arc arcs_45_1[1] = {
+-    {107, 2},
+-};
+-static arc arcs_45_2[2] = {
+-    {32, 1},
+-    {27, 3},
+-};
+-static arc arcs_45_3[1] = {
+-    {28, 4},
+-};
+-static arc arcs_45_4[1] = {
+-    {0, 4},
+-};
+-static state states_45[5] = {
+-    {1, arcs_45_0},
+-    {1, arcs_45_1},
+-    {2, arcs_45_2},
+-    {1, arcs_45_3},
+-    {1, arcs_45_4},
+-};
+-static arc arcs_46_0[1] = {
+-    {26, 1},
+-};
+-static arc arcs_46_1[2] = {
+-    {86, 2},
+-    {0, 1},
+-};
+-static arc arcs_46_2[1] = {
+-    {108, 3},
+-};
+-static arc arcs_46_3[1] = {
+-    {0, 3},
+-};
+-static state states_46[4] = {
++static state states_46[13] = {
+     {1, arcs_46_0},
+-    {2, arcs_46_1},
++    {1, arcs_46_1},
+     {1, arcs_46_2},
+-    {1, arcs_46_3},
++    {2, arcs_46_3},
++    {1, arcs_46_4},
++    {1, arcs_46_5},
++    {1, arcs_46_6},
++    {1, arcs_46_7},
++    {4, arcs_46_8},
++    {1, arcs_46_9},
++    {1, arcs_46_10},
++    {1, arcs_46_11},
++    {2, arcs_46_12},
+ };
+ static arc arcs_47_0[1] = {
+-    {109, 1},
++    {110, 1},
+ };
+-static arc arcs_47_1[2] = {
+-    {26, 2},
+-    {0, 1},
++static arc arcs_47_1[1] = {
++    {111, 2},
+ };
+ static arc arcs_47_2[2] = {
+-    {86, 3},
+-    {0, 2},
++    {32, 1},
++    {27, 3},
+ };
+ static arc arcs_47_3[1] = {
+-    {23, 4},
++    {28, 4},
+ };
+ static arc arcs_47_4[1] = {
+     {0, 4},
+ };
+ static state states_47[5] = {
+     {1, arcs_47_0},
+-    {2, arcs_47_1},
++    {1, arcs_47_1},
+     {2, arcs_47_2},
+     {1, arcs_47_3},
+     {1, arcs_47_4},
+ };
+-static arc arcs_48_0[2] = {
+-    {3, 1},
+-    {2, 2},
++static arc arcs_48_0[1] = {
++    {26, 1},
+ };
+-static arc arcs_48_1[1] = {
++static arc arcs_48_1[2] = {
++    {90, 2},
+     {0, 1},
+ };
+ static arc arcs_48_2[1] = {
+-    {110, 3},
++    {112, 3},
+ };
+ static arc arcs_48_3[1] = {
+-    {6, 4},
+-};
+-static arc arcs_48_4[2] = {
+-    {6, 4},
+-    {111, 1},
++    {0, 3},
+ };
+-static state states_48[5] = {
+-    {2, arcs_48_0},
+-    {1, arcs_48_1},
++static state states_48[4] = {
++    {1, arcs_48_0},
++    {2, arcs_48_1},
+     {1, arcs_48_2},
+     {1, arcs_48_3},
+-    {2, arcs_48_4},
+ };
+-static arc arcs_49_0[2] = {
+-    {112, 1},
+-    {113, 2},
++static arc arcs_49_0[1] = {
++    {113, 1},
+ };
+ static arc arcs_49_1[2] = {
+-    {97, 3},
++    {26, 2},
+     {0, 1},
+ };
+-static arc arcs_49_2[1] = {
++static arc arcs_49_2[2] = {
++    {90, 3},
+     {0, 2},
+ };
+ static arc arcs_49_3[1] = {
+-    {112, 4},
++    {23, 4},
+ };
+ static arc arcs_49_4[1] = {
+-    {99, 5},
+-};
+-static arc arcs_49_5[1] = {
+-    {26, 2},
++    {0, 4},
+ };
+-static state states_49[6] = {
+-    {2, arcs_49_0},
++static state states_49[5] = {
++    {1, arcs_49_0},
+     {2, arcs_49_1},
+-    {1, arcs_49_2},
++    {2, arcs_49_2},
+     {1, arcs_49_3},
+     {1, arcs_49_4},
+-    {1, arcs_49_5},
+ };
+ static arc arcs_50_0[2] = {
+-    {112, 1},
+-    {115, 1},
++    {3, 1},
++    {2, 2},
+ };
+ static arc arcs_50_1[1] = {
+     {0, 1},
+ };
+-static state states_50[2] = {
++static arc arcs_50_2[1] = {
++    {114, 3},
++};
++static arc arcs_50_3[1] = {
++    {6, 4},
++};
++static arc arcs_50_4[2] = {
++    {6, 4},
++    {115, 1},
++};
++static state states_50[5] = {
+     {2, arcs_50_0},
+     {1, arcs_50_1},
++    {1, arcs_50_2},
++    {1, arcs_50_3},
++    {2, arcs_50_4},
+ };
+-static arc arcs_51_0[1] = {
++static arc arcs_51_0[2] = {
+     {116, 1},
++    {117, 2},
+ };
+ static arc arcs_51_1[2] = {
+-    {35, 2},
+-    {27, 3},
++    {101, 3},
++    {0, 1},
+ };
+ static arc arcs_51_2[1] = {
+-    {27, 3},
++    {0, 2},
+ };
+ static arc arcs_51_3[1] = {
+-    {26, 4},
++    {116, 4},
+ };
+ static arc arcs_51_4[1] = {
+-    {0, 4},
++    {103, 5},
+ };
+-static state states_51[5] = {
+-    {1, arcs_51_0},
++static arc arcs_51_5[1] = {
++    {26, 2},
++};
++static state states_51[6] = {
++    {2, arcs_51_0},
+     {2, arcs_51_1},
+     {1, arcs_51_2},
+     {1, arcs_51_3},
+     {1, arcs_51_4},
++    {1, arcs_51_5},
+ };
+-static arc arcs_52_0[1] = {
++static arc arcs_52_0[2] = {
+     {116, 1},
++    {119, 1},
+ };
+-static arc arcs_52_1[2] = {
++static arc arcs_52_1[1] = {
++    {0, 1},
++};
++static state states_52[2] = {
++    {2, arcs_52_0},
++    {1, arcs_52_1},
++};
++static arc arcs_53_0[1] = {
++    {120, 1},
++};
++static arc arcs_53_1[2] = {
+     {35, 2},
+     {27, 3},
+ };
+-static arc arcs_52_2[1] = {
++static arc arcs_53_2[1] = {
+     {27, 3},
+ };
+-static arc arcs_52_3[1] = {
+-    {114, 4},
++static arc arcs_53_3[1] = {
++    {26, 4},
+ };
+-static arc arcs_52_4[1] = {
++static arc arcs_53_4[1] = {
+     {0, 4},
+ };
+-static state states_52[5] = {
+-    {1, arcs_52_0},
+-    {2, arcs_52_1},
+-    {1, arcs_52_2},
+-    {1, arcs_52_3},
+-    {1, arcs_52_4},
+-};
+-static arc arcs_53_0[1] = {
+-    {117, 1},
+-};
+-static arc arcs_53_1[2] = {
+-    {118, 0},
+-    {0, 1},
+-};
+-static state states_53[2] = {
++static state states_53[5] = {
+     {1, arcs_53_0},
+     {2, arcs_53_1},
++    {1, arcs_53_2},
++    {1, arcs_53_3},
++    {1, arcs_53_4},
+ };
+ static arc arcs_54_0[1] = {
+-    {119, 1},
++    {120, 1},
+ };
+ static arc arcs_54_1[2] = {
+-    {120, 0},
+-    {0, 1},
++    {35, 2},
++    {27, 3},
++};
++static arc arcs_54_2[1] = {
++    {27, 3},
+ };
+-static state states_54[2] = {
++static arc arcs_54_3[1] = {
++    {118, 4},
++};
++static arc arcs_54_4[1] = {
++    {0, 4},
++};
++static state states_54[5] = {
+     {1, arcs_54_0},
+     {2, arcs_54_1},
++    {1, arcs_54_2},
++    {1, arcs_54_3},
++    {1, arcs_54_4},
+ };
+-static arc arcs_55_0[2] = {
++static arc arcs_55_0[1] = {
+     {121, 1},
+-    {122, 2},
+-};
+-static arc arcs_55_1[1] = {
+-    {119, 2},
+ };
+-static arc arcs_55_2[1] = {
+-    {0, 2},
++static arc arcs_55_1[2] = {
++    {122, 0},
++    {0, 1},
+ };
+-static state states_55[3] = {
+-    {2, arcs_55_0},
+-    {1, arcs_55_1},
+-    {1, arcs_55_2},
++static state states_55[2] = {
++    {1, arcs_55_0},
++    {2, arcs_55_1},
+ };
+ static arc arcs_56_0[1] = {
+-    {108, 1},
++    {123, 1},
+ };
+ static arc arcs_56_1[2] = {
+-    {123, 0},
++    {124, 0},
+     {0, 1},
+ };
+ static state states_56[2] = {
+     {1, arcs_56_0},
+     {2, arcs_56_1},
+ };
+-static arc arcs_57_0[10] = {
+-    {124, 1},
++static arc arcs_57_0[2] = {
+     {125, 1},
+-    {126, 1},
+-    {127, 1},
+-    {128, 1},
+-    {129, 1},
+-    {130, 1},
+-    {102, 1},
+-    {121, 2},
+-    {131, 3},
++    {126, 2},
+ };
+ static arc arcs_57_1[1] = {
+-    {0, 1},
++    {123, 2},
+ };
+ static arc arcs_57_2[1] = {
+-    {102, 1},
+-};
+-static arc arcs_57_3[2] = {
+-    {121, 1},
+-    {0, 3},
++    {0, 2},
+ };
+-static state states_57[4] = {
+-    {10, arcs_57_0},
++static state states_57[3] = {
++    {2, arcs_57_0},
+     {1, arcs_57_1},
+     {1, arcs_57_2},
+-    {2, arcs_57_3},
+ };
+ static arc arcs_58_0[1] = {
+-    {33, 1},
+-};
+-static arc arcs_58_1[1] = {
+-    {108, 2},
++    {112, 1},
+ };
+-static arc arcs_58_2[1] = {
+-    {0, 2},
++static arc arcs_58_1[2] = {
++    {127, 0},
++    {0, 1},
+ };
+-static state states_58[3] = {
++static state states_58[2] = {
+     {1, arcs_58_0},
+-    {1, arcs_58_1},
+-    {1, arcs_58_2},
++    {2, arcs_58_1},
+ };
+-static arc arcs_59_0[1] = {
++static arc arcs_59_0[10] = {
++    {128, 1},
++    {129, 1},
++    {130, 1},
++    {131, 1},
+     {132, 1},
++    {133, 1},
++    {134, 1},
++    {106, 1},
++    {125, 2},
++    {135, 3},
+ };
+-static arc arcs_59_1[2] = {
+-    {133, 0},
++static arc arcs_59_1[1] = {
+     {0, 1},
+ };
+-static state states_59[2] = {
+-    {1, arcs_59_0},
+-    {2, arcs_59_1},
++static arc arcs_59_2[1] = {
++    {106, 1},
++};
++static arc arcs_59_3[2] = {
++    {125, 1},
++    {0, 3},
++};
++static state states_59[4] = {
++    {10, arcs_59_0},
++    {1, arcs_59_1},
++    {1, arcs_59_2},
++    {2, arcs_59_3},
+ };
+ static arc arcs_60_0[1] = {
+-    {134, 1},
++    {33, 1},
+ };
+-static arc arcs_60_1[2] = {
+-    {135, 0},
+-    {0, 1},
++static arc arcs_60_1[1] = {
++    {112, 2},
++};
++static arc arcs_60_2[1] = {
++    {0, 2},
+ };
+-static state states_60[2] = {
++static state states_60[3] = {
+     {1, arcs_60_0},
+-    {2, arcs_60_1},
++    {1, arcs_60_1},
++    {1, arcs_60_2},
+ };
+ static arc arcs_61_0[1] = {
+     {136, 1},
+@@ -1361,742 +1361,768 @@ static state states_61[2] = {
+ static arc arcs_62_0[1] = {
+     {138, 1},
+ };
+-static arc arcs_62_1[3] = {
++static arc arcs_62_1[2] = {
+     {139, 0},
+-    {140, 0},
+     {0, 1},
+ };
+ static state states_62[2] = {
+     {1, arcs_62_0},
+-    {3, arcs_62_1},
++    {2, arcs_62_1},
+ };
+ static arc arcs_63_0[1] = {
+-    {141, 1},
++    {140, 1},
+ };
+-static arc arcs_63_1[3] = {
+-    {142, 0},
+-    {143, 0},
++static arc arcs_63_1[2] = {
++    {141, 0},
+     {0, 1},
+ };
+ static state states_63[2] = {
+     {1, arcs_63_0},
+-    {3, arcs_63_1},
++    {2, arcs_63_1},
+ };
+ static arc arcs_64_0[1] = {
+-    {144, 1},
++    {142, 1},
+ };
+-static arc arcs_64_1[6] = {
+-    {33, 0},
+-    {11, 0},
+-    {145, 0},
+-    {146, 0},
+-    {147, 0},
++static arc arcs_64_1[3] = {
++    {143, 0},
++    {144, 0},
+     {0, 1},
+ };
+ static state states_64[2] = {
+     {1, arcs_64_0},
+-    {6, arcs_64_1},
++    {3, arcs_64_1},
+ };
+-static arc arcs_65_0[4] = {
+-    {142, 1},
+-    {143, 1},
++static arc arcs_65_0[1] = {
++    {145, 1},
++};
++static arc arcs_65_1[3] = {
++    {146, 0},
++    {147, 0},
++    {0, 1},
++};
++static state states_65[2] = {
++    {1, arcs_65_0},
++    {3, arcs_65_1},
++};
++static arc arcs_66_0[1] = {
+     {148, 1},
+-    {149, 2},
+ };
+-static arc arcs_65_1[1] = {
+-    {144, 2},
++static arc arcs_66_1[6] = {
++    {33, 0},
++    {11, 0},
++    {149, 0},
++    {150, 0},
++    {151, 0},
++    {0, 1},
++};
++static state states_66[2] = {
++    {1, arcs_66_0},
++    {6, arcs_66_1},
++};
++static arc arcs_67_0[4] = {
++    {146, 1},
++    {147, 1},
++    {152, 1},
++    {153, 2},
++};
++static arc arcs_67_1[1] = {
++    {148, 2},
+ };
+-static arc arcs_65_2[1] = {
++static arc arcs_67_2[1] = {
+     {0, 2},
+ };
+-static state states_65[3] = {
+-    {4, arcs_65_0},
+-    {1, arcs_65_1},
+-    {1, arcs_65_2},
++static state states_67[3] = {
++    {4, arcs_67_0},
++    {1, arcs_67_1},
++    {1, arcs_67_2},
+ };
+-static arc arcs_66_0[1] = {
+-    {150, 1},
++static arc arcs_68_0[1] = {
++    {154, 1},
+ };
+-static arc arcs_66_1[2] = {
++static arc arcs_68_1[2] = {
+     {34, 2},
+     {0, 1},
+ };
+-static arc arcs_66_2[1] = {
+-    {144, 3},
++static arc arcs_68_2[1] = {
++    {148, 3},
+ };
+-static arc arcs_66_3[1] = {
++static arc arcs_68_3[1] = {
+     {0, 3},
+ };
+-static state states_66[4] = {
+-    {1, arcs_66_0},
+-    {2, arcs_66_1},
+-    {1, arcs_66_2},
+-    {1, arcs_66_3},
++static state states_68[4] = {
++    {1, arcs_68_0},
++    {2, arcs_68_1},
++    {1, arcs_68_2},
++    {1, arcs_68_3},
+ };
+-static arc arcs_67_0[2] = {
+-    {151, 1},
+-    {152, 2},
++static arc arcs_69_0[2] = {
++    {155, 1},
++    {156, 2},
+ };
+-static arc arcs_67_1[1] = {
+-    {152, 2},
++static arc arcs_69_1[1] = {
++    {156, 2},
+ };
+-static arc arcs_67_2[2] = {
+-    {153, 2},
++static arc arcs_69_2[2] = {
++    {157, 2},
+     {0, 2},
+ };
+-static state states_67[3] = {
+-    {2, arcs_67_0},
+-    {1, arcs_67_1},
+-    {2, arcs_67_2},
++static state states_69[3] = {
++    {2, arcs_69_0},
++    {1, arcs_69_1},
++    {2, arcs_69_2},
+ };
+-static arc arcs_68_0[10] = {
++static arc arcs_70_0[10] = {
+     {13, 1},
+-    {155, 2},
+-    {157, 3},
++    {159, 2},
++    {161, 3},
+     {23, 4},
+-    {160, 4},
+-    {161, 5},
+-    {83, 4},
+-    {162, 4},
+-    {163, 4},
+     {164, 4},
++    {165, 5},
++    {87, 4},
++    {166, 4},
++    {167, 4},
++    {168, 4},
+ };
+-static arc arcs_68_1[3] = {
++static arc arcs_70_1[3] = {
+     {50, 6},
+-    {154, 6},
++    {158, 6},
+     {15, 4},
+ };
+-static arc arcs_68_2[2] = {
+-    {154, 7},
+-    {156, 4},
++static arc arcs_70_2[2] = {
++    {158, 7},
++    {160, 4},
+ };
+-static arc arcs_68_3[2] = {
+-    {158, 8},
+-    {159, 4},
++static arc arcs_70_3[2] = {
++    {162, 8},
++    {163, 4},
+ };
+-static arc arcs_68_4[1] = {
++static arc arcs_70_4[1] = {
+     {0, 4},
+ };
+-static arc arcs_68_5[2] = {
+-    {161, 5},
++static arc arcs_70_5[2] = {
++    {165, 5},
+     {0, 5},
+ };
+-static arc arcs_68_6[1] = {
++static arc arcs_70_6[1] = {
+     {15, 4},
+ };
+-static arc arcs_68_7[1] = {
+-    {156, 4},
++static arc arcs_70_7[1] = {
++    {160, 4},
+ };
+-static arc arcs_68_8[1] = {
+-    {159, 4},
++static arc arcs_70_8[1] = {
++    {163, 4},
+ };
+-static state states_68[9] = {
+-    {10, arcs_68_0},
+-    {3, arcs_68_1},
+-    {2, arcs_68_2},
+-    {2, arcs_68_3},
+-    {1, arcs_68_4},
+-    {2, arcs_68_5},
+-    {1, arcs_68_6},
+-    {1, arcs_68_7},
+-    {1, arcs_68_8},
++static state states_70[9] = {
++    {10, arcs_70_0},
++    {3, arcs_70_1},
++    {2, arcs_70_2},
++    {2, arcs_70_3},
++    {1, arcs_70_4},
++    {2, arcs_70_5},
++    {1, arcs_70_6},
++    {1, arcs_70_7},
++    {1, arcs_70_8},
+ };
+-static arc arcs_69_0[2] = {
++static arc arcs_71_0[2] = {
+     {26, 1},
+-    {51, 1},
++    {53, 1},
+ };
+-static arc arcs_69_1[3] = {
+-    {165, 2},
++static arc arcs_71_1[3] = {
++    {169, 2},
+     {32, 3},
+     {0, 1},
+ };
+-static arc arcs_69_2[1] = {
++static arc arcs_71_2[1] = {
+     {0, 2},
+ };
+-static arc arcs_69_3[3] = {
++static arc arcs_71_3[3] = {
+     {26, 4},
+-    {51, 4},
++    {53, 4},
+     {0, 3},
+ };
+-static arc arcs_69_4[2] = {
++static arc arcs_71_4[2] = {
+     {32, 3},
+     {0, 4},
+ };
+-static state states_69[5] = {
+-    {2, arcs_69_0},
+-    {3, arcs_69_1},
+-    {1, arcs_69_2},
+-    {3, arcs_69_3},
+-    {2, arcs_69_4},
++static state states_71[5] = {
++    {2, arcs_71_0},
++    {3, arcs_71_1},
++    {1, arcs_71_2},
++    {3, arcs_71_3},
++    {2, arcs_71_4},
+ };
+-static arc arcs_70_0[3] = {
++static arc arcs_72_0[3] = {
+     {13, 1},
+-    {155, 2},
+-    {82, 3},
++    {159, 2},
++    {86, 3},
+ };
+-static arc arcs_70_1[2] = {
++static arc arcs_72_1[2] = {
+     {14, 4},
+     {15, 5},
+ };
+-static arc arcs_70_2[1] = {
+-    {166, 6},
++static arc arcs_72_2[1] = {
++    {170, 6},
+ };
+-static arc arcs_70_3[1] = {
++static arc arcs_72_3[1] = {
+     {23, 5},
+ };
+-static arc arcs_70_4[1] = {
++static arc arcs_72_4[1] = {
+     {15, 5},
+ };
+-static arc arcs_70_5[1] = {
++static arc arcs_72_5[1] = {
+     {0, 5},
+ };
+-static arc arcs_70_6[1] = {
+-    {156, 5},
++static arc arcs_72_6[1] = {
++    {160, 5},
+ };
+-static state states_70[7] = {
+-    {3, arcs_70_0},
+-    {2, arcs_70_1},
+-    {1, arcs_70_2},
+-    {1, arcs_70_3},
+-    {1, arcs_70_4},
+-    {1, arcs_70_5},
+-    {1, arcs_70_6},
++static state states_72[7] = {
++    {3, arcs_72_0},
++    {2, arcs_72_1},
++    {1, arcs_72_2},
++    {1, arcs_72_3},
++    {1, arcs_72_4},
++    {1, arcs_72_5},
++    {1, arcs_72_6},
+ };
+-static arc arcs_71_0[1] = {
+-    {167, 1},
++static arc arcs_73_0[1] = {
++    {171, 1},
+ };
+-static arc arcs_71_1[2] = {
++static arc arcs_73_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_71_2[2] = {
+-    {167, 1},
++static arc arcs_73_2[2] = {
++    {171, 1},
+     {0, 2},
+ };
+-static state states_71[3] = {
+-    {1, arcs_71_0},
+-    {2, arcs_71_1},
+-    {2, arcs_71_2},
++static state states_73[3] = {
++    {1, arcs_73_0},
++    {2, arcs_73_1},
++    {2, arcs_73_2},
+ };
+-static arc arcs_72_0[2] = {
++static arc arcs_74_0[2] = {
+     {26, 1},
+     {27, 2},
+ };
+-static arc arcs_72_1[2] = {
++static arc arcs_74_1[2] = {
+     {27, 2},
+     {0, 1},
+ };
+-static arc arcs_72_2[3] = {
++static arc arcs_74_2[3] = {
+     {26, 3},
+-    {168, 4},
++    {172, 4},
+     {0, 2},
+ };
+-static arc arcs_72_3[2] = {
+-    {168, 4},
++static arc arcs_74_3[2] = {
++    {172, 4},
+     {0, 3},
+ };
+-static arc arcs_72_4[1] = {
++static arc arcs_74_4[1] = {
+     {0, 4},
+ };
+-static state states_72[5] = {
+-    {2, arcs_72_0},
+-    {2, arcs_72_1},
+-    {3, arcs_72_2},
+-    {2, arcs_72_3},
+-    {1, arcs_72_4},
++static state states_74[5] = {
++    {2, arcs_74_0},
++    {2, arcs_74_1},
++    {3, arcs_74_2},
++    {2, arcs_74_3},
++    {1, arcs_74_4},
+ };
+-static arc arcs_73_0[1] = {
++static arc arcs_75_0[1] = {
+     {27, 1},
+ };
+-static arc arcs_73_1[2] = {
++static arc arcs_75_1[2] = {
+     {26, 2},
+     {0, 1},
+ };
+-static arc arcs_73_2[1] = {
++static arc arcs_75_2[1] = {
+     {0, 2},
+ };
+-static state states_73[3] = {
+-    {1, arcs_73_0},
+-    {2, arcs_73_1},
+-    {1, arcs_73_2},
++static state states_75[3] = {
++    {1, arcs_75_0},
++    {2, arcs_75_1},
++    {1, arcs_75_2},
+ };
+-static arc arcs_74_0[2] = {
+-    {108, 1},
+-    {51, 1},
++static arc arcs_76_0[2] = {
++    {112, 1},
++    {53, 1},
+ };
+-static arc arcs_74_1[2] = {
++static arc arcs_76_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_74_2[3] = {
+-    {108, 1},
+-    {51, 1},
++static arc arcs_76_2[3] = {
++    {112, 1},
++    {53, 1},
+     {0, 2},
+ };
+-static state states_74[3] = {
+-    {2, arcs_74_0},
+-    {2, arcs_74_1},
+-    {3, arcs_74_2},
++static state states_76[3] = {
++    {2, arcs_76_0},
++    {2, arcs_76_1},
++    {3, arcs_76_2},
+ };
+-static arc arcs_75_0[1] = {
++static arc arcs_77_0[1] = {
+     {26, 1},
+ };
+-static arc arcs_75_1[2] = {
++static arc arcs_77_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_75_2[2] = {
++static arc arcs_77_2[2] = {
+     {26, 1},
+     {0, 2},
+ };
+-static state states_75[3] = {
+-    {1, arcs_75_0},
+-    {2, arcs_75_1},
+-    {2, arcs_75_2},
++static state states_77[3] = {
++    {1, arcs_77_0},
++    {2, arcs_77_1},
++    {2, arcs_77_2},
+ };
+-static arc arcs_76_0[3] = {
++static arc arcs_78_0[3] = {
+     {26, 1},
+     {34, 2},
+-    {51, 3},
++    {53, 3},
+ };
+-static arc arcs_76_1[4] = {
++static arc arcs_78_1[4] = {
+     {27, 4},
+-    {165, 5},
++    {169, 5},
+     {32, 6},
+     {0, 1},
+ };
+-static arc arcs_76_2[1] = {
+-    {108, 7},
++static arc arcs_78_2[1] = {
++    {112, 7},
+ };
+-static arc arcs_76_3[3] = {
+-    {165, 5},
++static arc arcs_78_3[3] = {
++    {169, 5},
+     {32, 6},
+     {0, 3},
+ };
+-static arc arcs_76_4[1] = {
++static arc arcs_78_4[1] = {
+     {26, 7},
+ };
+-static arc arcs_76_5[1] = {
++static arc arcs_78_5[1] = {
+     {0, 5},
+ };
+-static arc arcs_76_6[3] = {
++static arc arcs_78_6[3] = {
+     {26, 8},
+-    {51, 8},
++    {53, 8},
+     {0, 6},
+ };
+-static arc arcs_76_7[3] = {
+-    {165, 5},
++static arc arcs_78_7[3] = {
++    {169, 5},
+     {32, 9},
+     {0, 7},
+ };
+-static arc arcs_76_8[2] = {
++static arc arcs_78_8[2] = {
+     {32, 6},
+     {0, 8},
+ };
+-static arc arcs_76_9[3] = {
++static arc arcs_78_9[3] = {
+     {26, 10},
+     {34, 11},
+     {0, 9},
+ };
+-static arc arcs_76_10[1] = {
++static arc arcs_78_10[1] = {
+     {27, 12},
+ };
+-static arc arcs_76_11[1] = {
+-    {108, 13},
++static arc arcs_78_11[1] = {
++    {112, 13},
+ };
+-static arc arcs_76_12[1] = {
++static arc arcs_78_12[1] = {
+     {26, 13},
+ };
+-static arc arcs_76_13[2] = {
++static arc arcs_78_13[2] = {
+     {32, 9},
+     {0, 13},
+ };
+-static state states_76[14] = {
+-    {3, arcs_76_0},
+-    {4, arcs_76_1},
+-    {1, arcs_76_2},
+-    {3, arcs_76_3},
+-    {1, arcs_76_4},
+-    {1, arcs_76_5},
+-    {3, arcs_76_6},
+-    {3, arcs_76_7},
+-    {2, arcs_76_8},
+-    {3, arcs_76_9},
+-    {1, arcs_76_10},
+-    {1, arcs_76_11},
+-    {1, arcs_76_12},
+-    {2, arcs_76_13},
+-};
+-static arc arcs_77_0[1] = {
+-    {169, 1},
+-};
+-static arc arcs_77_1[1] = {
++static state states_78[14] = {
++    {3, arcs_78_0},
++    {4, arcs_78_1},
++    {1, arcs_78_2},
++    {3, arcs_78_3},
++    {1, arcs_78_4},
++    {1, arcs_78_5},
++    {3, arcs_78_6},
++    {3, arcs_78_7},
++    {2, arcs_78_8},
++    {3, arcs_78_9},
++    {1, arcs_78_10},
++    {1, arcs_78_11},
++    {1, arcs_78_12},
++    {2, arcs_78_13},
++};
++static arc arcs_79_0[1] = {
++    {173, 1},
++};
++static arc arcs_79_1[1] = {
+     {23, 2},
+ };
+-static arc arcs_77_2[2] = {
++static arc arcs_79_2[2] = {
+     {13, 3},
+     {27, 4},
+ };
+-static arc arcs_77_3[2] = {
++static arc arcs_79_3[2] = {
+     {14, 5},
+     {15, 6},
+ };
+-static arc arcs_77_4[1] = {
++static arc arcs_79_4[1] = {
+     {28, 7},
+ };
+-static arc arcs_77_5[1] = {
++static arc arcs_79_5[1] = {
+     {15, 6},
+ };
+-static arc arcs_77_6[1] = {
++static arc arcs_79_6[1] = {
+     {27, 4},
+ };
+-static arc arcs_77_7[1] = {
++static arc arcs_79_7[1] = {
+     {0, 7},
+ };
+-static state states_77[8] = {
+-    {1, arcs_77_0},
+-    {1, arcs_77_1},
+-    {2, arcs_77_2},
+-    {2, arcs_77_3},
+-    {1, arcs_77_4},
+-    {1, arcs_77_5},
+-    {1, arcs_77_6},
+-    {1, arcs_77_7},
+-};
+-static arc arcs_78_0[1] = {
+-    {170, 1},
++static state states_79[8] = {
++    {1, arcs_79_0},
++    {1, arcs_79_1},
++    {2, arcs_79_2},
++    {2, arcs_79_3},
++    {1, arcs_79_4},
++    {1, arcs_79_5},
++    {1, arcs_79_6},
++    {1, arcs_79_7},
++};
++static arc arcs_80_0[1] = {
++    {174, 1},
+ };
+-static arc arcs_78_1[2] = {
++static arc arcs_80_1[2] = {
+     {32, 2},
+     {0, 1},
+ };
+-static arc arcs_78_2[2] = {
+-    {170, 1},
++static arc arcs_80_2[2] = {
++    {174, 1},
+     {0, 2},
+ };
+-static state states_78[3] = {
+-    {1, arcs_78_0},
+-    {2, arcs_78_1},
+-    {2, arcs_78_2},
++static state states_80[3] = {
++    {1, arcs_80_0},
++    {2, arcs_80_1},
++    {2, arcs_80_2},
+ };
+-static arc arcs_79_0[3] = {
++static arc arcs_81_0[3] = {
+     {26, 1},
+     {34, 2},
+     {33, 2},
+ };
+-static arc arcs_79_1[3] = {
+-    {165, 3},
++static arc arcs_81_1[3] = {
++    {169, 3},
+     {31, 2},
+     {0, 1},
+ };
+-static arc arcs_79_2[1] = {
++static arc arcs_81_2[1] = {
+     {26, 3},
+ };
+-static arc arcs_79_3[1] = {
++static arc arcs_81_3[1] = {
+     {0, 3},
+ };
+-static state states_79[4] = {
+-    {3, arcs_79_0},
+-    {3, arcs_79_1},
+-    {1, arcs_79_2},
+-    {1, arcs_79_3},
++static state states_81[4] = {
++    {3, arcs_81_0},
++    {3, arcs_81_1},
++    {1, arcs_81_2},
++    {1, arcs_81_3},
+ };
+-static arc arcs_80_0[2] = {
+-    {165, 1},
+-    {172, 1},
++static arc arcs_82_0[2] = {
++    {169, 1},
++    {176, 1},
+ };
+-static arc arcs_80_1[1] = {
++static arc arcs_82_1[1] = {
+     {0, 1},
+ };
+-static state states_80[2] = {
+-    {2, arcs_80_0},
+-    {1, arcs_80_1},
++static state states_82[2] = {
++    {2, arcs_82_0},
++    {1, arcs_82_1},
+ };
+-static arc arcs_81_0[2] = {
++static arc arcs_83_0[2] = {
+     {21, 1},
+-    {101, 2},
++    {105, 2},
+ };
+-static arc arcs_81_1[1] = {
+-    {101, 2},
++static arc arcs_83_1[1] = {
++    {105, 2},
+ };
+-static arc arcs_81_2[1] = {
+-    {66, 3},
++static arc arcs_83_2[1] = {
++    {68, 3},
+ };
+-static arc arcs_81_3[1] = {
+-    {102, 4},
++static arc arcs_83_3[1] = {
++    {106, 4},
+ };
+-static arc arcs_81_4[1] = {
+-    {112, 5},
++static arc arcs_83_4[1] = {
++    {116, 5},
+ };
+-static arc arcs_81_5[2] = {
+-    {171, 6},
++static arc arcs_83_5[2] = {
++    {175, 6},
+     {0, 5},
+ };
+-static arc arcs_81_6[1] = {
++static arc arcs_83_6[1] = {
+     {0, 6},
+ };
+-static state states_81[7] = {
+-    {2, arcs_81_0},
+-    {1, arcs_81_1},
+-    {1, arcs_81_2},
+-    {1, arcs_81_3},
+-    {1, arcs_81_4},
+-    {2, arcs_81_5},
+-    {1, arcs_81_6},
++static state states_83[7] = {
++    {2, arcs_83_0},
++    {1, arcs_83_1},
++    {1, arcs_83_2},
++    {1, arcs_83_3},
++    {1, arcs_83_4},
++    {2, arcs_83_5},
++    {1, arcs_83_6},
+ };
+-static arc arcs_82_0[1] = {
+-    {97, 1},
++static arc arcs_84_0[1] = {
++    {101, 1},
+ };
+-static arc arcs_82_1[1] = {
+-    {114, 2},
++static arc arcs_84_1[1] = {
++    {118, 2},
+ };
+-static arc arcs_82_2[2] = {
+-    {171, 3},
++static arc arcs_84_2[2] = {
++    {175, 3},
+     {0, 2},
+ };
+-static arc arcs_82_3[1] = {
++static arc arcs_84_3[1] = {
+     {0, 3},
+ };
+-static state states_82[4] = {
+-    {1, arcs_82_0},
+-    {1, arcs_82_1},
+-    {2, arcs_82_2},
+-    {1, arcs_82_3},
++static state states_84[4] = {
++    {1, arcs_84_0},
++    {1, arcs_84_1},
++    {2, arcs_84_2},
++    {1, arcs_84_3},
+ };
+-static arc arcs_83_0[1] = {
++static arc arcs_85_0[1] = {
+     {23, 1},
+ };
+-static arc arcs_83_1[1] = {
++static arc arcs_85_1[1] = {
+     {0, 1},
+ };
+-static state states_83[2] = {
+-    {1, arcs_83_0},
+-    {1, arcs_83_1},
++static state states_85[2] = {
++    {1, arcs_85_0},
++    {1, arcs_85_1},
+ };
+-static arc arcs_84_0[1] = {
+-    {174, 1},
++static arc arcs_86_0[1] = {
++    {178, 1},
+ };
+-static arc arcs_84_1[2] = {
+-    {175, 2},
++static arc arcs_86_1[2] = {
++    {179, 2},
+     {0, 1},
+ };
+-static arc arcs_84_2[1] = {
++static arc arcs_86_2[1] = {
+     {0, 2},
+ };
+-static state states_84[3] = {
+-    {1, arcs_84_0},
+-    {2, arcs_84_1},
+-    {1, arcs_84_2},
++static state states_86[3] = {
++    {1, arcs_86_0},
++    {2, arcs_86_1},
++    {1, arcs_86_2},
+ };
+-static arc arcs_85_0[2] = {
+-    {77, 1},
++static arc arcs_87_0[2] = {
++    {81, 1},
+     {9, 2},
+ };
+-static arc arcs_85_1[1] = {
++static arc arcs_87_1[1] = {
+     {26, 2},
+ };
+-static arc arcs_85_2[1] = {
++static arc arcs_87_2[1] = {
+     {0, 2},
+ };
+-static state states_85[3] = {
+-    {2, arcs_85_0},
+-    {1, arcs_85_1},
+-    {1, arcs_85_2},
++static state states_87[3] = {
++    {2, arcs_87_0},
++    {1, arcs_87_1},
++    {1, arcs_87_2},
+ };
+-static dfa dfas[86] = {
++static dfa dfas[88] = {
+     {256, "single_input", 0, 3, states_0,
+-     "\004\050\340\000\002\000\000\000\012\076\011\007\262\004\020\002\000\300\220\050\037\102"},
++     "\004\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     {257, "file_input", 0, 2, states_1,
+-     "\204\050\340\000\002\000\000\000\012\076\011\007\262\004\020\002\000\300\220\050\037\102"},
++     "\204\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     {258, "eval_input", 0, 3, states_2,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     {259, "decorator", 0, 7, states_3,
+-     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {260, "decorators", 0, 2, states_4,
+-     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {261, "decorated", 0, 3, states_5,
+-     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {262, "async_funcdef", 0, 3, states_6,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {263, "funcdef", 0, 8, states_7,
+-     "\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {264, "parameters", 0, 4, states_8,
+-     "\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {265, "typedargslist", 0, 19, states_9,
+-     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {266, "tfpdef", 0, 4, states_10,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {267, "varargslist", 0, 19, states_11,
+-     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {268, "vfpdef", 0, 2, states_12,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {269, "stmt", 0, 2, states_13,
+-     "\000\050\340\000\002\000\000\000\012\076\011\007\262\004\020\002\000\300\220\050\037\102"},
++     "\000\050\340\000\002\000\000\000\210\340\223\160\040\113\000\041\000\000\014\211\362\041\004"},
+     {270, "simple_stmt", 0, 4, states_14,
+-     "\000\040\200\000\002\000\000\000\012\076\011\007\000\000\020\002\000\300\220\050\037\100"},
++     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
+     {271, "small_stmt", 0, 2, states_15,
+-     "\000\040\200\000\002\000\000\000\012\076\011\007\000\000\020\002\000\300\220\050\037\100"},
++     "\000\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
+     {272, "expr_stmt", 0, 6, states_16,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     {273, "annassign", 0, 5, states_17,
+-     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {274, "testlist_star_expr", 0, 3, states_18,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
+     {275, "augassign", 0, 2, states_19,
+-     "\000\000\000\000\000\000\360\377\001\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++     "\000\000\000\000\000\000\300\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+     {276, "del_stmt", 0, 3, states_20,
+-     "\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {277, "pass_stmt", 0, 2, states_21,
+-     "\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {278, "flow_stmt", 0, 2, states_22,
+-     "\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\000\000\000\000\000\000\100"},
+-    {279, "break_stmt", 0, 2, states_23,
+-     "\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {280, "continue_stmt", 0, 2, states_24,
+-     "\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {281, "return_stmt", 0, 3, states_25,
+-     "\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {282, "yield_stmt", 0, 2, states_26,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\100"},
+-    {283, "raise_stmt", 0, 5, states_27,
+-     "\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {284, "import_stmt", 0, 2, states_28,
+-     "\000\000\000\000\000\000\000\000\000\040\001\000\000\000\000\000\000\000\000\000\000\000"},
+-    {285, "import_name", 0, 3, states_29,
+-     "\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"},
+-    {286, "import_from", 0, 8, states_30,
+-     "\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {287, "import_as_name", 0, 4, states_31,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {288, "dotted_as_name", 0, 4, states_32,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {289, "import_as_names", 0, 3, states_33,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {290, "dotted_as_names", 0, 2, states_34,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {291, "dotted_name", 0, 2, states_35,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {292, "global_stmt", 0, 3, states_36,
+-     "\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000"},
+-    {293, "nonlocal_stmt", 0, 3, states_37,
+-     "\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000"},
+-    {294, "assert_stmt", 0, 5, states_38,
+-     "\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000"},
+-    {295, "compound_stmt", 0, 2, states_39,
+-     "\000\010\140\000\000\000\000\000\000\000\000\000\262\004\000\000\000\000\000\000\000\002"},
+-    {296, "async_stmt", 0, 3, states_40,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {297, "if_stmt", 0, 8, states_41,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
+-    {298, "while_stmt", 0, 8, states_42,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000"},
+-    {299, "for_stmt", 0, 10, states_43,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000"},
+-    {300, "try_stmt", 0, 13, states_44,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000"},
+-    {301, "with_stmt", 0, 5, states_45,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000"},
+-    {302, "with_item", 0, 4, states_46,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {303, "except_clause", 0, 5, states_47,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000"},
+-    {304, "suite", 0, 5, states_48,
+-     "\004\040\200\000\002\000\000\000\012\076\011\007\000\000\020\002\000\300\220\050\037\100"},
+-    {305, "test", 0, 6, states_49,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {306, "test_nocond", 0, 2, states_50,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {307, "lambdef", 0, 5, states_51,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000"},
+-    {308, "lambdef_nocond", 0, 5, states_52,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000"},
+-    {309, "or_test", 0, 2, states_53,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\002\000\300\220\050\037\000"},
+-    {310, "and_test", 0, 2, states_54,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\002\000\300\220\050\037\000"},
+-    {311, "not_test", 0, 3, states_55,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\002\000\300\220\050\037\000"},
+-    {312, "comparison", 0, 2, states_56,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {313, "comp_op", 0, 4, states_57,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\362\017\000\000\000\000\000"},
+-    {314, "star_expr", 0, 3, states_58,
+-     "\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {315, "expr", 0, 2, states_59,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {316, "xor_expr", 0, 2, states_60,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {317, "and_expr", 0, 2, states_61,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {318, "shift_expr", 0, 2, states_62,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {319, "arith_expr", 0, 2, states_63,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {320, "term", 0, 2, states_64,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {321, "factor", 0, 3, states_65,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {322, "power", 0, 4, states_66,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\200\050\037\000"},
+-    {323, "atom_expr", 0, 3, states_67,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\200\050\037\000"},
+-    {324, "atom", 0, 9, states_68,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\050\037\000"},
+-    {325, "testlist_comp", 0, 5, states_69,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {326, "trailer", 0, 7, states_70,
+-     "\000\040\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\010\000\000"},
+-    {327, "subscriptlist", 0, 3, states_71,
+-     "\000\040\200\010\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {328, "subscript", 0, 5, states_72,
+-     "\000\040\200\010\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {329, "sliceop", 0, 3, states_73,
+-     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {330, "exprlist", 0, 3, states_74,
+-     "\000\040\200\000\002\000\000\000\000\000\010\000\000\000\000\000\000\300\220\050\037\000"},
+-    {331, "testlist", 0, 3, states_75,
+-     "\000\040\200\000\000\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {332, "dictorsetmaker", 0, 14, states_76,
+-     "\000\040\200\000\006\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {333, "classdef", 0, 8, states_77,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"},
+-    {334, "arglist", 0, 3, states_78,
+-     "\000\040\200\000\006\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {335, "argument", 0, 4, states_79,
+-     "\000\040\200\000\006\000\000\000\000\000\010\000\000\000\020\002\000\300\220\050\037\000"},
+-    {336, "comp_iter", 0, 2, states_80,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\042\000\000\000\000\000\000\000\000\000"},
+-    {337, "comp_for", 0, 7, states_81,
+-     "\000\000\040\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000"},
+-    {338, "comp_if", 0, 4, states_82,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
+-    {339, "encoding_decl", 0, 2, states_83,
+-     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
+-    {340, "yield_expr", 0, 3, states_84,
+-     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\100"},
+-    {341, "yield_arg", 0, 3, states_85,
+-     "\000\040\200\000\000\000\000\000\000\040\010\000\000\000\020\002\000\300\220\050\037\000"},
+-};
+-static label labels[176] = {
++     "\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {277, "incr_stmt", 0, 2, states_21,
++     "\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {278, "decr_stmt", 0, 2, states_22,
++     "\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {279, "pass_stmt", 0, 2, states_23,
++     "\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {280, "flow_stmt", 0, 2, states_24,
++     "\000\000\000\000\000\000\000\000\000\340\001\000\000\000\000\000\000\000\000\000\000\000\004"},
++    {281, "break_stmt", 0, 2, states_25,
++     "\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {282, "continue_stmt", 0, 2, states_26,
++     "\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {283, "return_stmt", 0, 3, states_27,
++     "\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {284, "yield_stmt", 0, 2, states_28,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004"},
++    {285, "raise_stmt", 0, 5, states_29,
++     "\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {286, "import_stmt", 0, 2, states_30,
++     "\000\000\000\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {287, "import_name", 0, 3, states_31,
++     "\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {288, "import_from", 0, 8, states_32,
++     "\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {289, "import_as_name", 0, 4, states_33,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {290, "dotted_as_name", 0, 4, states_34,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {291, "import_as_names", 0, 3, states_35,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {292, "dotted_as_names", 0, 2, states_36,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {293, "dotted_name", 0, 2, states_37,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {294, "global_stmt", 0, 3, states_38,
++     "\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000"},
++    {295, "nonlocal_stmt", 0, 3, states_39,
++     "\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000\000"},
++    {296, "assert_stmt", 0, 5, states_40,
++     "\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000\000\000"},
++    {297, "compound_stmt", 0, 2, states_41,
++     "\000\010\140\000\000\000\000\000\000\000\000\000\040\113\000\000\000\000\000\000\000\040\000"},
++    {298, "async_stmt", 0, 3, states_42,
++     "\000\000\040\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {299, "if_stmt", 0, 8, states_43,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000"},
++    {300, "while_stmt", 0, 8, states_44,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000"},
++    {301, "for_stmt", 0, 10, states_45,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
++    {302, "try_stmt", 0, 13, states_46,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000"},
++    {303, "with_stmt", 0, 5, states_47,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\000"},
++    {304, "with_item", 0, 4, states_48,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {305, "except_clause", 0, 5, states_49,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000"},
++    {306, "suite", 0, 5, states_50,
++     "\004\040\200\000\002\000\000\000\210\340\223\160\000\000\000\041\000\000\014\211\362\001\004"},
++    {307, "test", 0, 6, states_51,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {308, "test_nocond", 0, 2, states_52,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {309, "lambdef", 0, 5, states_53,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"},
++    {310, "lambdef_nocond", 0, 5, states_54,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"},
++    {311, "or_test", 0, 2, states_55,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
++    {312, "and_test", 0, 2, states_56,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
++    {313, "not_test", 0, 3, states_57,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\040\000\000\014\211\362\001\000"},
++    {314, "comparison", 0, 2, states_58,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {315, "comp_op", 0, 4, states_59,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\040\377\000\000\000\000\000\000"},
++    {316, "star_expr", 0, 3, states_60,
++     "\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {317, "expr", 0, 2, states_61,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {318, "xor_expr", 0, 2, states_62,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {319, "and_expr", 0, 2, states_63,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {320, "shift_expr", 0, 2, states_64,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {321, "arith_expr", 0, 2, states_65,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {322, "term", 0, 2, states_66,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {323, "factor", 0, 3, states_67,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {324, "power", 0, 4, states_68,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\210\362\001\000"},
++    {325, "atom_expr", 0, 3, states_69,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\210\362\001\000"},
++    {326, "atom", 0, 9, states_70,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\200\362\001\000"},
++    {327, "testlist_comp", 0, 5, states_71,
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {328, "trailer", 0, 7, states_72,
++     "\000\040\000\000\000\000\000\000\000\000\100\000\000\000\000\000\000\000\000\200\000\000\000"},
++    {329, "subscriptlist", 0, 3, states_73,
++     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {330, "subscript", 0, 5, states_74,
++     "\000\040\200\010\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {331, "sliceop", 0, 3, states_75,
++     "\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {332, "exprlist", 0, 3, states_76,
++     "\000\040\200\000\002\000\000\000\000\000\200\000\000\000\000\000\000\000\014\211\362\001\000"},
++    {333, "testlist", 0, 3, states_77,
++     "\000\040\200\000\000\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {334, "dictorsetmaker", 0, 14, states_78,
++     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {335, "classdef", 0, 8, states_79,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\040\000"},
++    {336, "arglist", 0, 3, states_80,
++     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {337, "argument", 0, 4, states_81,
++     "\000\040\200\000\006\000\000\000\000\000\200\000\000\000\000\041\000\000\014\211\362\001\000"},
++    {338, "comp_iter", 0, 2, states_82,
++     "\000\000\040\000\000\000\000\000\000\000\000\000\040\002\000\000\000\000\000\000\000\000\000"},
++    {339, "comp_for", 0, 7, states_83,
++     "\000\000\040\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000"},
++    {340, "comp_if", 0, 4, states_84,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\000\000\000"},
++    {341, "encoding_decl", 0, 2, states_85,
++     "\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"},
++    {342, "yield_expr", 0, 3, states_86,
++     "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004"},
++    {343, "yield_arg", 0, 3, states_87,
++     "\000\040\200\000\000\000\000\000\000\000\202\000\000\000\000\041\000\000\014\211\362\001\000"},
++};
++static label labels[180] = {
+     {0, "EMPTY"},
+     {256, 0},
+     {4, 0},
+     {270, 0},
+-    {295, 0},
++    {297, 0},
+     {257, 0},
+     {269, 0},
+     {0, 0},
+     {258, 0},
+-    {331, 0},
++    {333, 0},
+     {259, 0},
+     {49, 0},
+-    {291, 0},
++    {293, 0},
+     {7, 0},
+-    {334, 0},
++    {336, 0},
+     {8, 0},
+     {260, 0},
+     {261, 0},
+-    {333, 0},
++    {335, 0},
+     {263, 0},
+     {262, 0},
+     {55, 0},
+@@ -2104,9 +2130,9 @@ static label labels[176] = {
+     {1, 0},
+     {264, 0},
+     {51, 0},
+-    {305, 0},
++    {307, 0},
+     {11, 0},
+-    {304, 0},
++    {306, 0},
+     {265, 0},
+     {266, 0},
+     {22, 0},
+@@ -2119,17 +2145,19 @@ static label labels[176] = {
+     {13, 0},
+     {272, 0},
+     {276, 0},
+-    {277, 0},
+-    {278, 0},
+-    {284, 0},
+-    {292, 0},
+-    {293, 0},
++    {279, 0},
++    {280, 0},
++    {286, 0},
+     {294, 0},
++    {295, 0},
++    {296, 0},
+     {274, 0},
+     {273, 0},
+     {275, 0},
+-    {340, 0},
+-    {314, 0},
++    {342, 0},
++    {277, 0},
++    {278, 0},
++    {316, 0},
+     {36, 0},
+     {37, 0},
+     {38, 0},
+@@ -2144,37 +2172,39 @@ static label labels[176] = {
+     {46, 0},
+     {48, 0},
+     {1, "del"},
+-    {330, 0},
++    {332, 0},
++    {58, 0},
++    {59, 0},
+     {1, "pass"},
+-    {279, 0},
+-    {280, 0},
+     {281, 0},
+-    {283, 0},
+     {282, 0},
++    {283, 0},
++    {285, 0},
++    {284, 0},
+     {1, "break"},
+     {1, "continue"},
+     {1, "return"},
+     {1, "raise"},
+     {1, "from"},
+-    {285, 0},
+-    {286, 0},
++    {287, 0},
++    {288, 0},
+     {1, "import"},
+-    {290, 0},
++    {292, 0},
+     {23, 0},
+     {52, 0},
++    {291, 0},
+     {289, 0},
+-    {287, 0},
+     {1, "as"},
+-    {288, 0},
++    {290, 0},
+     {1, "global"},
+     {1, "nonlocal"},
+     {1, "assert"},
+-    {297, 0},
+-    {298, 0},
+     {299, 0},
+     {300, 0},
+     {301, 0},
+-    {296, 0},
++    {302, 0},
++    {303, 0},
++    {298, 0},
+     {1, "if"},
+     {1, "elif"},
+     {1, "else"},
+@@ -2182,26 +2212,26 @@ static label labels[176] = {
+     {1, "for"},
+     {1, "in"},
+     {1, "try"},
+-    {303, 0},
++    {305, 0},
+     {1, "finally"},
+     {1, "with"},
+-    {302, 0},
+-    {315, 0},
++    {304, 0},
++    {317, 0},
+     {1, "except"},
+     {5, 0},
+     {6, 0},
++    {311, 0},
+     {309, 0},
+-    {307, 0},
+-    {306, 0},
+     {308, 0},
+-    {1, "lambda"},
+     {310, 0},
++    {1, "lambda"},
++    {312, 0},
+     {1, "or"},
+-    {311, 0},
++    {313, 0},
+     {1, "and"},
+     {1, "not"},
+-    {312, 0},
+-    {313, 0},
++    {314, 0},
++    {315, 0},
+     {20, 0},
+     {21, 0},
+     {27, 0},
+@@ -2210,54 +2240,54 @@ static label labels[176] = {
+     {28, 0},
+     {28, 0},
+     {1, "is"},
+-    {316, 0},
++    {318, 0},
+     {18, 0},
+-    {317, 0},
++    {319, 0},
+     {32, 0},
+-    {318, 0},
++    {320, 0},
+     {19, 0},
+-    {319, 0},
++    {321, 0},
+     {33, 0},
+     {34, 0},
+-    {320, 0},
++    {322, 0},
+     {14, 0},
+     {15, 0},
+-    {321, 0},
++    {323, 0},
+     {17, 0},
+     {24, 0},
+     {47, 0},
+     {31, 0},
+-    {322, 0},
+-    {323, 0},
+-    {54, 0},
+     {324, 0},
+-    {326, 0},
+     {325, 0},
++    {54, 0},
++    {326, 0},
++    {328, 0},
++    {327, 0},
+     {9, 0},
+     {10, 0},
+     {25, 0},
+-    {332, 0},
++    {334, 0},
+     {26, 0},
+     {2, 0},
+     {3, 0},
+     {1, "None"},
+     {1, "True"},
+     {1, "False"},
+-    {337, 0},
+-    {327, 0},
+-    {328, 0},
++    {339, 0},
+     {329, 0},
++    {330, 0},
++    {331, 0},
+     {1, "class"},
+-    {335, 0},
+-    {336, 0},
++    {337, 0},
+     {338, 0},
+-    {339, 0},
+-    {1, "yield"},
++    {340, 0},
+     {341, 0},
++    {1, "yield"},
++    {343, 0},
+ };
+ grammar _PyParser_Grammar = {
+-    86,
++    88,
+     dfas,
+-    {176, labels},
++    {180, labels},
+     256
+ };
diff --git a/inc_1.patch b/inc_1.patch
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/inc_info.patch b/inc_info.patch
new file mode 100644
index 0000000000..bd1a429784
--- /dev/null
+++ b/inc_info.patch
@@ -0,0 +1 @@
+0001-incr-decr-patch.patch
